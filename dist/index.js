!function(g){function n(I){if(t[I])return t[I].exports;var e=t[I]={i:I,l:!1,exports:{}};return g[I].call(e.exports,e,e.exports,n),e.l=!0,e.exports}var t={};n.m=g,n.c=t,n.d=function(g,t,I){n.o(g,t)||Object.defineProperty(g,t,{configurable:!1,enumerable:!0,get:I})},n.n=function(g){var t=g&&g.__esModule?function(){return g.default}:function(){return g};return n.d(t,"a",t),t},n.o=function(g,n){return Object.prototype.hasOwnProperty.call(g,n)},n.p="",n(n.s=7)}([function(module,exports,__webpack_require__){"use strict";eval('Object.defineProperty(exports, "__esModule", { value: true });var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}var Log = function () {\n    function Log(name) {_classCallCheck(this, Log);\n        this.name = name;\n    }_createClass(Log, [{ key: "w", value: function w()\n        {var _console;for (var _len = arguments.length, msg = Array(_len), _key = 0; _key < _len; _key++) {msg[_key] = arguments[_key];}\n            (_console = console).warn.apply(_console, ["[" +\n            this.name + "]====> " + new Date().toTimeString() + "\\n              : "].concat(\n            msg));\n\n        } }, { key: "l", value: function l(\n        msg) {\n            console.log("[" +\n            this.name + "]====> " + new Date().toTimeString() + "\\n              : " +\n            msg);\n\n        } }, { key: "e", value: function e(\n        msg) {\n            console.error("[" +\n            this.name + "]====> " + new Date().toTimeString() + "\\n              : " +\n            msg);\n\n        } }, { key: "i", value: function i(\n        msg) {\n            console.info("[" +\n            this.name + "]====> " + new Date().toTimeString() + "\\n              : " +\n            msg);\n\n        } }]);return Log;}();exports.default =\n\n\nLog;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9saWIvbG9nLmpzP2JmYWYiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgTG9ne1xuICAgIGNvbnN0cnVjdG9yKG5hbWUpe1xuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgIH1cbiAgICB3KC4uLm1zZyl7XG4gICAgICAgIGNvbnNvbGUud2FybihcbmBbJHt0aGlzLm5hbWV9XT09PT0+ICR7bmV3IERhdGUoKS50b1RpbWVTdHJpbmcoKX1cbiAgICAgICAgICAgICAgOiBgLC4uLm1zZ1xuICAgICAgICAgICAgICApO1xuICAgIH1cbiAgICBsKG1zZyl7XG4gICAgICAgIGNvbnNvbGUubG9nKFxuYFske3RoaXMubmFtZX1dPT09PT4gJHtuZXcgRGF0ZSgpLnRvVGltZVN0cmluZygpfVxuICAgICAgICAgICAgICA6ICR7bXNnfWBcbiAgICAgICAgICAgICAgKTsgICAgICBcbiAgICB9XG4gICAgZShtc2cpe1xuICAgICAgICBjb25zb2xlLmVycm9yKFxuYFske3RoaXMubmFtZX1dPT09PT4gJHtuZXcgRGF0ZSgpLnRvVGltZVN0cmluZygpfVxuICAgICAgICAgICAgICA6ICR7bXNnfWBcbiAgICAgICAgICAgICAgKTsgICAgIFxuICAgIH1cbiAgICBpKG1zZyl7XG4gICAgICAgIGNvbnNvbGUuaW5mbyhcbmBbJHt0aGlzLm5hbWV9XT09PT0+ICR7bmV3IERhdGUoKS50b1RpbWVTdHJpbmcoKX1cbiAgICAgICAgICAgICAgOiAke21zZ31gXG4gICAgICAgICAgICAgICk7ICAgIFxuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgTG9nO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBsaWIvbG9nLmpzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///0\n')},function(module,exports,__webpack_require__){"use strict";eval("Object.defineProperty(exports, \"__esModule\", { value: true });var HTTPCANCEL = exports.HTTPCANCEL = 'HTTPCANCEL'; // abort the fetch event\n\n/**\n * three flags\n */\nvar CHUNKEDPROGRESS = exports.CHUNKEDPROGRESS = 'CHUNKEDPROGRESS'; // for chunk event\nvar CHUNKEDSTREAM = exports.CHUNKEDSTREAM = 'CHUNKEDSTREAM'; // for stream event\nvar CHUNKEDEND = exports.CHUNKEDEND = 'CHUNKEDEND'; // indicate the end of stream\nvar CHUNKEDERR = exports.CHUNKEDERR = 'CHUNKEDERR'; // indicate there is some error of stream//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9saWIvY29uc3RhbnRzLmpzPzNiMWQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IEhUVFBDQU5DRUwgPSAnSFRUUENBTkNFTCc7IC8vIGFib3J0IHRoZSBmZXRjaCBldmVudFxuXG4vKipcbiAqIHRocmVlIGZsYWdzXG4gKi9cbmV4cG9ydCBjb25zdCBDSFVOS0VEUFJPR1JFU1M9J0NIVU5LRURQUk9HUkVTUyc7IC8vIGZvciBjaHVuayBldmVudFxuZXhwb3J0IGNvbnN0IENIVU5LRURTVFJFQU09J0NIVU5LRURTVFJFQU0nOyAvLyBmb3Igc3RyZWFtIGV2ZW50XG5leHBvcnQgY29uc3QgQ0hVTktFREVORD0nQ0hVTktFREVORCc7ICAgLy8gaW5kaWNhdGUgdGhlIGVuZCBvZiBzdHJlYW1cbmV4cG9ydCBjb25zdCBDSFVOS0VERVJSPSdDSFVOS0VERVJSJzsgICAvLyBpbmRpY2F0ZSB0aGVyZSBpcyBzb21lIGVycm9yIG9mIHN0cmVhbVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBsaWIvY29uc3RhbnRzLmpzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1\n")},function(module,exports,__webpack_require__){"use strict";eval('Object.defineProperty(exports, "__esModule", { value: true });var mergeBuffer = exports.mergeBuffer = function mergeBuffer() {for (var _len = arguments.length, buffers = Array(_len), _key = 0; _key < _len; _key++) {buffers[_key] = arguments[_key];}\n    // buffers are arrayBuffer\n    var boxLength = buffers.reduce(function (pre, val) {\n        return pre + val.byteLength;\n    }, 0);\n\n    var buffer = new Uint8Array(boxLength);\n\n    var offset = 0;\n\n    buffers.forEach(function (box) {\n        buffer.set(new Uint8Array(box), offset);\n        offset += box.byteLength;\n    });\n\n\n    return buffer.buffer;\n};\n\n// get Unit8Array\n// return Unit8Array\nvar mergeTypedArray = exports.mergeTypedArray = function mergeTypedArray() {for (var _len2 = arguments.length, buffers = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {buffers[_key2] = arguments[_key2];}\n    // buffers are arrayBuffer\n    var boxLength = buffers.reduce(function (pre, val) {\n        return pre + val.byteLength;\n    }, 0);\n\n    var buffer = new Uint8Array(boxLength);\n\n    var offset = 0;\n\n    buffers.forEach(function (box) {\n        buffer.set(box, offset);\n        offset += box.byteLength;\n    });\n\n\n    return buffer;\n};\n\nvar mergeUnit8Array = exports.mergeUnit8Array = function mergeUnit8Array(buffers) {\n    // buffers are arrayBuffer\n    var boxLength = buffers.reduce(function (pre, val) {\n        return pre + val.byteLength;\n    }, 0);\n\n    var buffer = new Uint8Array(boxLength);\n\n    var offset = 0;\n\n    buffers.forEach(function (box) {\n        buffer.set(box, offset);\n        offset += box.byteLength;\n    });\n\n\n    return buffer;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9saWIvdXRpbHMuanM/NTBlMyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgbWVyZ2VCdWZmZXIgPSAoLi4uYnVmZmVycykgPT4ge1xuICAgIC8vIGJ1ZmZlcnMgYXJlIGFycmF5QnVmZmVyXG4gICAgbGV0IGJveExlbmd0aCA9IGJ1ZmZlcnMucmVkdWNlKChwcmUsIHZhbCkgPT4ge1xuICAgICAgICByZXR1cm4gcHJlICsgdmFsLmJ5dGVMZW5ndGg7XG4gICAgfSwgMCk7XG5cbiAgICBsZXQgYnVmZmVyID0gbmV3IFVpbnQ4QXJyYXkoYm94TGVuZ3RoKTtcblxuICAgIGxldCBvZmZzZXQgPSAwO1xuICAgIFxuICAgIGJ1ZmZlcnMuZm9yRWFjaChib3ggPT4ge1xuICAgICAgICBidWZmZXIuc2V0KG5ldyBVaW50OEFycmF5KGJveCksIG9mZnNldCk7XG4gICAgICAgIG9mZnNldCArPSBib3guYnl0ZUxlbmd0aDtcbiAgICB9KTtcblxuXG4gICAgcmV0dXJuIGJ1ZmZlci5idWZmZXI7XG59XG5cbi8vIGdldCBVbml0OEFycmF5XG4vLyByZXR1cm4gVW5pdDhBcnJheVxuZXhwb3J0IGNvbnN0IG1lcmdlVHlwZWRBcnJheSA9ICguLi5idWZmZXJzKSA9PiB7XG4gICAgLy8gYnVmZmVycyBhcmUgYXJyYXlCdWZmZXJcbiAgICBsZXQgYm94TGVuZ3RoID0gYnVmZmVycy5yZWR1Y2UoKHByZSwgdmFsKSA9PiB7XG4gICAgICAgIHJldHVybiBwcmUgKyB2YWwuYnl0ZUxlbmd0aDtcbiAgICB9LCAwKTtcblxuICAgIGxldCBidWZmZXIgPSBuZXcgVWludDhBcnJheShib3hMZW5ndGgpO1xuXG4gICAgbGV0IG9mZnNldCA9IDA7XG4gICAgXG4gICAgYnVmZmVycy5mb3JFYWNoKGJveCA9PiB7XG4gICAgICAgIGJ1ZmZlci5zZXQoYm94LCBvZmZzZXQpO1xuICAgICAgICBvZmZzZXQgKz0gYm94LmJ5dGVMZW5ndGg7XG4gICAgfSk7XG5cblxuICAgIHJldHVybiBidWZmZXI7XG59XG5cbmV4cG9ydCBjb25zdCBtZXJnZVVuaXQ4QXJyYXkgPSAoYnVmZmVycykgPT4ge1xuICAgIC8vIGJ1ZmZlcnMgYXJlIGFycmF5QnVmZmVyXG4gICAgbGV0IGJveExlbmd0aCA9IGJ1ZmZlcnMucmVkdWNlKChwcmUsIHZhbCkgPT4ge1xuICAgICAgICByZXR1cm4gcHJlICsgdmFsLmJ5dGVMZW5ndGg7XG4gICAgfSwgMCk7XG5cbiAgICBsZXQgYnVmZmVyID0gbmV3IFVpbnQ4QXJyYXkoYm94TGVuZ3RoKTtcblxuICAgIGxldCBvZmZzZXQgPSAwO1xuICAgIFxuICAgIGJ1ZmZlcnMuZm9yRWFjaChib3ggPT4ge1xuICAgICAgICBidWZmZXIuc2V0KGJveCwgb2Zmc2V0KTtcbiAgICAgICAgb2Zmc2V0ICs9IGJveC5ieXRlTGVuZ3RoO1xuICAgIH0pO1xuXG5cbiAgICByZXR1cm4gYnVmZmVyO1xufVxuXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gbGliL3V0aWxzLmpzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2\n')},function(module,exports,__webpack_require__){"use strict";eval("exports.download = function (mp4) {\n\tvar blob = new Blob(mp4, {\n\t\t// type: 'video/mp4'\n\t\ttype: 'application/octet-binary' });\n\n\tvar url = window.URL.createObjectURL(blob);\n\tvar a = document.createElement('a');\n\ta.style.display = 'none';\n\ta.href = url;\n\ta.download = 'test.mp4';\n\tdocument.body.appendChild(a);\n\ta.click();\n\tsetTimeout(function () {\n\t\tdocument.body.removeChild(a);\n\t\twindow.URL.revokeObjectURL(url);\n\t}, 100);\n};\n\nexports.downfile = function (buffer, type) {\n\tvar mp4 = new File([buffer], 'ce.mp4', {\n\t\ttype: 'video/mp4' });\n\n\tvar url = window.URL.createObjectURL(mp4);\n\tvar a = document.createElement('a');\n\ta.style.display = 'none';\n\ta.href = url;\n\ta.download = type + '.mp4';\n\tdocument.body.appendChild(a);\n\ta.click();\n\tsetTimeout(function () {\n\t\tdocument.body.removeChild(a);\n\t\twindow.URL.revokeObjectURL(url);\n\t}, 100);\n};\n\nexports.downFLV = function (buffer, type) {\n\tvar mp4 = new File([buffer], 'ce.flv', {\n\t\ttype: 'video/x-flv' });\n\n\tvar url = window.URL.createObjectURL(mp4);\n\tvar a = document.createElement('a');\n\ta.style.display = 'none';\n\ta.href = url;\n\ta.download = type + '.flv';\n\tdocument.body.appendChild(a);\n\ta.click();\n\tsetTimeout(function () {\n\t\tdocument.body.removeChild(a);\n\t\twindow.URL.revokeObjectURL(url);\n\t}, 100);\n};\n\nexports.downAudio = function (buffer) {\n\tvar mp4 = new File([buffer], 'ce.mpeg', {\n\t\ttype: 'audio/mpeg' });\n\n\tvar url = window.URL.createObjectURL(mp4);\n\tvar a = document.createElement('a');\n\ta.style.display = 'none';\n\ta.href = url;\n\ta.download = 'test.mp3';\n\tdocument.body.appendChild(a);\n\ta.click();\n\tsetTimeout(function () {\n\t\tdocument.body.removeChild(a);\n\t\twindow.URL.revokeObjectURL(url);\n\t}, 100);\n};\n\n/**\n    * @param {Buffer} param: more than one params to create a combined buffer\n    */\nexports.mergebox = function () {\n\tvar boxes = Array.prototype.slice.call(arguments);\n\n\tvar boxLength = boxes.reduce(function (pre, val) {\n\t\treturn pre + val.byteLength;\n\t}, 0);\n\n\tvar buffer = new Uint8Array(boxLength);\n\n\tvar offset = 0;\n\n\tboxes.forEach(function (box) {\n\t\tbox = new Uint8Array(box);\n\t\tbuffer.set(box, offset);\n\t\toffset += box.byteLength;\n\t});\n\n\treturn buffer;\n};\n\n/**\n    * combine buffer and download its MIME type like mp4\n    */\nexports.concatBuffer = function () {\n\tvar buffer = new ArrayBuffer(0);\n\tvar _this = exports;\n\treturn function (segment, length) {\n\t\tbuffer = _this.mergebox(buffer, segment.buffer);\n\n\t\tif (buffer.byteLength > length) _this.downfile(buffer, 'video');\n\t};\n}();\n\n\nexports.stop = function () {\n\tvar num = 0;\n\n\treturn function (limit) {\n\n\t\treturn limit <= num++;\n\t};\n\n\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9kZWJ1Zy9oZWxwZXIuanM/ZGNjMSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzLmRvd25sb2FkID0gZnVuY3Rpb24gKG1wNCkge1xuXHRsZXQgYmxvYiA9IG5ldyBCbG9iKG1wNCwge1xuXHRcdC8vIHR5cGU6ICd2aWRlby9tcDQnXG5cdFx0dHlwZTogJ2FwcGxpY2F0aW9uL29jdGV0LWJpbmFyeSdcblx0fSk7XG5cdHZhciB1cmwgPSB3aW5kb3cuVVJMLmNyZWF0ZU9iamVjdFVSTChibG9iKTtcblx0dmFyIGEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XG5cdGEuc3R5bGUuZGlzcGxheSA9ICdub25lJztcblx0YS5ocmVmID0gdXJsO1xuXHRhLmRvd25sb2FkID0gJ3Rlc3QubXA0Jztcblx0ZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChhKTtcblx0YS5jbGljaygpO1xuXHRzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcblx0XHRkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGEpO1xuXHRcdHdpbmRvdy5VUkwucmV2b2tlT2JqZWN0VVJMKHVybCk7XG5cdH0sIDEwMCk7XG59XG5cbmV4cG9ydHMuZG93bmZpbGUgPSBmdW5jdGlvbiAoYnVmZmVyLCB0eXBlKSB7XG5cdGxldCBtcDQgPSBuZXcgRmlsZShbYnVmZmVyXSwgJ2NlLm1wNCcsIHtcblx0XHR0eXBlOiAndmlkZW8vbXA0J1xuXHR9KTtcblx0bGV0IHVybCA9IHdpbmRvdy5VUkwuY3JlYXRlT2JqZWN0VVJMKG1wNCk7XG5cdGxldCBhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xuXHRhLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG5cdGEuaHJlZiA9IHVybDtcblx0YS5kb3dubG9hZCA9IHR5cGUgKyAnLm1wNCc7XG5cdGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoYSk7XG5cdGEuY2xpY2soKTtcblx0c2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG5cdFx0ZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChhKTtcblx0XHR3aW5kb3cuVVJMLnJldm9rZU9iamVjdFVSTCh1cmwpO1xuXHR9LCAxMDApO1xufVxuXG5leHBvcnRzLmRvd25GTFY9IGZ1bmN0aW9uIChidWZmZXIsIHR5cGUpIHtcblx0bGV0IG1wNCA9IG5ldyBGaWxlKFtidWZmZXJdLCAnY2UuZmx2Jywge1xuXHRcdHR5cGU6ICd2aWRlby94LWZsdidcblx0fSk7XG5cdGxldCB1cmwgPSB3aW5kb3cuVVJMLmNyZWF0ZU9iamVjdFVSTChtcDQpO1xuXHRsZXQgYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcblx0YS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuXHRhLmhyZWYgPSB1cmw7XG5cdGEuZG93bmxvYWQgPSB0eXBlICsgJy5mbHYnO1xuXHRkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGEpO1xuXHRhLmNsaWNrKCk7XG5cdHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuXHRcdGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoYSk7XG5cdFx0d2luZG93LlVSTC5yZXZva2VPYmplY3RVUkwodXJsKTtcblx0fSwgMTAwKTtcbn1cblxuZXhwb3J0cy5kb3duQXVkaW8gPSBmdW5jdGlvbiAoYnVmZmVyKSB7XG5cdGxldCBtcDQgPSBuZXcgRmlsZShbYnVmZmVyXSwgJ2NlLm1wZWcnLCB7XG5cdFx0dHlwZTogJ2F1ZGlvL21wZWcnXG5cdH0pO1xuXHRsZXQgdXJsID0gd2luZG93LlVSTC5jcmVhdGVPYmplY3RVUkwobXA0KTtcblx0bGV0IGEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XG5cdGEuc3R5bGUuZGlzcGxheSA9ICdub25lJztcblx0YS5ocmVmID0gdXJsO1xuXHRhLmRvd25sb2FkID0gJ3Rlc3QubXAzJztcblx0ZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChhKTtcblx0YS5jbGljaygpO1xuXHRzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcblx0XHRkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGEpO1xuXHRcdHdpbmRvdy5VUkwucmV2b2tlT2JqZWN0VVJMKHVybCk7XG5cdH0sIDEwMCk7XG59XG5cbi8qKlxuICogQHBhcmFtIHtCdWZmZXJ9IHBhcmFtOiBtb3JlIHRoYW4gb25lIHBhcmFtcyB0byBjcmVhdGUgYSBjb21iaW5lZCBidWZmZXJcbiAqL1xuZXhwb3J0cy5tZXJnZWJveCA9IGZ1bmN0aW9uICgpIHtcblx0bGV0IGJveGVzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKTtcblxuXHRsZXQgYm94TGVuZ3RoID0gYm94ZXMucmVkdWNlKChwcmUsIHZhbCkgPT4ge1xuXHRcdHJldHVybiBwcmUgKyB2YWwuYnl0ZUxlbmd0aDtcblx0fSwgMCk7XG5cblx0bGV0IGJ1ZmZlciA9IG5ldyBVaW50OEFycmF5KGJveExlbmd0aCk7XG5cblx0bGV0IG9mZnNldCA9IDA7XG5cblx0Ym94ZXMuZm9yRWFjaChib3ggPT4ge1xuXHRcdGJveCA9IG5ldyBVaW50OEFycmF5KGJveCk7XG5cdFx0YnVmZmVyLnNldChib3gsIG9mZnNldCk7XG5cdFx0b2Zmc2V0ICs9IGJveC5ieXRlTGVuZ3RoO1xuXHR9KTtcblxuXHRyZXR1cm4gYnVmZmVyO1xufVxuXG4vKipcbiAqIGNvbWJpbmUgYnVmZmVyIGFuZCBkb3dubG9hZCBpdHMgTUlNRSB0eXBlIGxpa2UgbXA0XG4gKi9cbmV4cG9ydHMuY29uY2F0QnVmZmVyID0gKGZ1bmN0aW9uICgpIHtcblx0bGV0IGJ1ZmZlciA9IG5ldyBBcnJheUJ1ZmZlcigwKTtcblx0bGV0IF90aGlzID0gZXhwb3J0cztcblx0cmV0dXJuIGZ1bmN0aW9uIChzZWdtZW50LGxlbmd0aCkge1xuXHRcdGJ1ZmZlciA9IF90aGlzLm1lcmdlYm94KGJ1ZmZlcixzZWdtZW50LmJ1ZmZlcik7XG5cdFx0XG5cdFx0aWYoYnVmZmVyLmJ5dGVMZW5ndGggPiBsZW5ndGgpIF90aGlzLmRvd25maWxlKGJ1ZmZlciwndmlkZW8nKTtcblx0fVxufSkoKVxuXG5cbmV4cG9ydHMuc3RvcCA9IChmdW5jdGlvbigpe1xuXHRsZXQgbnVtID0gMDtcblxuXHRyZXR1cm4gZnVuY3Rpb24obGltaXQpe1xuXG5cdFx0cmV0dXJuIGxpbWl0IDw9IG51bSsrO1xuXHR9XG5cblxufSkoKTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBkZWJ1Zy9oZWxwZXIuanMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///3\n")},function(module,exports,__webpack_require__){"use strict";eval("Object.defineProperty(exports, \"__esModule\", { value: true });var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var _mitt = __webpack_require__(5);var _mitt2 = _interopRequireDefault(_mitt);\nvar _constants = __webpack_require__(1);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}var\n\n\n\n\n\n\n\n\nBaseHeader = function () {\n\n    function BaseHeader(config) {_classCallCheck(this, BaseHeader);\n        this._config = Object.assign({\n            withCredentials: true,\n            timeout: 0,\n            retry: 1,\n            cors: true,\n            chunkResolve: function chunkResolve() {} },\n        config);\n\n        this._url;\n        this._xhr;\n        this._len = 0;\n\n        this._retry = this._config.retry;\n        this._cors = this._config.cors;\n        this._retryTimer;\n\n        this._emitter = new _mitt2.default();\n    }_createClass(BaseHeader, [{ key: 'addEventListener', value: function addEventListener(\n\n\n\n\n\n\n\n\n\n        name, fn) {\n            switch (name) {\n                case 'chunk':\n                    this._on(_constants.CHUNKEDPROGRESS, function () {\n                        fn.apply(undefined, arguments);\n                    });\n                    break;\n                case 'end':\n                    this._on(_constants.CHUNKEDEND, function () {\n                        fn.apply(undefined, arguments);\n                    });\n                    break;\n                case 'error':\n                    this._on(_constants.CHUNKEDERR, function () {\n                        fn.apply(undefined, arguments);\n                    });\n                    break;\n                default:\n                    this._on(name, function () {\n                        fn.apply(undefined, arguments);\n                    });}\n\n        } }, { key: 'bind', value: function bind()\n        {\n            this.addEventListener.apply(this, arguments);\n        } }, { key: 'on', value: function on()\n        {\n            this.addEventListener.apply(this, arguments);\n        }\n        // polyfill fn\n    }, { key: '_on', value: function _on()\n\n\n\n        {var _emitter;\n            (_emitter = this._emitter).on.apply(_emitter, arguments);\n        } }, { key: '_emit', value: function _emit()\n        {var _emitter2;\n            (_emitter2 = this._emitter).emit.apply(_emitter2, arguments);\n        } }, { key: 'withCredentials', get: function get() {return this._config.withCredentials;} }, { key: 'timeout', get: function get() {return this._config.timeout;} }, { key: 'reconnection', get: function get() {return this._config.reconnection;} }, { key: 'onChunkReader', set: function set(fn) {this._chunkReader = fn;} }]);return BaseHeader;}();exports.default = BaseHeader;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvaHR0cGZsdi9saWIvYmFzZWhlYWRlci5qcz85MDkyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBNaXR0IGZyb20gJ2xpYi9taXR0JztcbmltcG9ydCB7XG4gICAgSFRUUENBTkNFTCxcbiAgICBDSFVOS0VEU1RSRUFNLFxuICAgIENIVU5LRURFTkQsXG4gICAgQ0hVTktFREVSUixcbiAgICBDSFVOS0VEUFJPR1JFU1Ncbn0gZnJvbSAnbGliL2NvbnN0YW50cyc7XG5cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQmFzZUhlYWRlcntcbiAgICBcbiAgICBjb25zdHJ1Y3Rvcihjb25maWcpe1xuICAgICAgICB0aGlzLl9jb25maWcgPSBPYmplY3QuYXNzaWduKHtcbiAgICAgICAgICAgIHdpdGhDcmVkZW50aWFsczp0cnVlLFxuICAgICAgICAgICAgdGltZW91dDowLFxuICAgICAgICAgICAgcmV0cnk6IDEsXG4gICAgICAgICAgICBjb3JzOnRydWUsXG4gICAgICAgICAgICBjaHVua1Jlc29sdmU6ZnVuY3Rpb24oKXt9XG4gICAgICAgIH0sY29uZmlnKTtcblxuICAgICAgICB0aGlzLl91cmw7XG4gICAgICAgIHRoaXMuX3hocjtcbiAgICAgICAgdGhpcy5fbGVuID0gMDtcblxuICAgICAgICB0aGlzLl9yZXRyeSA9IHRoaXMuX2NvbmZpZy5yZXRyeTtcbiAgICAgICAgdGhpcy5fY29ycyA9IHRoaXMuX2NvbmZpZy5jb3JzO1xuICAgICAgICB0aGlzLl9yZXRyeVRpbWVyO1xuXG4gICAgICAgIHRoaXMuX2VtaXR0ZXIgPSBuZXcgTWl0dDtcbiAgICB9XG4gICAgZ2V0IHdpdGhDcmVkZW50aWFscygpe1xuICAgICAgICByZXR1cm4gdGhpcy5fY29uZmlnLndpdGhDcmVkZW50aWFscztcbiAgICB9XG4gICAgZ2V0IHRpbWVvdXQoKXtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NvbmZpZy50aW1lb3V0O1xuICAgIH1cbiAgICBnZXQgcmVjb25uZWN0aW9uKCl7XG4gICAgICAgIHJldHVybiB0aGlzLl9jb25maWcucmVjb25uZWN0aW9uO1xuICAgIH1cbiAgICBhZGRFdmVudExpc3RlbmVyKG5hbWUsIGZuKSB7XG4gICAgICAgIHN3aXRjaCAobmFtZSkge1xuICAgICAgICAgICAgY2FzZSAnY2h1bmsnOlxuICAgICAgICAgICAgICAgIHRoaXMuX29uKENIVU5LRURQUk9HUkVTUywgKC4uLmFyZ3MpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgZm4oLi4uYXJncylcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnZW5kJzpcbiAgICAgICAgICAgICAgICB0aGlzLl9vbihDSFVOS0VERU5ELCAoLi4uYXJncykgPT4ge1xuICAgICAgICAgICAgICAgICAgICBmbiguLi5hcmdzKVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdlcnJvcic6XG4gICAgICAgICAgICAgICAgdGhpcy5fb24oQ0hVTktFREVSUiwgKC4uLmFyZ3MpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgZm4oLi4uYXJncylcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICB0aGlzLl9vbihuYW1lLCAoLi4uYXJncykgPT4ge1xuICAgICAgICAgICAgICAgICAgICBmbiguLi5hcmdzKVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICB9XG4gICAgYmluZCguLi5hcmdzKSB7XG4gICAgICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lciguLi5hcmdzKTtcbiAgICB9XG4gICAgb24oLi4uYXJncykge1xuICAgICAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoLi4uYXJncyk7XG4gICAgfVxuICAgIC8vIHBvbHlmaWxsIGZuXG4gICAgc2V0IG9uQ2h1bmtSZWFkZXIoZm4pe1xuICAgICAgICB0aGlzLl9jaHVua1JlYWRlciA9IGZuO1xuICAgIH1cblxuICAgIF9vbiguLi5hcmdzKSB7XG4gICAgICAgIHRoaXMuX2VtaXR0ZXIub24oLi4uYXJncyk7XG4gICAgfVxuICAgIF9lbWl0KC4uLmFyZ3MpIHtcbiAgICAgICAgdGhpcy5fZW1pdHRlci5lbWl0KC4uLmFyZ3MpO1xuICAgIH1cbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2h0dHBmbHYvbGliL2Jhc2VoZWFkZXIuanMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///4\n")},function(module,exports,__webpack_require__){"use strict";eval('Object.defineProperty(exports, "__esModule", { value: true });exports.default = mitt;function mitt() {\n\tvar all = Object.create(null);\n\n\treturn {\n\n\t\ton: function on(type, handler) {\n\t\t\t(all[type] || (all[type] = [])).push(handler);\n\t\t},\n\n\t\t/**\n      * Remove an event handler for the given type.\n      *\n      * @param  {String} type\tType of event to unregister `handler` from, or `"*"`\n      * @param  {Function} handler Handler function to remove\n      * @memberOf mitt\n      */\n\t\toff: function off(type, handler) {\n\t\t\tif (all[type]) {\n\t\t\t\tall[type].splice(all[type].indexOf(handler) >>> 0, 1);\n\t\t\t}\n\t\t},\n\n\t\temit: function emit(type) {for (var _len = arguments.length, evt = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {evt[_key - 1] = arguments[_key];}\n\t\t\t(all[type] || []).slice().map(function (handler) {handler.apply(undefined, evt);});\n\t\t\t(all[\'*\'] || []).slice().map(function (handler) {handler.apply(undefined, [type].concat(evt));});\n\t\t} };\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9saWIvbWl0dC5qcz8yOWVkIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG1pdHQoKSB7XG5cdGxldCBhbGwgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuXG5cdHJldHVybiB7XG5cdFx0XG5cdFx0b24odHlwZSwgaGFuZGxlcikge1xuXHRcdFx0KGFsbFt0eXBlXSB8fCAoYWxsW3R5cGVdID0gW10pKS5wdXNoKGhhbmRsZXIpO1xuXHRcdH0sXG5cblx0XHQvKipcblx0XHQgKiBSZW1vdmUgYW4gZXZlbnQgaGFuZGxlciBmb3IgdGhlIGdpdmVuIHR5cGUuXG5cdFx0ICpcblx0XHQgKiBAcGFyYW0gIHtTdHJpbmd9IHR5cGVcdFR5cGUgb2YgZXZlbnQgdG8gdW5yZWdpc3RlciBgaGFuZGxlcmAgZnJvbSwgb3IgYFwiKlwiYFxuXHRcdCAqIEBwYXJhbSAge0Z1bmN0aW9ufSBoYW5kbGVyIEhhbmRsZXIgZnVuY3Rpb24gdG8gcmVtb3ZlXG5cdFx0ICogQG1lbWJlck9mIG1pdHRcblx0XHQgKi9cblx0XHRvZmYodHlwZSwgaGFuZGxlcikge1xuXHRcdFx0aWYgKGFsbFt0eXBlXSkge1xuXHRcdFx0XHRhbGxbdHlwZV0uc3BsaWNlKGFsbFt0eXBlXS5pbmRleE9mKGhhbmRsZXIpID4+PiAwLCAxKTtcblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0ZW1pdCh0eXBlLCAuLi5ldnQpIHtcblx0XHRcdChhbGxbdHlwZV0gfHwgW10pLnNsaWNlKCkubWFwKChoYW5kbGVyKSA9PiB7IGhhbmRsZXIoLi4uZXZ0KTsgfSk7XG5cdFx0XHQoYWxsWycqJ10gfHwgW10pLnNsaWNlKCkubWFwKChoYW5kbGVyKSA9PiB7IGhhbmRsZXIodHlwZSwgLi4uZXZ0KTsgfSk7XG5cdFx0fVxuXHR9O1xufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBsaWIvbWl0dC5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///5\n')},function(module,exports,__webpack_require__){"use strict";eval(" // shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout() {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n})();\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while (len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {return [];};\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {return '/';};\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function () {return 0;};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6\n")},function(module,exports,__webpack_require__){"use strict";eval("var _src = __webpack_require__(8);var _src2 = _interopRequireDefault(_src);\nvar _mux = __webpack_require__(19);var _mux2 = _interopRequireDefault(_mux);\nvar _mseControl = __webpack_require__(29);var _mseControl2 = _interopRequireDefault(_mseControl);\nvar _helper = __webpack_require__(3);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\n\n\n\n\n\n\nvar httpChunked = new _src2.default('https://dl.live-play.acgvideo.com/live-dl/728981/live_17490838_4354321.flv?wsSecret=44435c4779feba72e210d11c3c6289b2&wsTime=1516591424');\nvar muxController = new _mux2.default();\n\nvar mse = new _mseControl2.default(document.getElementById('videoTag'));\n\n\ndocument.getElementById('videoTag').addEventListener('error', function (error) {\n  console.error(error);\n}, false);\n/**\n            * Drop TestCase\n            */\n\nvar v_SB = void 0,a_SB = void 0;\n\n\nhttpChunked.bind('stream', function (stream, type) {\n\n\n  if (type === 'IS') {var _muxController$parse =\n\n\n\n\n\n    muxController.parse(stream, type),videoIS = _muxController$parse.videoIS,audioIS = _muxController$parse.audioIS,videoMime = _muxController$parse.videoMime,audioMime = _muxController$parse.audioMime;\n\n    v_SB = mse._addSourceBuffer(videoMime);\n    a_SB = mse._addSourceBuffer(audioMime);\n\n    // concatBuffer(videoIS,100*1024);\n    v_SB.appendBuffer(videoIS);\n    a_SB.appendBuffer(audioIS);\n\n  } else {var _muxController$parse2 =\n\n\n    muxController.parse(stream, type),audioMS = _muxController$parse2.audioMS,videoMS = _muxController$parse2.videoMS;\n\n\n    audioMS && a_SB.appendBuffer(audioMS);\n    videoMS && v_SB.appendBuffer(videoMS);\n\n    // videoMS && concatBuffer(videoMS,15000*1024);\n    document.getElementById('videoTag').play();\n  }\n\n\n});\n\n\n/**\n     * End Event TestCase\n     */\n\n// TODO \n// 1. bind\n// 2. end\n// 3. start\n\n\n\n\n/**\n * Replace TestCase\n */\n\n// httpChunked.replace('http://6721.liveplay.myqcloud.com/live/6721_92906b20eabe2663a2fb52508377b843.flv');\n\n\n/**\n * Retry TestCase\n */\n\n//  httpChunked.retry();\n\n/**\n * Stream Event TestCase\n *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy90ZXN0L2luZGV4LmpzPzkxMGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEhUVFBDaHVua2VkIGZyb20gJy4uL3NyYy9odHRwZmx2L3NyYyc7XG5pbXBvcnQgTXV4Q29udHJvbGxlciBmcm9tICcuLi9zcmMvbXV4JztcbmltcG9ydCBNU0UgZnJvbSAnLi4vc3JjL01TRS9tc2VDb250cm9sJztcbmltcG9ydCB7XG4gIGRvd25maWxlLFxuICBkb3dubG9hZCxcbiAgZG93bkZMVixcbiAgY29uY2F0QnVmZmVyXG59IGZyb20gJ2RlYnVnL2hlbHBlcic7XG5cblxubGV0IGh0dHBDaHVua2VkID0gbmV3IEhUVFBDaHVua2VkKCdodHRwczovL2RsLmxpdmUtcGxheS5hY2d2aWRlby5jb20vbGl2ZS1kbC83Mjg5ODEvbGl2ZV8xNzQ5MDgzOF80MzU0MzIxLmZsdj93c1NlY3JldD00NDQzNWM0Nzc5ZmViYTcyZTIxMGQxMWMzYzYyODliMiZ3c1RpbWU9MTUxNjU5MTQyNCcpO1xubGV0IG11eENvbnRyb2xsZXIgPSBuZXcgTXV4Q29udHJvbGxlcigpO1xuXG5sZXQgbXNlID0gbmV3IE1TRShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndmlkZW9UYWcnKSk7XG5cblxuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3ZpZGVvVGFnJykuYWRkRXZlbnRMaXN0ZW5lcignZXJyb3InLGVycm9yPT57XG4gIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xufSxmYWxzZSk7XG4vKipcbiAqIERyb3AgVGVzdENhc2VcbiAqL1xuXG5sZXQgdl9TQixhX1NCO1xuXG5cbmh0dHBDaHVua2VkLmJpbmQoJ3N0cmVhbScsIChzdHJlYW0sIHR5cGUpID0+IHtcblxuXG4gIGlmICh0eXBlID09PSAnSVMnKSB7XG4gICAgbGV0IHtcbiAgICAgIHZpZGVvSVMsXG4gICAgICBhdWRpb0lTLFxuICAgICAgdmlkZW9NaW1lLFxuICAgICAgYXVkaW9NaW1lXG4gICAgfSA9IG11eENvbnRyb2xsZXIucGFyc2Uoc3RyZWFtLCB0eXBlKTtcblxuICAgIHZfU0IgPSBtc2UuX2FkZFNvdXJjZUJ1ZmZlcih2aWRlb01pbWUpO1xuICAgIGFfU0IgPSBtc2UuX2FkZFNvdXJjZUJ1ZmZlcihhdWRpb01pbWUpO1xuICAgIFxuICAgIC8vIGNvbmNhdEJ1ZmZlcih2aWRlb0lTLDEwMCoxMDI0KTtcbiAgICB2X1NCLmFwcGVuZEJ1ZmZlcih2aWRlb0lTKTtcbiAgICBhX1NCLmFwcGVuZEJ1ZmZlcihhdWRpb0lTKTtcbiBcbiAgfSBlbHNlIHtcbiAgICBsZXQge1xuICAgICAgYXVkaW9NUyx2aWRlb01TXG4gICAgfSA9IG11eENvbnRyb2xsZXIucGFyc2Uoc3RyZWFtLCB0eXBlKTtcblxuXG4gICAgYXVkaW9NUyAmJiBhX1NCLmFwcGVuZEJ1ZmZlcihhdWRpb01TKTtcbiAgICB2aWRlb01TICYmIHZfU0IuYXBwZW5kQnVmZmVyKHZpZGVvTVMpO1xuXG4gICAgLy8gdmlkZW9NUyAmJiBjb25jYXRCdWZmZXIodmlkZW9NUywxNTAwMCoxMDI0KTtcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndmlkZW9UYWcnKS5wbGF5KCk7XG4gIH1cblxuXG59KVxuXG5cbi8qKlxuICogRW5kIEV2ZW50IFRlc3RDYXNlXG4gKi9cblxuLy8gVE9ETyBcbi8vIDEuIGJpbmRcbi8vIDIuIGVuZFxuLy8gMy4gc3RhcnRcblxuXG5cblxuLyoqXG4gKiBSZXBsYWNlIFRlc3RDYXNlXG4gKi9cblxuLy8gaHR0cENodW5rZWQucmVwbGFjZSgnaHR0cDovLzY3MjEubGl2ZXBsYXkubXlxY2xvdWQuY29tL2xpdmUvNjcyMV85MjkwNmIyMGVhYmUyNjYzYTJmYjUyNTA4Mzc3Yjg0My5mbHYnKTtcblxuXG4vKipcbiAqIFJldHJ5IFRlc3RDYXNlXG4gKi9cblxuLy8gIGh0dHBDaHVua2VkLnJldHJ5KCk7XG5cbi8qKlxuICogU3RyZWFtIEV2ZW50IFRlc3RDYXNlXG4gKi9cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gdGVzdC9pbmRleC5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7Ozs7QUFJQTtBQUNBO0FBQ0E7O0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///7\n")},function(module,exports,__webpack_require__){"use strict";eval("Object.defineProperty(exports, \"__esModule\", { value: true });var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {return typeof obj;} : function (obj) {return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;};var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var _mitt = __webpack_require__(5);var _mitt2 = _interopRequireDefault(_mitt);\nvar _constants = __webpack_require__(1);\n\n\n\n\n\n\nvar _utils = __webpack_require__(2);\n\n\nvar _header = __webpack_require__(9);var _header2 = _interopRequireDefault(_header);\n\nvar _helper = __webpack_require__(3);\n\n\n\nvar _xhrFfChunked = __webpack_require__(14);var _xhrFfChunked2 = _interopRequireDefault(_xhrFfChunked);\nvar _fetchChunked = __webpack_require__(15);var _fetchChunked2 = _interopRequireDefault(_fetchChunked);\nvar _xhrW3cChunked = __webpack_require__(16);var _xhrW3cChunked2 = _interopRequireDefault(_xhrW3cChunked);\n\nvar _detectBrowser = __webpack_require__(17);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== \"function\" && superClass !== null) {throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}var\n\n\nHTTPChunked = function (_HeaderRead) {_inherits(HTTPChunked, _HeaderRead);\n    function HTTPChunked() {var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';var config = arguments[1];_classCallCheck(this, HTTPChunked);var _this = _possibleConstructorReturn(this, (HTTPChunked.__proto__ || Object.getPrototypeOf(HTTPChunked)).call(this));\n\n\n        var urlType = typeof url === 'undefined' ? 'undefined' : _typeof(url);\n\n        // replace the object\n        if (urlType === 'object') {\n            config = url;\n        } else if (urlType === 'string') {\n            _this._url = url;\n        }\n\n        _this._browser = (0, _detectBrowser.detect)();\n\n        switch (_this._browser && _this._browser.name) {\n            case 'chrome':\n                _this._xhr = new _fetchChunked2.default(config);\n                break;\n            case 'firefox':\n                _this._xhr = new _xhrFfChunked2.default(config);\n                break;\n            case 'edge':\n            default:\n                throw new Error('your browser don\"t support fetch API, please use modern Browser');}\n\n\n\n        _this._xhr.on('chunk', _this.readChunk.bind(_this));\n        // this._xhr.onChunkReader = this.readChunk.bind(this);\n\n        _this._emitter = _this._xhr._emitter;\n        _this._chunk = new ArrayBuffer(0);\n\n        _this._bufferLen;\n        _this._readLen = 0;\n\n        _this._returnArr = [];\n        _this._type = 'MS';\n\n\n        // don't automaticall trigger\n        url && _this.send(url);return _this;\n\n\n    }_createClass(HTTPChunked, [{ key: 'send', value: function send(\n\n        url) {\n\n            console.log(this._xhr);\n\n            // if the param@url is undefined , use the url when init  HTTPChunked(url)\n            this._xhr.send(url || this._url);\n        }\n        // extract the tag data\n        // reader body\n        // reader Tag\n        //  script\n        //  video\n        //  audio\n    }, { key: 'readChunk', value: function readChunk(chunk) {\n            // reder FLV header\n            this._chunk = (0, _utils.mergeBuffer)(this._chunk, chunk);\n\n            chunk = null;\n\n            var tmpData = void 0,ab = void 0,view = void 0;\n\n            this._bufferLen = this._chunk.byteLength;\n            this._readLen = 0;\n            this._returnArr = [];\n\n            this._type = 'MS';\n\n\n            while (this._bufferLen - this._readLen > 11) {\n\n\n                ab = new Uint8Array(this._chunk);\n\n\n                // reader FLV File Header\n                if (ab[0] === 0x46 && ab[1] === 0x4C && ab[2] === 0x56) {\n\n                    // reader FLV header\n                    tmpData = this._flvHeader(this._chunk.slice(0, 9));\n\n                    this._returnArr.push({\n                        buffer: tmpData.buffer,\n                        info: {\n                            type: tmpData.type,\n                            version: tmpData.version,\n                            tagOffset: tmpData.tagOffset,\n                            hasAudio: tmpData.hasAudio,\n                            hasVideo: tmpData.hasVideo } });\n\n\n                    this._readLen += 9;\n                    this._chunk = this._chunk.slice(9);\n\n                    this._type = 'IS';\n\n                    continue;\n                }\n\n\n                // reader DataSize\n                view = new DataView(this._chunk);\n\n\n                // get the previous tag size\n                // let prvDataSize = view.getUint32(0);\n\n                this._readLen += 4; // add the 'previousTag' size\n\n                if (this._bufferLen < 11 + this._readLen) {\n                    // confirm the dataSize is valid\n                    break;\n                }\n                var dataSize = view.getUint32(4) & 16777215;\n\n                if (this._bufferLen - this._readLen < 11 + dataSize) {\n                    // when the remained data is not a complete tag, return;\n                    break;\n                }\n                // decode Flv tag\n                tmpData = this._flvTag(this._chunk.slice(4));\n\n\n                this._returnArr.push({\n                    buffer: tmpData.buffer,\n                    info: {\n                        type: tmpData.type,\n                        dataOffset: tmpData.dataOffset,\n                        dataSize: tmpData.dataSize,\n                        timeStamp: tmpData.timeStamp,\n                        tagLen: tmpData.tagLen } });\n\n\n\n                this._chunk = this._chunk.slice(tmpData.tagLen + 4); // prvTag size\n                this._readLen += tmpData.tagLen;\n\n\n            }\n\n            // detect the arr is empty, then don't return\n            if (!this._returnArr.length) return;\n\n            /**\n                                                  * the type contain IS/MS:\n                                                  *      IS: initial Segment\n                                                  *      MS: media Segment\n                                                  */\n            this._emitter.emit(_constants.CHUNKEDSTREAM, this._returnArr, this._type);\n\n\n        }\n\n        /**\n           * @param {String} url: replace the origin url to a new url Object\n           */ }, { key: 'replace', value: function replace(\n        url) {\n            this._xhr.replace(url);\n        } }, { key: 'retry', value: function retry()\n        {\n            this._xhr.retry();\n        } }, { key: 'drop', value: function drop()\n\n        {\n            this._xhr.drop();\n        } }, { key: 'addEventListener', value: function addEventListener(\n        name, fn) {\n            switch (name) {\n                case 'stream': // after process\n                    this._emitter.on(_constants.CHUNKEDSTREAM, function () {\n                        fn.apply(undefined, arguments);\n                    });\n                    break;\n                case 'chunk': // pure chunk\n                    this._emitter.on(_constants.CHUNKEDPROGRESS, function () {\n                        fn.apply(undefined, arguments);\n                    });\n                    break;\n                case 'end':\n                    this._emitter.on(_constants.CHUNKEDEND, function () {\n                        fn.apply(undefined, arguments);\n                    });\n                    break;\n                case 'error':\n                    this._emitter.on(_constants.CHUNKEDERR, function () {\n                        fn.apply(undefined, arguments);\n                    });\n                    break;\n                default:\n                    this._emitter.on(name, function () {\n                        fn.apply(undefined, arguments);\n                    });}\n\n        } }, { key: 'bind', value: function bind()\n        {\n            this.addEventListener.apply(this, arguments);\n        } }, { key: 'on', value: function on()\n        {\n            this.addEventListener.apply(this, arguments);\n        } }]);return HTTPChunked;}(_header2.default);exports.default =\n\n\n\nHTTPChunked;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvaHR0cGZsdi9zcmMvaW5kZXguanM/OTIzZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTWl0dCBmcm9tICdsaWIvbWl0dCc7XG5pbXBvcnQge1xuICAgIEhUVFBDQU5DRUwsXG4gICAgQ0hVTktFRFNUUkVBTSxcbiAgICBDSFVOS0VEUFJPR1JFU1MsXG4gICAgQ0hVTktFREVORCxcbiAgICBDSFVOS0VERVJSXG59IGZyb20gJ2xpYi9jb25zdGFudHMnO1xuaW1wb3J0IHtcbiAgICBtZXJnZUJ1ZmZlclxufSBmcm9tICdsaWIvdXRpbHMnO1xuaW1wb3J0IEhlYWRlclJlYWQgZnJvbSAnLi4vbGliL2hlYWRlcic7XG5cbmltcG9ydCB7XG4gICAgc3RvcFxufSBmcm9tICdkZWJ1Zy9oZWxwZXInO1xuXG5pbXBvcnQgTW96Q2h1bmtlZCBmcm9tICcuLi9saWIveGhyLWZmLWNodW5rZWQnO1xuaW1wb3J0IEZldGNoQ2h1bmtlZCBmcm9tICcuLi9saWIvZmV0Y2gtY2h1bmtlZCc7XG5pbXBvcnQgVzNDQ2h1bmtlZCBmcm9tICcuLi9saWIveGhyLXczYy1jaHVua2VkJztcblxuaW1wb3J0IHtkZXRlY3R9IGZyb20gJ2RldGVjdC1icm93c2VyJztcblxuXG5jbGFzcyBIVFRQQ2h1bmtlZCBleHRlbmRzIEhlYWRlclJlYWQge1xuICAgIGNvbnN0cnVjdG9yKHVybCA9ICcnLGNvbmZpZykge1xuICAgICAgICBzdXBlcigpO1xuXG4gICAgICAgIGxldCB1cmxUeXBlID0gdHlwZW9mIHVybDtcblxuICAgICAgICAvLyByZXBsYWNlIHRoZSBvYmplY3RcbiAgICAgICAgaWYodXJsVHlwZSA9PT0gJ29iamVjdCcpe1xuICAgICAgICAgICAgY29uZmlnID0gdXJsO1xuICAgICAgICB9ZWxzZSBpZih1cmxUeXBlID09PSAnc3RyaW5nJyl7XG4gICAgICAgICAgICB0aGlzLl91cmwgPSB1cmw7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLl9icm93c2VyID0gZGV0ZWN0KCk7XG4gICAgICAgIFxuICAgICAgICBzd2l0Y2godGhpcy5fYnJvd3NlciAmJiB0aGlzLl9icm93c2VyLm5hbWUpe1xuICAgICAgICAgICAgY2FzZSAnY2hyb21lJzpcbiAgICAgICAgICAgICAgICB0aGlzLl94aHIgPSBuZXcgRmV0Y2hDaHVua2VkKGNvbmZpZyk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdmaXJlZm94JzpcbiAgICAgICAgICAgICAgICB0aGlzLl94aHIgPSBuZXcgTW96Q2h1bmtlZChjb25maWcpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnZWRnZSc6XG4gICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ3lvdXIgYnJvd3NlciBkb25cInQgc3VwcG9ydCBmZXRjaCBBUEksIHBsZWFzZSB1c2UgbW9kZXJuIEJyb3dzZXInKTtcbiAgICAgICAgfVxuIFxuXG4gICAgICAgIHRoaXMuX3hoci5vbignY2h1bmsnLHRoaXMucmVhZENodW5rLmJpbmQodGhpcykpO1xuICAgICAgICAvLyB0aGlzLl94aHIub25DaHVua1JlYWRlciA9IHRoaXMucmVhZENodW5rLmJpbmQodGhpcyk7XG5cbiAgICAgICAgdGhpcy5fZW1pdHRlciA9IHRoaXMuX3hoci5fZW1pdHRlcjtcbiAgICAgICAgdGhpcy5fY2h1bmsgPSBuZXcgQXJyYXlCdWZmZXIoMCk7XG5cbiAgICAgICAgdGhpcy5fYnVmZmVyTGVuO1xuICAgICAgICB0aGlzLl9yZWFkTGVuID0gMDtcblxuICAgICAgICB0aGlzLl9yZXR1cm5BcnIgPSBbXTtcbiAgICAgICAgdGhpcy5fdHlwZSA9ICdNUyc7XG5cblxuICAgICAgICAvLyBkb24ndCBhdXRvbWF0aWNhbGwgdHJpZ2dlclxuICAgICAgICB1cmwgJiYgdGhpcy5zZW5kKHVybCk7XG5cblxuICAgIH1cbiAgICBcbiAgICBzZW5kKHVybCl7XG5cbiAgICAgICAgY29uc29sZS5sb2codGhpcy5feGhyKTtcbiAgICAgICAgXG4gICAgICAgIC8vIGlmIHRoZSBwYXJhbUB1cmwgaXMgdW5kZWZpbmVkICwgdXNlIHRoZSB1cmwgd2hlbiBpbml0ICBIVFRQQ2h1bmtlZCh1cmwpXG4gICAgICAgIHRoaXMuX3hoci5zZW5kKHVybCB8fCB0aGlzLl91cmwpO1xuICAgIH1cbiAgICAvLyBleHRyYWN0IHRoZSB0YWcgZGF0YVxuICAgIC8vIHJlYWRlciBib2R5XG4gICAgLy8gcmVhZGVyIFRhZ1xuICAgIC8vICBzY3JpcHRcbiAgICAvLyAgdmlkZW9cbiAgICAvLyAgYXVkaW9cbiAgICByZWFkQ2h1bmsoY2h1bmspIHtcbiAgICAgICAgLy8gcmVkZXIgRkxWIGhlYWRlclxuICAgICAgICB0aGlzLl9jaHVuayA9IG1lcmdlQnVmZmVyKHRoaXMuX2NodW5rLCBjaHVuayk7XG4gICAgICAgIFxuICAgICAgICBjaHVuayA9IG51bGw7XG5cbiAgICAgICAgbGV0IHRtcERhdGEsIGFiLCB2aWV3O1xuXG4gICAgICAgIHRoaXMuX2J1ZmZlckxlbiA9IHRoaXMuX2NodW5rLmJ5dGVMZW5ndGg7XG4gICAgICAgIHRoaXMuX3JlYWRMZW4gPSAwO1xuICAgICAgICB0aGlzLl9yZXR1cm5BcnIgPSBbXTtcblxuICAgICAgICB0aGlzLl90eXBlID0gJ01TJztcblxuXG4gICAgICAgIHdoaWxlICh0aGlzLl9idWZmZXJMZW4gLSB0aGlzLl9yZWFkTGVuID4gMTEpIHtcblxuXG4gICAgICAgICAgICBhYiA9IG5ldyBVaW50OEFycmF5KHRoaXMuX2NodW5rKTtcblxuXG4gICAgICAgICAgICAvLyByZWFkZXIgRkxWIEZpbGUgSGVhZGVyXG4gICAgICAgICAgICBpZiAoYWJbMF0gPT09IDB4NDYgJiYgYWJbMV0gPT09IDB4NEMgJiYgYWJbMl0gPT09IDB4NTYpIHtcblxuICAgICAgICAgICAgICAgIC8vIHJlYWRlciBGTFYgaGVhZGVyXG4gICAgICAgICAgICAgICAgdG1wRGF0YSA9IHRoaXMuX2ZsdkhlYWRlcih0aGlzLl9jaHVuay5zbGljZSgwLCA5KSk7XG5cbiAgICAgICAgICAgICAgICB0aGlzLl9yZXR1cm5BcnIucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgIGJ1ZmZlcjogdG1wRGF0YS5idWZmZXIsXG4gICAgICAgICAgICAgICAgICAgIGluZm86IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IHRtcERhdGEudHlwZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHZlcnNpb246IHRtcERhdGEudmVyc2lvbixcbiAgICAgICAgICAgICAgICAgICAgICAgIHRhZ09mZnNldDogdG1wRGF0YS50YWdPZmZzZXQsXG4gICAgICAgICAgICAgICAgICAgICAgICBoYXNBdWRpbzogdG1wRGF0YS5oYXNBdWRpbyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGhhc1ZpZGVvOiB0bXBEYXRhLmhhc1ZpZGVvLFxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICB0aGlzLl9yZWFkTGVuICs9IDk7XG4gICAgICAgICAgICAgICAgdGhpcy5fY2h1bmsgPSB0aGlzLl9jaHVuay5zbGljZSg5KTtcblxuICAgICAgICAgICAgICAgIHRoaXMuX3R5cGUgPSAnSVMnO1xuXG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcblxuICAgICAgICAgICAgLy8gcmVhZGVyIERhdGFTaXplXG4gICAgICAgICAgICB2aWV3ID0gbmV3IERhdGFWaWV3KHRoaXMuX2NodW5rKTtcblxuXG4gICAgICAgICAgICAvLyBnZXQgdGhlIHByZXZpb3VzIHRhZyBzaXplXG4gICAgICAgICAgICAvLyBsZXQgcHJ2RGF0YVNpemUgPSB2aWV3LmdldFVpbnQzMigwKTtcblxuICAgICAgICAgICAgdGhpcy5fcmVhZExlbis9NDsgLy8gYWRkIHRoZSAncHJldmlvdXNUYWcnIHNpemVcblxuICAgICAgICAgICAgaWYodGhpcy5fYnVmZmVyTGVuIDwgMTEgKyB0aGlzLl9yZWFkTGVuKXtcbiAgICAgICAgICAgICAgICAvLyBjb25maXJtIHRoZSBkYXRhU2l6ZSBpcyB2YWxpZFxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGV0IGRhdGFTaXplID0gdmlldy5nZXRVaW50MzIoNCkgJiAxNjc3NzIxNTtcblxuICAgICAgICAgICAgaWYgKHRoaXMuX2J1ZmZlckxlbiAtIHRoaXMuX3JlYWRMZW4gPCAxMSArIGRhdGFTaXplKSB7XG4gICAgICAgICAgICAgICAgLy8gd2hlbiB0aGUgcmVtYWluZWQgZGF0YSBpcyBub3QgYSBjb21wbGV0ZSB0YWcsIHJldHVybjtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIGRlY29kZSBGbHYgdGFnXG4gICAgICAgICAgICB0bXBEYXRhID0gdGhpcy5fZmx2VGFnKHRoaXMuX2NodW5rLnNsaWNlKDQpKTtcblxuXG4gICAgICAgICAgICB0aGlzLl9yZXR1cm5BcnIucHVzaCh7XG4gICAgICAgICAgICAgICAgYnVmZmVyOiB0bXBEYXRhLmJ1ZmZlcixcbiAgICAgICAgICAgICAgICBpbmZvOiB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IHRtcERhdGEudHlwZSxcbiAgICAgICAgICAgICAgICAgICAgZGF0YU9mZnNldDogdG1wRGF0YS5kYXRhT2Zmc2V0LFxuICAgICAgICAgICAgICAgICAgICBkYXRhU2l6ZTogdG1wRGF0YS5kYXRhU2l6ZSxcbiAgICAgICAgICAgICAgICAgICAgdGltZVN0YW1wOiB0bXBEYXRhLnRpbWVTdGFtcCxcbiAgICAgICAgICAgICAgICAgICAgdGFnTGVuOiB0bXBEYXRhLnRhZ0xlblxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICB0aGlzLl9jaHVuayA9IHRoaXMuX2NodW5rLnNsaWNlKHRtcERhdGEudGFnTGVuICsgNCk7IC8vIHBydlRhZyBzaXplXG4gICAgICAgICAgICB0aGlzLl9yZWFkTGVuICs9IHRtcERhdGEudGFnTGVuO1xuXG5cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGRldGVjdCB0aGUgYXJyIGlzIGVtcHR5LCB0aGVuIGRvbid0IHJldHVyblxuICAgICAgICBpZiAoIXRoaXMuX3JldHVybkFyci5sZW5ndGgpIHJldHVybjtcblxuICAgICAgICAvKipcbiAgICAgICAgICogdGhlIHR5cGUgY29udGFpbiBJUy9NUzpcbiAgICAgICAgICogICAgICBJUzogaW5pdGlhbCBTZWdtZW50XG4gICAgICAgICAqICAgICAgTVM6IG1lZGlhIFNlZ21lbnRcbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuX2VtaXR0ZXIuZW1pdChDSFVOS0VEU1RSRUFNLCB0aGlzLl9yZXR1cm5BcnIsIHRoaXMuX3R5cGUpO1xuXG5cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gdXJsOiByZXBsYWNlIHRoZSBvcmlnaW4gdXJsIHRvIGEgbmV3IHVybCBPYmplY3RcbiAgICAgKi9cbiAgICByZXBsYWNlKHVybCkge1xuICAgICAgICB0aGlzLl94aHIucmVwbGFjZSh1cmwpO1xuICAgIH1cbiAgICByZXRyeSgpIHtcbiAgICAgICAgdGhpcy5feGhyLnJldHJ5KCk7XG4gICAgfVxuICAgXG4gICAgZHJvcCgpIHtcbiAgICAgICAgdGhpcy5feGhyLmRyb3AoKTtcbiAgICB9XG4gICAgYWRkRXZlbnRMaXN0ZW5lcihuYW1lLCBmbikge1xuICAgICAgICBzd2l0Y2ggKG5hbWUpIHtcbiAgICAgICAgICAgIGNhc2UgJ3N0cmVhbSc6IC8vIGFmdGVyIHByb2Nlc3NcbiAgICAgICAgICAgICAgICB0aGlzLl9lbWl0dGVyLm9uKENIVU5LRURTVFJFQU0sICguLi5hcmdzKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGZuKC4uLmFyZ3MpXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ2NodW5rJzogLy8gcHVyZSBjaHVua1xuICAgICAgICAgICAgICAgIHRoaXMuX2VtaXR0ZXIub24oQ0hVTktFRFBST0dSRVNTLCguLi5hcmdzKT0+e1xuICAgICAgICAgICAgICAgICAgICBmbiguLi5hcmdzKVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdlbmQnOlxuICAgICAgICAgICAgICAgIHRoaXMuX2VtaXR0ZXIub24oQ0hVTktFREVORCwgKC4uLmFyZ3MpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgZm4oLi4uYXJncylcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnZXJyb3InOlxuICAgICAgICAgICAgICAgIHRoaXMuX2VtaXR0ZXIub24oQ0hVTktFREVSUiwgKC4uLmFyZ3MpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgZm4oLi4uYXJncylcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICB0aGlzLl9lbWl0dGVyLm9uKG5hbWUsICguLi5hcmdzKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGZuKC4uLmFyZ3MpXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgIH1cbiAgICBiaW5kKC4uLmFyZ3MpIHtcbiAgICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKC4uLmFyZ3MpO1xuICAgIH1cbiAgICBvbiguLi5hcmdzKSB7XG4gICAgICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lciguLi5hcmdzKTtcbiAgICB9XG4gICBcbn1cblxuZXhwb3J0IGRlZmF1bHQgSFRUUENodW5rZWQ7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9odHRwZmx2L3NyYy9pbmRleC5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///8\n")},function(module,exports,__webpack_require__){"use strict";eval("Object.defineProperty(exports, \"__esModule\", { value: true });var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var _util = __webpack_require__(10);function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}var\n\nHeaderRead = function () {\n    function HeaderRead() {_classCallCheck(this, HeaderRead);\n        this.type = {\n            8: 'audio',\n            9: 'video',\n            18: 'script' };\n\n\n        this._buffer;\n    }_createClass(HeaderRead, [{ key: '_flvHeader', value: function _flvHeader(\n        chunk) {\n            var data = chunk.slice(3);\n            var view = new DataView(data),\n            version = view.getUint8(0),\n            flags = view.getUint8(1),\n            tagOffset = view.getUint32(2);\n\n            var hasVideo = true,\n            hasAudio = true;\n\n\n            if (flags !== 5) {\n                hasAudio = !!(flags & 4 >> 2);\n                hasVideo = !!(flags & 1);\n            }\n\n            // TODO header offset\n            return {\n                type: 'header',\n                version: version,\n                tagOffset: tagOffset,\n                hasAudio: hasAudio,\n                hasVideo: hasVideo,\n                buffer: chunk };\n\n\n        } }, { key: '_flvTag', value: function _flvTag(\n        chunk) {\n            var view = new DataView(chunk);\n\n            var type = this.type[view.getUint8(0)];\n\n\n            var dataSize = view.getUint32(0) & 16777215;\n\n            var dataOffset = 11;\n\n            var timeStamp = view.getUint32(4) >> 8;\n\n            var upperTime = view.getUint8(7);\n\n            if (upperTime !== 0) {\n                timeStamp |= upperTime << 24;\n            }\n\n            this._buffer = chunk.slice(0, dataSize + dataOffset);\n\n\n            return {\n                type: type,\n                dataSize: dataSize,\n                timeStamp: timeStamp,\n                dataOffset: dataOffset,\n                tagLen: dataSize + dataOffset,\n                buffer: this._buffer };\n\n\n        } }]);return HeaderRead;}();exports.default = HeaderRead;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvaHR0cGZsdi9saWIvaGVhZGVyLmpzPzZkZjEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGVidWcgfSBmcm9tIFwidXRpbFwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBIZWFkZXJSZWFke1xuICAgIGNvbnN0cnVjdG9yKCl7XG4gICAgICAgIHRoaXMudHlwZSA9IHtcbiAgICAgICAgICAgIDg6J2F1ZGlvJyxcbiAgICAgICAgICAgIDk6J3ZpZGVvJyxcbiAgICAgICAgICAgIDE4OidzY3JpcHQnXG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLl9idWZmZXI7XG4gICAgfVxuICAgIF9mbHZIZWFkZXIoY2h1bmspe1xuICAgICAgICBsZXQgZGF0YSA9IGNodW5rLnNsaWNlKDMpO1xuICAgICAgICBsZXQgdmlldyA9IG5ldyBEYXRhVmlldyhkYXRhKSxcbiAgICAgICAgIHZlcnNpb24gPSB2aWV3LmdldFVpbnQ4KDApLFxuICAgICAgICAgZmxhZ3MgPSB2aWV3LmdldFVpbnQ4KDEpLFxuICAgICAgICAgdGFnT2Zmc2V0ID0gdmlldy5nZXRVaW50MzIoMik7XG5cbiAgICAgICAgbGV0IGhhc1ZpZGVvID0gdHJ1ZSxcbiAgICAgICAgICAgIGhhc0F1ZGlvID0gdHJ1ZTtcblxuXG4gICAgICAgICBpZihmbGFncyAhPT0gNSl7XG4gICAgICAgICAgICBoYXNBdWRpbyA9ICEhKGZsYWdzICYgNCA+PiAyKTtcbiAgICAgICAgICAgIGhhc1ZpZGVvID0gISEoZmxhZ3MgJiAxKTtcbiAgICAgICAgIH1cblxuICAgICAgICAgLy8gVE9ETyBoZWFkZXIgb2Zmc2V0XG4gICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgIHR5cGU6J2hlYWRlcicsXG4gICAgICAgICAgICAgdmVyc2lvbixcbiAgICAgICAgICAgICB0YWdPZmZzZXQsXG4gICAgICAgICAgICAgaGFzQXVkaW8sXG4gICAgICAgICAgICAgaGFzVmlkZW8sXG4gICAgICAgICAgICAgYnVmZmVyOmNodW5rXG4gICAgICAgICB9XG4gICAgICAgIFxuICAgIH1cbiAgICBfZmx2VGFnKGNodW5rKXtcbiAgICAgICAgbGV0IHZpZXcgPSBuZXcgRGF0YVZpZXcoY2h1bmspO1xuXG4gICAgICAgIGxldCB0eXBlID0gdGhpcy50eXBlW3ZpZXcuZ2V0VWludDgoMCldO1xuXG5cbiAgICAgICAgbGV0IGRhdGFTaXplID0gdmlldy5nZXRVaW50MzIoMCkgJiAxNjc3NzIxNTtcblxuICAgICAgICBsZXQgZGF0YU9mZnNldCA9IDExO1xuXG4gICAgICAgIGxldCB0aW1lU3RhbXAgPSB2aWV3LmdldFVpbnQzMig0KSA+PiA4O1xuXG4gICAgICAgIGxldCB1cHBlclRpbWUgPSB2aWV3LmdldFVpbnQ4KDcpO1xuXG4gICAgICAgIGlmKHVwcGVyVGltZSAhPT0gMCl7XG4gICAgICAgICAgICB0aW1lU3RhbXB8PSAodXBwZXJUaW1lIDw8IDI0KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuX2J1ZmZlciA9IGNodW5rLnNsaWNlKDAsZGF0YVNpemUgKyBkYXRhT2Zmc2V0KTtcblxuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB0eXBlLFxuICAgICAgICAgICAgZGF0YVNpemUsXG4gICAgICAgICAgICB0aW1lU3RhbXAsXG4gICAgICAgICAgICBkYXRhT2Zmc2V0LFxuICAgICAgICAgICAgdGFnTGVuOmRhdGFTaXplK2RhdGFPZmZzZXQsXG4gICAgICAgICAgICBidWZmZXI6dGhpcy5fYnVmZmVyXG4gICAgICAgIH1cblxuICAgIH1cbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2h0dHBmbHYvbGliL2hlYWRlci5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///9\n")},function(module,exports,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(global, process) {var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {return typeof obj;} : function (obj) {return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;}; // Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function (f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function (x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s':return String(args[i++]);\n      case '%d':return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;}\n\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function (fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function () {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function (set) {\n  if (isUndefined(debugEnviron))\n  debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function () {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function () {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n    * Echos the value of a value. Trys to print the value out\n    * in the best way possible given the different types.\n    *\n    * @param {Object} obj The object to print out.\n    * @param {Object} opts Optional options object that alters the output.\n    */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor };\n\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold': [1, 22],\n  'italic': [3, 23],\n  'underline': [4, 24],\n  'inverse': [7, 27],\n  'white': [37, 39],\n  'grey': [90, 39],\n  'black': [30, 39],\n  'blue': [34, 39],\n  'cyan': [36, 39],\n  'green': [32, 39],\n  'magenta': [35, 39],\n  'red': [31, 39],\n  'yellow': [33, 39] };\n\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red' };\n\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\x1B[' + inspect.colors[style][0] + 'm' + str +\n    '\\x1B[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function (val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n  value &&\n  isFunction(value.inspect) &&\n  // Filter out the util module, it's inspect function is special\n  value.inspect !== exports.inspect &&\n  // Also filter out any prototype objects using the circular check.\n  !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value) && (\n  keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '',array = false,braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function (key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n  return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '').\n    replace(/'/g, \"\\\\'\").\n    replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n  return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n  return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n  return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n      String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function (key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n      key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function (line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function (line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\").\n      replace(/\\\\\"/g, '\"').\n      replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function (prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] + (\n    base === '' ? '' : base + '\\n ') +\n    ' ' +\n    output.join(',\\n  ') +\n    ' ' +\n    braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return (typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return (typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) && (\n  objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n  typeof arg === 'boolean' ||\n  typeof arg === 'number' ||\n  typeof arg === 'string' ||\n  (typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) === 'symbol' || // ES6 symbol\n  typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = __webpack_require__(12);\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n  pad(d.getMinutes()),\n  pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function () {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n    * Inherit the prototype methods from one constructor into another.\n    *\n    * The Function.prototype.inherits from lang.js rewritten as a standalone\n    * function (not on Function.prototype). NOTE: If this file is to be loaded\n    * during bootstrapping this function needs to be rewritten using some native\n    * functions as prototype setup using normal JavaScript does not work as\n    * expected during bootstrapping (see mirror.js in r114903).\n    *\n    * @param {function} ctor Constructor function which needs to inherit the\n    *     prototype.\n    * @param {function} superCtor Constructor function to inherit prototype from.\n    */\nexports.inherits = __webpack_require__(13);\n\nexports._extend = function (origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11), __webpack_require__(6)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vbm9kZV9tb2R1bGVzL3V0aWwvdXRpbC5qcz9jMmE0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCBKb3llbnQsIEluYy4gYW5kIG90aGVyIE5vZGUgY29udHJpYnV0b3JzLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhXG4vLyBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlXG4vLyBcIlNvZnR3YXJlXCIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmdcbi8vIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCxcbi8vIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXRcbi8vIHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZVxuLy8gZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWRcbi8vIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1Ncbi8vIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0Zcbi8vIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU5cbi8vIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLFxuLy8gREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SXG4vLyBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFXG4vLyBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLlxuXG52YXIgZm9ybWF0UmVnRXhwID0gLyVbc2RqJV0vZztcbmV4cG9ydHMuZm9ybWF0ID0gZnVuY3Rpb24oZikge1xuICBpZiAoIWlzU3RyaW5nKGYpKSB7XG4gICAgdmFyIG9iamVjdHMgPSBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgb2JqZWN0cy5wdXNoKGluc3BlY3QoYXJndW1lbnRzW2ldKSk7XG4gICAgfVxuICAgIHJldHVybiBvYmplY3RzLmpvaW4oJyAnKTtcbiAgfVxuXG4gIHZhciBpID0gMTtcbiAgdmFyIGFyZ3MgPSBhcmd1bWVudHM7XG4gIHZhciBsZW4gPSBhcmdzLmxlbmd0aDtcbiAgdmFyIHN0ciA9IFN0cmluZyhmKS5yZXBsYWNlKGZvcm1hdFJlZ0V4cCwgZnVuY3Rpb24oeCkge1xuICAgIGlmICh4ID09PSAnJSUnKSByZXR1cm4gJyUnO1xuICAgIGlmIChpID49IGxlbikgcmV0dXJuIHg7XG4gICAgc3dpdGNoICh4KSB7XG4gICAgICBjYXNlICclcyc6IHJldHVybiBTdHJpbmcoYXJnc1tpKytdKTtcbiAgICAgIGNhc2UgJyVkJzogcmV0dXJuIE51bWJlcihhcmdzW2krK10pO1xuICAgICAgY2FzZSAnJWonOlxuICAgICAgICB0cnkge1xuICAgICAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShhcmdzW2krK10pO1xuICAgICAgICB9IGNhdGNoIChfKSB7XG4gICAgICAgICAgcmV0dXJuICdbQ2lyY3VsYXJdJztcbiAgICAgICAgfVxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIHg7XG4gICAgfVxuICB9KTtcbiAgZm9yICh2YXIgeCA9IGFyZ3NbaV07IGkgPCBsZW47IHggPSBhcmdzWysraV0pIHtcbiAgICBpZiAoaXNOdWxsKHgpIHx8ICFpc09iamVjdCh4KSkge1xuICAgICAgc3RyICs9ICcgJyArIHg7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0ciArPSAnICcgKyBpbnNwZWN0KHgpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gc3RyO1xufTtcblxuXG4vLyBNYXJrIHRoYXQgYSBtZXRob2Qgc2hvdWxkIG5vdCBiZSB1c2VkLlxuLy8gUmV0dXJucyBhIG1vZGlmaWVkIGZ1bmN0aW9uIHdoaWNoIHdhcm5zIG9uY2UgYnkgZGVmYXVsdC5cbi8vIElmIC0tbm8tZGVwcmVjYXRpb24gaXMgc2V0LCB0aGVuIGl0IGlzIGEgbm8tb3AuXG5leHBvcnRzLmRlcHJlY2F0ZSA9IGZ1bmN0aW9uKGZuLCBtc2cpIHtcbiAgLy8gQWxsb3cgZm9yIGRlcHJlY2F0aW5nIHRoaW5ncyBpbiB0aGUgcHJvY2VzcyBvZiBzdGFydGluZyB1cC5cbiAgaWYgKGlzVW5kZWZpbmVkKGdsb2JhbC5wcm9jZXNzKSkge1xuICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBleHBvcnRzLmRlcHJlY2F0ZShmbiwgbXNnKS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH07XG4gIH1cblxuICBpZiAocHJvY2Vzcy5ub0RlcHJlY2F0aW9uID09PSB0cnVlKSB7XG4gICAgcmV0dXJuIGZuO1xuICB9XG5cbiAgdmFyIHdhcm5lZCA9IGZhbHNlO1xuICBmdW5jdGlvbiBkZXByZWNhdGVkKCkge1xuICAgIGlmICghd2FybmVkKSB7XG4gICAgICBpZiAocHJvY2Vzcy50aHJvd0RlcHJlY2F0aW9uKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihtc2cpO1xuICAgICAgfSBlbHNlIGlmIChwcm9jZXNzLnRyYWNlRGVwcmVjYXRpb24pIHtcbiAgICAgICAgY29uc29sZS50cmFjZShtc2cpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihtc2cpO1xuICAgICAgfVxuICAgICAgd2FybmVkID0gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gIH1cblxuICByZXR1cm4gZGVwcmVjYXRlZDtcbn07XG5cblxudmFyIGRlYnVncyA9IHt9O1xudmFyIGRlYnVnRW52aXJvbjtcbmV4cG9ydHMuZGVidWdsb2cgPSBmdW5jdGlvbihzZXQpIHtcbiAgaWYgKGlzVW5kZWZpbmVkKGRlYnVnRW52aXJvbikpXG4gICAgZGVidWdFbnZpcm9uID0gcHJvY2Vzcy5lbnYuTk9ERV9ERUJVRyB8fCAnJztcbiAgc2V0ID0gc2V0LnRvVXBwZXJDYXNlKCk7XG4gIGlmICghZGVidWdzW3NldF0pIHtcbiAgICBpZiAobmV3IFJlZ0V4cCgnXFxcXGInICsgc2V0ICsgJ1xcXFxiJywgJ2knKS50ZXN0KGRlYnVnRW52aXJvbikpIHtcbiAgICAgIHZhciBwaWQgPSBwcm9jZXNzLnBpZDtcbiAgICAgIGRlYnVnc1tzZXRdID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBtc2cgPSBleHBvcnRzLmZvcm1hdC5hcHBseShleHBvcnRzLCBhcmd1bWVudHMpO1xuICAgICAgICBjb25zb2xlLmVycm9yKCclcyAlZDogJXMnLCBzZXQsIHBpZCwgbXNnKTtcbiAgICAgIH07XG4gICAgfSBlbHNlIHtcbiAgICAgIGRlYnVnc1tzZXRdID0gZnVuY3Rpb24oKSB7fTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGRlYnVnc1tzZXRdO1xufTtcblxuXG4vKipcbiAqIEVjaG9zIHRoZSB2YWx1ZSBvZiBhIHZhbHVlLiBUcnlzIHRvIHByaW50IHRoZSB2YWx1ZSBvdXRcbiAqIGluIHRoZSBiZXN0IHdheSBwb3NzaWJsZSBnaXZlbiB0aGUgZGlmZmVyZW50IHR5cGVzLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmogVGhlIG9iamVjdCB0byBwcmludCBvdXQuXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0cyBPcHRpb25hbCBvcHRpb25zIG9iamVjdCB0aGF0IGFsdGVycyB0aGUgb3V0cHV0LlxuICovXG4vKiBsZWdhY3k6IG9iaiwgc2hvd0hpZGRlbiwgZGVwdGgsIGNvbG9ycyovXG5mdW5jdGlvbiBpbnNwZWN0KG9iaiwgb3B0cykge1xuICAvLyBkZWZhdWx0IG9wdGlvbnNcbiAgdmFyIGN0eCA9IHtcbiAgICBzZWVuOiBbXSxcbiAgICBzdHlsaXplOiBzdHlsaXplTm9Db2xvclxuICB9O1xuICAvLyBsZWdhY3kuLi5cbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPj0gMykgY3R4LmRlcHRoID0gYXJndW1lbnRzWzJdO1xuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA+PSA0KSBjdHguY29sb3JzID0gYXJndW1lbnRzWzNdO1xuICBpZiAoaXNCb29sZWFuKG9wdHMpKSB7XG4gICAgLy8gbGVnYWN5Li4uXG4gICAgY3R4LnNob3dIaWRkZW4gPSBvcHRzO1xuICB9IGVsc2UgaWYgKG9wdHMpIHtcbiAgICAvLyBnb3QgYW4gXCJvcHRpb25zXCIgb2JqZWN0XG4gICAgZXhwb3J0cy5fZXh0ZW5kKGN0eCwgb3B0cyk7XG4gIH1cbiAgLy8gc2V0IGRlZmF1bHQgb3B0aW9uc1xuICBpZiAoaXNVbmRlZmluZWQoY3R4LnNob3dIaWRkZW4pKSBjdHguc2hvd0hpZGRlbiA9IGZhbHNlO1xuICBpZiAoaXNVbmRlZmluZWQoY3R4LmRlcHRoKSkgY3R4LmRlcHRoID0gMjtcbiAgaWYgKGlzVW5kZWZpbmVkKGN0eC5jb2xvcnMpKSBjdHguY29sb3JzID0gZmFsc2U7XG4gIGlmIChpc1VuZGVmaW5lZChjdHguY3VzdG9tSW5zcGVjdCkpIGN0eC5jdXN0b21JbnNwZWN0ID0gdHJ1ZTtcbiAgaWYgKGN0eC5jb2xvcnMpIGN0eC5zdHlsaXplID0gc3R5bGl6ZVdpdGhDb2xvcjtcbiAgcmV0dXJuIGZvcm1hdFZhbHVlKGN0eCwgb2JqLCBjdHguZGVwdGgpO1xufVxuZXhwb3J0cy5pbnNwZWN0ID0gaW5zcGVjdDtcblxuXG4vLyBodHRwOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0FOU0lfZXNjYXBlX2NvZGUjZ3JhcGhpY3Ncbmluc3BlY3QuY29sb3JzID0ge1xuICAnYm9sZCcgOiBbMSwgMjJdLFxuICAnaXRhbGljJyA6IFszLCAyM10sXG4gICd1bmRlcmxpbmUnIDogWzQsIDI0XSxcbiAgJ2ludmVyc2UnIDogWzcsIDI3XSxcbiAgJ3doaXRlJyA6IFszNywgMzldLFxuICAnZ3JleScgOiBbOTAsIDM5XSxcbiAgJ2JsYWNrJyA6IFszMCwgMzldLFxuICAnYmx1ZScgOiBbMzQsIDM5XSxcbiAgJ2N5YW4nIDogWzM2LCAzOV0sXG4gICdncmVlbicgOiBbMzIsIDM5XSxcbiAgJ21hZ2VudGEnIDogWzM1LCAzOV0sXG4gICdyZWQnIDogWzMxLCAzOV0sXG4gICd5ZWxsb3cnIDogWzMzLCAzOV1cbn07XG5cbi8vIERvbid0IHVzZSAnYmx1ZScgbm90IHZpc2libGUgb24gY21kLmV4ZVxuaW5zcGVjdC5zdHlsZXMgPSB7XG4gICdzcGVjaWFsJzogJ2N5YW4nLFxuICAnbnVtYmVyJzogJ3llbGxvdycsXG4gICdib29sZWFuJzogJ3llbGxvdycsXG4gICd1bmRlZmluZWQnOiAnZ3JleScsXG4gICdudWxsJzogJ2JvbGQnLFxuICAnc3RyaW5nJzogJ2dyZWVuJyxcbiAgJ2RhdGUnOiAnbWFnZW50YScsXG4gIC8vIFwibmFtZVwiOiBpbnRlbnRpb25hbGx5IG5vdCBzdHlsaW5nXG4gICdyZWdleHAnOiAncmVkJ1xufTtcblxuXG5mdW5jdGlvbiBzdHlsaXplV2l0aENvbG9yKHN0ciwgc3R5bGVUeXBlKSB7XG4gIHZhciBzdHlsZSA9IGluc3BlY3Quc3R5bGVzW3N0eWxlVHlwZV07XG5cbiAgaWYgKHN0eWxlKSB7XG4gICAgcmV0dXJuICdcXHUwMDFiWycgKyBpbnNwZWN0LmNvbG9yc1tzdHlsZV1bMF0gKyAnbScgKyBzdHIgK1xuICAgICAgICAgICAnXFx1MDAxYlsnICsgaW5zcGVjdC5jb2xvcnNbc3R5bGVdWzFdICsgJ20nO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBzdHI7XG4gIH1cbn1cblxuXG5mdW5jdGlvbiBzdHlsaXplTm9Db2xvcihzdHIsIHN0eWxlVHlwZSkge1xuICByZXR1cm4gc3RyO1xufVxuXG5cbmZ1bmN0aW9uIGFycmF5VG9IYXNoKGFycmF5KSB7XG4gIHZhciBoYXNoID0ge307XG5cbiAgYXJyYXkuZm9yRWFjaChmdW5jdGlvbih2YWwsIGlkeCkge1xuICAgIGhhc2hbdmFsXSA9IHRydWU7XG4gIH0pO1xuXG4gIHJldHVybiBoYXNoO1xufVxuXG5cbmZ1bmN0aW9uIGZvcm1hdFZhbHVlKGN0eCwgdmFsdWUsIHJlY3Vyc2VUaW1lcykge1xuICAvLyBQcm92aWRlIGEgaG9vayBmb3IgdXNlci1zcGVjaWZpZWQgaW5zcGVjdCBmdW5jdGlvbnMuXG4gIC8vIENoZWNrIHRoYXQgdmFsdWUgaXMgYW4gb2JqZWN0IHdpdGggYW4gaW5zcGVjdCBmdW5jdGlvbiBvbiBpdFxuICBpZiAoY3R4LmN1c3RvbUluc3BlY3QgJiZcbiAgICAgIHZhbHVlICYmXG4gICAgICBpc0Z1bmN0aW9uKHZhbHVlLmluc3BlY3QpICYmXG4gICAgICAvLyBGaWx0ZXIgb3V0IHRoZSB1dGlsIG1vZHVsZSwgaXQncyBpbnNwZWN0IGZ1bmN0aW9uIGlzIHNwZWNpYWxcbiAgICAgIHZhbHVlLmluc3BlY3QgIT09IGV4cG9ydHMuaW5zcGVjdCAmJlxuICAgICAgLy8gQWxzbyBmaWx0ZXIgb3V0IGFueSBwcm90b3R5cGUgb2JqZWN0cyB1c2luZyB0aGUgY2lyY3VsYXIgY2hlY2suXG4gICAgICAhKHZhbHVlLmNvbnN0cnVjdG9yICYmIHZhbHVlLmNvbnN0cnVjdG9yLnByb3RvdHlwZSA9PT0gdmFsdWUpKSB7XG4gICAgdmFyIHJldCA9IHZhbHVlLmluc3BlY3QocmVjdXJzZVRpbWVzLCBjdHgpO1xuICAgIGlmICghaXNTdHJpbmcocmV0KSkge1xuICAgICAgcmV0ID0gZm9ybWF0VmFsdWUoY3R4LCByZXQsIHJlY3Vyc2VUaW1lcyk7XG4gICAgfVxuICAgIHJldHVybiByZXQ7XG4gIH1cblxuICAvLyBQcmltaXRpdmUgdHlwZXMgY2Fubm90IGhhdmUgcHJvcGVydGllc1xuICB2YXIgcHJpbWl0aXZlID0gZm9ybWF0UHJpbWl0aXZlKGN0eCwgdmFsdWUpO1xuICBpZiAocHJpbWl0aXZlKSB7XG4gICAgcmV0dXJuIHByaW1pdGl2ZTtcbiAgfVxuXG4gIC8vIExvb2sgdXAgdGhlIGtleXMgb2YgdGhlIG9iamVjdC5cbiAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyh2YWx1ZSk7XG4gIHZhciB2aXNpYmxlS2V5cyA9IGFycmF5VG9IYXNoKGtleXMpO1xuXG4gIGlmIChjdHguc2hvd0hpZGRlbikge1xuICAgIGtleXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh2YWx1ZSk7XG4gIH1cblxuICAvLyBJRSBkb2Vzbid0IG1ha2UgZXJyb3IgZmllbGRzIG5vbi1lbnVtZXJhYmxlXG4gIC8vIGh0dHA6Ly9tc2RuLm1pY3Jvc29mdC5jb20vZW4tdXMvbGlicmFyeS9pZS9kd3c1MnNidCh2PXZzLjk0KS5hc3B4XG4gIGlmIChpc0Vycm9yKHZhbHVlKVxuICAgICAgJiYgKGtleXMuaW5kZXhPZignbWVzc2FnZScpID49IDAgfHwga2V5cy5pbmRleE9mKCdkZXNjcmlwdGlvbicpID49IDApKSB7XG4gICAgcmV0dXJuIGZvcm1hdEVycm9yKHZhbHVlKTtcbiAgfVxuXG4gIC8vIFNvbWUgdHlwZSBvZiBvYmplY3Qgd2l0aG91dCBwcm9wZXJ0aWVzIGNhbiBiZSBzaG9ydGN1dHRlZC5cbiAgaWYgKGtleXMubGVuZ3RoID09PSAwKSB7XG4gICAgaWYgKGlzRnVuY3Rpb24odmFsdWUpKSB7XG4gICAgICB2YXIgbmFtZSA9IHZhbHVlLm5hbWUgPyAnOiAnICsgdmFsdWUubmFtZSA6ICcnO1xuICAgICAgcmV0dXJuIGN0eC5zdHlsaXplKCdbRnVuY3Rpb24nICsgbmFtZSArICddJywgJ3NwZWNpYWwnKTtcbiAgICB9XG4gICAgaWYgKGlzUmVnRXhwKHZhbHVlKSkge1xuICAgICAgcmV0dXJuIGN0eC5zdHlsaXplKFJlZ0V4cC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSksICdyZWdleHAnKTtcbiAgICB9XG4gICAgaWYgKGlzRGF0ZSh2YWx1ZSkpIHtcbiAgICAgIHJldHVybiBjdHguc3R5bGl6ZShEYXRlLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHZhbHVlKSwgJ2RhdGUnKTtcbiAgICB9XG4gICAgaWYgKGlzRXJyb3IodmFsdWUpKSB7XG4gICAgICByZXR1cm4gZm9ybWF0RXJyb3IodmFsdWUpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBiYXNlID0gJycsIGFycmF5ID0gZmFsc2UsIGJyYWNlcyA9IFsneycsICd9J107XG5cbiAgLy8gTWFrZSBBcnJheSBzYXkgdGhhdCB0aGV5IGFyZSBBcnJheVxuICBpZiAoaXNBcnJheSh2YWx1ZSkpIHtcbiAgICBhcnJheSA9IHRydWU7XG4gICAgYnJhY2VzID0gWydbJywgJ10nXTtcbiAgfVxuXG4gIC8vIE1ha2UgZnVuY3Rpb25zIHNheSB0aGF0IHRoZXkgYXJlIGZ1bmN0aW9uc1xuICBpZiAoaXNGdW5jdGlvbih2YWx1ZSkpIHtcbiAgICB2YXIgbiA9IHZhbHVlLm5hbWUgPyAnOiAnICsgdmFsdWUubmFtZSA6ICcnO1xuICAgIGJhc2UgPSAnIFtGdW5jdGlvbicgKyBuICsgJ10nO1xuICB9XG5cbiAgLy8gTWFrZSBSZWdFeHBzIHNheSB0aGF0IHRoZXkgYXJlIFJlZ0V4cHNcbiAgaWYgKGlzUmVnRXhwKHZhbHVlKSkge1xuICAgIGJhc2UgPSAnICcgKyBSZWdFeHAucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodmFsdWUpO1xuICB9XG5cbiAgLy8gTWFrZSBkYXRlcyB3aXRoIHByb3BlcnRpZXMgZmlyc3Qgc2F5IHRoZSBkYXRlXG4gIGlmIChpc0RhdGUodmFsdWUpKSB7XG4gICAgYmFzZSA9ICcgJyArIERhdGUucHJvdG90eXBlLnRvVVRDU3RyaW5nLmNhbGwodmFsdWUpO1xuICB9XG5cbiAgLy8gTWFrZSBlcnJvciB3aXRoIG1lc3NhZ2UgZmlyc3Qgc2F5IHRoZSBlcnJvclxuICBpZiAoaXNFcnJvcih2YWx1ZSkpIHtcbiAgICBiYXNlID0gJyAnICsgZm9ybWF0RXJyb3IodmFsdWUpO1xuICB9XG5cbiAgaWYgKGtleXMubGVuZ3RoID09PSAwICYmICghYXJyYXkgfHwgdmFsdWUubGVuZ3RoID09IDApKSB7XG4gICAgcmV0dXJuIGJyYWNlc1swXSArIGJhc2UgKyBicmFjZXNbMV07XG4gIH1cblxuICBpZiAocmVjdXJzZVRpbWVzIDwgMCkge1xuICAgIGlmIChpc1JlZ0V4cCh2YWx1ZSkpIHtcbiAgICAgIHJldHVybiBjdHguc3R5bGl6ZShSZWdFeHAucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodmFsdWUpLCAncmVnZXhwJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBjdHguc3R5bGl6ZSgnW09iamVjdF0nLCAnc3BlY2lhbCcpO1xuICAgIH1cbiAgfVxuXG4gIGN0eC5zZWVuLnB1c2godmFsdWUpO1xuXG4gIHZhciBvdXRwdXQ7XG4gIGlmIChhcnJheSkge1xuICAgIG91dHB1dCA9IGZvcm1hdEFycmF5KGN0eCwgdmFsdWUsIHJlY3Vyc2VUaW1lcywgdmlzaWJsZUtleXMsIGtleXMpO1xuICB9IGVsc2Uge1xuICAgIG91dHB1dCA9IGtleXMubWFwKGZ1bmN0aW9uKGtleSkge1xuICAgICAgcmV0dXJuIGZvcm1hdFByb3BlcnR5KGN0eCwgdmFsdWUsIHJlY3Vyc2VUaW1lcywgdmlzaWJsZUtleXMsIGtleSwgYXJyYXkpO1xuICAgIH0pO1xuICB9XG5cbiAgY3R4LnNlZW4ucG9wKCk7XG5cbiAgcmV0dXJuIHJlZHVjZVRvU2luZ2xlU3RyaW5nKG91dHB1dCwgYmFzZSwgYnJhY2VzKTtcbn1cblxuXG5mdW5jdGlvbiBmb3JtYXRQcmltaXRpdmUoY3R4LCB2YWx1ZSkge1xuICBpZiAoaXNVbmRlZmluZWQodmFsdWUpKVxuICAgIHJldHVybiBjdHguc3R5bGl6ZSgndW5kZWZpbmVkJywgJ3VuZGVmaW5lZCcpO1xuICBpZiAoaXNTdHJpbmcodmFsdWUpKSB7XG4gICAgdmFyIHNpbXBsZSA9ICdcXCcnICsgSlNPTi5zdHJpbmdpZnkodmFsdWUpLnJlcGxhY2UoL15cInxcIiQvZywgJycpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAucmVwbGFjZSgvJy9nLCBcIlxcXFwnXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAucmVwbGFjZSgvXFxcXFwiL2csICdcIicpICsgJ1xcJyc7XG4gICAgcmV0dXJuIGN0eC5zdHlsaXplKHNpbXBsZSwgJ3N0cmluZycpO1xuICB9XG4gIGlmIChpc051bWJlcih2YWx1ZSkpXG4gICAgcmV0dXJuIGN0eC5zdHlsaXplKCcnICsgdmFsdWUsICdudW1iZXInKTtcbiAgaWYgKGlzQm9vbGVhbih2YWx1ZSkpXG4gICAgcmV0dXJuIGN0eC5zdHlsaXplKCcnICsgdmFsdWUsICdib29sZWFuJyk7XG4gIC8vIEZvciBzb21lIHJlYXNvbiB0eXBlb2YgbnVsbCBpcyBcIm9iamVjdFwiLCBzbyBzcGVjaWFsIGNhc2UgaGVyZS5cbiAgaWYgKGlzTnVsbCh2YWx1ZSkpXG4gICAgcmV0dXJuIGN0eC5zdHlsaXplKCdudWxsJywgJ251bGwnKTtcbn1cblxuXG5mdW5jdGlvbiBmb3JtYXRFcnJvcih2YWx1ZSkge1xuICByZXR1cm4gJ1snICsgRXJyb3IucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodmFsdWUpICsgJ10nO1xufVxuXG5cbmZ1bmN0aW9uIGZvcm1hdEFycmF5KGN0eCwgdmFsdWUsIHJlY3Vyc2VUaW1lcywgdmlzaWJsZUtleXMsIGtleXMpIHtcbiAgdmFyIG91dHB1dCA9IFtdO1xuICBmb3IgKHZhciBpID0gMCwgbCA9IHZhbHVlLmxlbmd0aDsgaSA8IGw7ICsraSkge1xuICAgIGlmIChoYXNPd25Qcm9wZXJ0eSh2YWx1ZSwgU3RyaW5nKGkpKSkge1xuICAgICAgb3V0cHV0LnB1c2goZm9ybWF0UHJvcGVydHkoY3R4LCB2YWx1ZSwgcmVjdXJzZVRpbWVzLCB2aXNpYmxlS2V5cyxcbiAgICAgICAgICBTdHJpbmcoaSksIHRydWUpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgb3V0cHV0LnB1c2goJycpO1xuICAgIH1cbiAgfVxuICBrZXlzLmZvckVhY2goZnVuY3Rpb24oa2V5KSB7XG4gICAgaWYgKCFrZXkubWF0Y2goL15cXGQrJC8pKSB7XG4gICAgICBvdXRwdXQucHVzaChmb3JtYXRQcm9wZXJ0eShjdHgsIHZhbHVlLCByZWN1cnNlVGltZXMsIHZpc2libGVLZXlzLFxuICAgICAgICAgIGtleSwgdHJ1ZSkpO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBvdXRwdXQ7XG59XG5cblxuZnVuY3Rpb24gZm9ybWF0UHJvcGVydHkoY3R4LCB2YWx1ZSwgcmVjdXJzZVRpbWVzLCB2aXNpYmxlS2V5cywga2V5LCBhcnJheSkge1xuICB2YXIgbmFtZSwgc3RyLCBkZXNjO1xuICBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih2YWx1ZSwga2V5KSB8fCB7IHZhbHVlOiB2YWx1ZVtrZXldIH07XG4gIGlmIChkZXNjLmdldCkge1xuICAgIGlmIChkZXNjLnNldCkge1xuICAgICAgc3RyID0gY3R4LnN0eWxpemUoJ1tHZXR0ZXIvU2V0dGVyXScsICdzcGVjaWFsJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0ciA9IGN0eC5zdHlsaXplKCdbR2V0dGVyXScsICdzcGVjaWFsJyk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGlmIChkZXNjLnNldCkge1xuICAgICAgc3RyID0gY3R4LnN0eWxpemUoJ1tTZXR0ZXJdJywgJ3NwZWNpYWwnKTtcbiAgICB9XG4gIH1cbiAgaWYgKCFoYXNPd25Qcm9wZXJ0eSh2aXNpYmxlS2V5cywga2V5KSkge1xuICAgIG5hbWUgPSAnWycgKyBrZXkgKyAnXSc7XG4gIH1cbiAgaWYgKCFzdHIpIHtcbiAgICBpZiAoY3R4LnNlZW4uaW5kZXhPZihkZXNjLnZhbHVlKSA8IDApIHtcbiAgICAgIGlmIChpc051bGwocmVjdXJzZVRpbWVzKSkge1xuICAgICAgICBzdHIgPSBmb3JtYXRWYWx1ZShjdHgsIGRlc2MudmFsdWUsIG51bGwpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc3RyID0gZm9ybWF0VmFsdWUoY3R4LCBkZXNjLnZhbHVlLCByZWN1cnNlVGltZXMgLSAxKTtcbiAgICAgIH1cbiAgICAgIGlmIChzdHIuaW5kZXhPZignXFxuJykgPiAtMSkge1xuICAgICAgICBpZiAoYXJyYXkpIHtcbiAgICAgICAgICBzdHIgPSBzdHIuc3BsaXQoJ1xcbicpLm1hcChmdW5jdGlvbihsaW5lKSB7XG4gICAgICAgICAgICByZXR1cm4gJyAgJyArIGxpbmU7XG4gICAgICAgICAgfSkuam9pbignXFxuJykuc3Vic3RyKDIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHN0ciA9ICdcXG4nICsgc3RyLnNwbGl0KCdcXG4nKS5tYXAoZnVuY3Rpb24obGluZSkge1xuICAgICAgICAgICAgcmV0dXJuICcgICAnICsgbGluZTtcbiAgICAgICAgICB9KS5qb2luKCdcXG4nKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBzdHIgPSBjdHguc3R5bGl6ZSgnW0NpcmN1bGFyXScsICdzcGVjaWFsJyk7XG4gICAgfVxuICB9XG4gIGlmIChpc1VuZGVmaW5lZChuYW1lKSkge1xuICAgIGlmIChhcnJheSAmJiBrZXkubWF0Y2goL15cXGQrJC8pKSB7XG4gICAgICByZXR1cm4gc3RyO1xuICAgIH1cbiAgICBuYW1lID0gSlNPTi5zdHJpbmdpZnkoJycgKyBrZXkpO1xuICAgIGlmIChuYW1lLm1hdGNoKC9eXCIoW2EtekEtWl9dW2EtekEtWl8wLTldKilcIiQvKSkge1xuICAgICAgbmFtZSA9IG5hbWUuc3Vic3RyKDEsIG5hbWUubGVuZ3RoIC0gMik7XG4gICAgICBuYW1lID0gY3R4LnN0eWxpemUobmFtZSwgJ25hbWUnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgbmFtZSA9IG5hbWUucmVwbGFjZSgvJy9nLCBcIlxcXFwnXCIpXG4gICAgICAgICAgICAgICAgIC5yZXBsYWNlKC9cXFxcXCIvZywgJ1wiJylcbiAgICAgICAgICAgICAgICAgLnJlcGxhY2UoLyheXCJ8XCIkKS9nLCBcIidcIik7XG4gICAgICBuYW1lID0gY3R4LnN0eWxpemUobmFtZSwgJ3N0cmluZycpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBuYW1lICsgJzogJyArIHN0cjtcbn1cblxuXG5mdW5jdGlvbiByZWR1Y2VUb1NpbmdsZVN0cmluZyhvdXRwdXQsIGJhc2UsIGJyYWNlcykge1xuICB2YXIgbnVtTGluZXNFc3QgPSAwO1xuICB2YXIgbGVuZ3RoID0gb3V0cHV0LnJlZHVjZShmdW5jdGlvbihwcmV2LCBjdXIpIHtcbiAgICBudW1MaW5lc0VzdCsrO1xuICAgIGlmIChjdXIuaW5kZXhPZignXFxuJykgPj0gMCkgbnVtTGluZXNFc3QrKztcbiAgICByZXR1cm4gcHJldiArIGN1ci5yZXBsYWNlKC9cXHUwMDFiXFxbXFxkXFxkP20vZywgJycpLmxlbmd0aCArIDE7XG4gIH0sIDApO1xuXG4gIGlmIChsZW5ndGggPiA2MCkge1xuICAgIHJldHVybiBicmFjZXNbMF0gK1xuICAgICAgICAgICAoYmFzZSA9PT0gJycgPyAnJyA6IGJhc2UgKyAnXFxuICcpICtcbiAgICAgICAgICAgJyAnICtcbiAgICAgICAgICAgb3V0cHV0LmpvaW4oJyxcXG4gICcpICtcbiAgICAgICAgICAgJyAnICtcbiAgICAgICAgICAgYnJhY2VzWzFdO1xuICB9XG5cbiAgcmV0dXJuIGJyYWNlc1swXSArIGJhc2UgKyAnICcgKyBvdXRwdXQuam9pbignLCAnKSArICcgJyArIGJyYWNlc1sxXTtcbn1cblxuXG4vLyBOT1RFOiBUaGVzZSB0eXBlIGNoZWNraW5nIGZ1bmN0aW9ucyBpbnRlbnRpb25hbGx5IGRvbid0IHVzZSBgaW5zdGFuY2VvZmBcbi8vIGJlY2F1c2UgaXQgaXMgZnJhZ2lsZSBhbmQgY2FuIGJlIGVhc2lseSBmYWtlZCB3aXRoIGBPYmplY3QuY3JlYXRlKClgLlxuZnVuY3Rpb24gaXNBcnJheShhcikge1xuICByZXR1cm4gQXJyYXkuaXNBcnJheShhcik7XG59XG5leHBvcnRzLmlzQXJyYXkgPSBpc0FycmF5O1xuXG5mdW5jdGlvbiBpc0Jvb2xlYW4oYXJnKSB7XG4gIHJldHVybiB0eXBlb2YgYXJnID09PSAnYm9vbGVhbic7XG59XG5leHBvcnRzLmlzQm9vbGVhbiA9IGlzQm9vbGVhbjtcblxuZnVuY3Rpb24gaXNOdWxsKGFyZykge1xuICByZXR1cm4gYXJnID09PSBudWxsO1xufVxuZXhwb3J0cy5pc051bGwgPSBpc051bGw7XG5cbmZ1bmN0aW9uIGlzTnVsbE9yVW5kZWZpbmVkKGFyZykge1xuICByZXR1cm4gYXJnID09IG51bGw7XG59XG5leHBvcnRzLmlzTnVsbE9yVW5kZWZpbmVkID0gaXNOdWxsT3JVbmRlZmluZWQ7XG5cbmZ1bmN0aW9uIGlzTnVtYmVyKGFyZykge1xuICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ251bWJlcic7XG59XG5leHBvcnRzLmlzTnVtYmVyID0gaXNOdW1iZXI7XG5cbmZ1bmN0aW9uIGlzU3RyaW5nKGFyZykge1xuICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ3N0cmluZyc7XG59XG5leHBvcnRzLmlzU3RyaW5nID0gaXNTdHJpbmc7XG5cbmZ1bmN0aW9uIGlzU3ltYm9sKGFyZykge1xuICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ3N5bWJvbCc7XG59XG5leHBvcnRzLmlzU3ltYm9sID0gaXNTeW1ib2w7XG5cbmZ1bmN0aW9uIGlzVW5kZWZpbmVkKGFyZykge1xuICByZXR1cm4gYXJnID09PSB2b2lkIDA7XG59XG5leHBvcnRzLmlzVW5kZWZpbmVkID0gaXNVbmRlZmluZWQ7XG5cbmZ1bmN0aW9uIGlzUmVnRXhwKHJlKSB7XG4gIHJldHVybiBpc09iamVjdChyZSkgJiYgb2JqZWN0VG9TdHJpbmcocmUpID09PSAnW29iamVjdCBSZWdFeHBdJztcbn1cbmV4cG9ydHMuaXNSZWdFeHAgPSBpc1JlZ0V4cDtcblxuZnVuY3Rpb24gaXNPYmplY3QoYXJnKSB7XG4gIHJldHVybiB0eXBlb2YgYXJnID09PSAnb2JqZWN0JyAmJiBhcmcgIT09IG51bGw7XG59XG5leHBvcnRzLmlzT2JqZWN0ID0gaXNPYmplY3Q7XG5cbmZ1bmN0aW9uIGlzRGF0ZShkKSB7XG4gIHJldHVybiBpc09iamVjdChkKSAmJiBvYmplY3RUb1N0cmluZyhkKSA9PT0gJ1tvYmplY3QgRGF0ZV0nO1xufVxuZXhwb3J0cy5pc0RhdGUgPSBpc0RhdGU7XG5cbmZ1bmN0aW9uIGlzRXJyb3IoZSkge1xuICByZXR1cm4gaXNPYmplY3QoZSkgJiZcbiAgICAgIChvYmplY3RUb1N0cmluZyhlKSA9PT0gJ1tvYmplY3QgRXJyb3JdJyB8fCBlIGluc3RhbmNlb2YgRXJyb3IpO1xufVxuZXhwb3J0cy5pc0Vycm9yID0gaXNFcnJvcjtcblxuZnVuY3Rpb24gaXNGdW5jdGlvbihhcmcpIHtcbiAgcmV0dXJuIHR5cGVvZiBhcmcgPT09ICdmdW5jdGlvbic7XG59XG5leHBvcnRzLmlzRnVuY3Rpb24gPSBpc0Z1bmN0aW9uO1xuXG5mdW5jdGlvbiBpc1ByaW1pdGl2ZShhcmcpIHtcbiAgcmV0dXJuIGFyZyA9PT0gbnVsbCB8fFxuICAgICAgICAgdHlwZW9mIGFyZyA9PT0gJ2Jvb2xlYW4nIHx8XG4gICAgICAgICB0eXBlb2YgYXJnID09PSAnbnVtYmVyJyB8fFxuICAgICAgICAgdHlwZW9mIGFyZyA9PT0gJ3N0cmluZycgfHxcbiAgICAgICAgIHR5cGVvZiBhcmcgPT09ICdzeW1ib2wnIHx8ICAvLyBFUzYgc3ltYm9sXG4gICAgICAgICB0eXBlb2YgYXJnID09PSAndW5kZWZpbmVkJztcbn1cbmV4cG9ydHMuaXNQcmltaXRpdmUgPSBpc1ByaW1pdGl2ZTtcblxuZXhwb3J0cy5pc0J1ZmZlciA9IHJlcXVpcmUoJy4vc3VwcG9ydC9pc0J1ZmZlcicpO1xuXG5mdW5jdGlvbiBvYmplY3RUb1N0cmluZyhvKSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobyk7XG59XG5cblxuZnVuY3Rpb24gcGFkKG4pIHtcbiAgcmV0dXJuIG4gPCAxMCA/ICcwJyArIG4udG9TdHJpbmcoMTApIDogbi50b1N0cmluZygxMCk7XG59XG5cblxudmFyIG1vbnRocyA9IFsnSmFuJywgJ0ZlYicsICdNYXInLCAnQXByJywgJ01heScsICdKdW4nLCAnSnVsJywgJ0F1ZycsICdTZXAnLFxuICAgICAgICAgICAgICAnT2N0JywgJ05vdicsICdEZWMnXTtcblxuLy8gMjYgRmViIDE2OjE5OjM0XG5mdW5jdGlvbiB0aW1lc3RhbXAoKSB7XG4gIHZhciBkID0gbmV3IERhdGUoKTtcbiAgdmFyIHRpbWUgPSBbcGFkKGQuZ2V0SG91cnMoKSksXG4gICAgICAgICAgICAgIHBhZChkLmdldE1pbnV0ZXMoKSksXG4gICAgICAgICAgICAgIHBhZChkLmdldFNlY29uZHMoKSldLmpvaW4oJzonKTtcbiAgcmV0dXJuIFtkLmdldERhdGUoKSwgbW9udGhzW2QuZ2V0TW9udGgoKV0sIHRpbWVdLmpvaW4oJyAnKTtcbn1cblxuXG4vLyBsb2cgaXMganVzdCBhIHRoaW4gd3JhcHBlciB0byBjb25zb2xlLmxvZyB0aGF0IHByZXBlbmRzIGEgdGltZXN0YW1wXG5leHBvcnRzLmxvZyA9IGZ1bmN0aW9uKCkge1xuICBjb25zb2xlLmxvZygnJXMgLSAlcycsIHRpbWVzdGFtcCgpLCBleHBvcnRzLmZvcm1hdC5hcHBseShleHBvcnRzLCBhcmd1bWVudHMpKTtcbn07XG5cblxuLyoqXG4gKiBJbmhlcml0IHRoZSBwcm90b3R5cGUgbWV0aG9kcyBmcm9tIG9uZSBjb25zdHJ1Y3RvciBpbnRvIGFub3RoZXIuXG4gKlxuICogVGhlIEZ1bmN0aW9uLnByb3RvdHlwZS5pbmhlcml0cyBmcm9tIGxhbmcuanMgcmV3cml0dGVuIGFzIGEgc3RhbmRhbG9uZVxuICogZnVuY3Rpb24gKG5vdCBvbiBGdW5jdGlvbi5wcm90b3R5cGUpLiBOT1RFOiBJZiB0aGlzIGZpbGUgaXMgdG8gYmUgbG9hZGVkXG4gKiBkdXJpbmcgYm9vdHN0cmFwcGluZyB0aGlzIGZ1bmN0aW9uIG5lZWRzIHRvIGJlIHJld3JpdHRlbiB1c2luZyBzb21lIG5hdGl2ZVxuICogZnVuY3Rpb25zIGFzIHByb3RvdHlwZSBzZXR1cCB1c2luZyBub3JtYWwgSmF2YVNjcmlwdCBkb2VzIG5vdCB3b3JrIGFzXG4gKiBleHBlY3RlZCBkdXJpbmcgYm9vdHN0cmFwcGluZyAoc2VlIG1pcnJvci5qcyBpbiByMTE0OTAzKS5cbiAqXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBjdG9yIENvbnN0cnVjdG9yIGZ1bmN0aW9uIHdoaWNoIG5lZWRzIHRvIGluaGVyaXQgdGhlXG4gKiAgICAgcHJvdG90eXBlLlxuICogQHBhcmFtIHtmdW5jdGlvbn0gc3VwZXJDdG9yIENvbnN0cnVjdG9yIGZ1bmN0aW9uIHRvIGluaGVyaXQgcHJvdG90eXBlIGZyb20uXG4gKi9cbmV4cG9ydHMuaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpO1xuXG5leHBvcnRzLl9leHRlbmQgPSBmdW5jdGlvbihvcmlnaW4sIGFkZCkge1xuICAvLyBEb24ndCBkbyBhbnl0aGluZyBpZiBhZGQgaXNuJ3QgYW4gb2JqZWN0XG4gIGlmICghYWRkIHx8ICFpc09iamVjdChhZGQpKSByZXR1cm4gb3JpZ2luO1xuXG4gIHZhciBrZXlzID0gT2JqZWN0LmtleXMoYWRkKTtcbiAgdmFyIGkgPSBrZXlzLmxlbmd0aDtcbiAgd2hpbGUgKGktLSkge1xuICAgIG9yaWdpbltrZXlzW2ldXSA9IGFkZFtrZXlzW2ldXTtcbiAgfVxuICByZXR1cm4gb3JpZ2luO1xufTtcblxuZnVuY3Rpb24gaGFzT3duUHJvcGVydHkob2JqLCBwcm9wKSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKTtcbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBub2RlX21vZHVsZXMvdXRpbC91dGlsLmpzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7O0FBYUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///10\n")},function(module,exports,__webpack_require__){"use strict";eval('var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {return typeof obj;} : function (obj) {return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;};var g;\n\n// This works in non-strict mode\ng = function () {\n\treturn this;\n}();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function("return this")() || (1, eval)("this");\n} catch (e) {\n\t// This works if the window reference is available\n\tif ((typeof window === "undefined" ? "undefined" : _typeof(window)) === "object")\n\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it\'s\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vbm9kZV9tb2R1bGVzL3dlYnBhY2svYnVpbGRpbi9nbG9iYWwuanM/ZmNkZiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKSB8fCAoMSxldmFsKShcInRoaXNcIik7XG59IGNhdGNoKGUpIHtcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcblx0aWYodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIilcblx0XHRnID0gd2luZG93O1xufVxuXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGc7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gbm9kZV9tb2R1bGVzL3dlYnBhY2svYnVpbGRpbi9nbG9iYWwuanMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///11\n')},function(module,exports,__webpack_require__){"use strict";eval("var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {return typeof obj;} : function (obj) {return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;};module.exports = function isBuffer(arg) {\n  return arg && (typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) === 'object' &&\n  typeof arg.copy === 'function' &&\n  typeof arg.fill === 'function' &&\n  typeof arg.readUInt8 === 'function';\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vbm9kZV9tb2R1bGVzL3V0aWwvc3VwcG9ydC9pc0J1ZmZlckJyb3dzZXIuanM/OGQyMCJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGlzQnVmZmVyKGFyZykge1xuICByZXR1cm4gYXJnICYmIHR5cGVvZiBhcmcgPT09ICdvYmplY3QnXG4gICAgJiYgdHlwZW9mIGFyZy5jb3B5ID09PSAnZnVuY3Rpb24nXG4gICAgJiYgdHlwZW9mIGFyZy5maWxsID09PSAnZnVuY3Rpb24nXG4gICAgJiYgdHlwZW9mIGFyZy5yZWFkVUludDggPT09ICdmdW5jdGlvbic7XG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIG5vZGVfbW9kdWxlcy91dGlsL3N1cHBvcnQvaXNCdWZmZXJCcm93c2VyLmpzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///12\n")},function(module,exports,__webpack_require__){"use strict";eval("if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true } });\n\n\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function TempCtor() {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vbm9kZV9tb2R1bGVzL2luaGVyaXRzL2luaGVyaXRzX2Jyb3dzZXIuanM/YTMxYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpZiAodHlwZW9mIE9iamVjdC5jcmVhdGUgPT09ICdmdW5jdGlvbicpIHtcbiAgLy8gaW1wbGVtZW50YXRpb24gZnJvbSBzdGFuZGFyZCBub2RlLmpzICd1dGlsJyBtb2R1bGVcbiAgbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpbmhlcml0cyhjdG9yLCBzdXBlckN0b3IpIHtcbiAgICBjdG9yLnN1cGVyXyA9IHN1cGVyQ3RvclxuICAgIGN0b3IucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckN0b3IucHJvdG90eXBlLCB7XG4gICAgICBjb25zdHJ1Y3Rvcjoge1xuICAgICAgICB2YWx1ZTogY3RvcixcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcbn0gZWxzZSB7XG4gIC8vIG9sZCBzY2hvb2wgc2hpbSBmb3Igb2xkIGJyb3dzZXJzXG4gIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaW5oZXJpdHMoY3Rvciwgc3VwZXJDdG9yKSB7XG4gICAgY3Rvci5zdXBlcl8gPSBzdXBlckN0b3JcbiAgICB2YXIgVGVtcEN0b3IgPSBmdW5jdGlvbiAoKSB7fVxuICAgIFRlbXBDdG9yLnByb3RvdHlwZSA9IHN1cGVyQ3Rvci5wcm90b3R5cGVcbiAgICBjdG9yLnByb3RvdHlwZSA9IG5ldyBUZW1wQ3RvcigpXG4gICAgY3Rvci5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBjdG9yXG4gIH1cbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBub2RlX21vZHVsZXMvaW5oZXJpdHMvaW5oZXJpdHNfYnJvd3Nlci5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///13\n")},function(module,exports,__webpack_require__){"use strict";eval("Object.defineProperty(exports, \"__esModule\", { value: true });var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var _get = function get(object, property, receiver) {if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {var parent = Object.getPrototypeOf(object);if (parent === null) {return undefined;} else {return get(parent, property, receiver);}} else if (\"value\" in desc) {return desc.value;} else {var getter = desc.get;if (getter === undefined) {return undefined;}return getter.call(receiver);}};\n\n\n\n\nvar _baseheader = __webpack_require__(4);var _baseheader2 = _interopRequireDefault(_baseheader);\nvar _constants = __webpack_require__(1);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== \"function\" && superClass !== null) {throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;} /** \nfor firefox to read chunked buffer\nn\n\n\n\n/**\nparam config:\nwithCredentials:true,\ntimeout:0, // waiting for XHR pending\nretry: 1,\nit provide some API:\nsend(url)\nretry()\ndrop()\nreplace()\nif you want to receive the chunked data,\nyou can write some code like:\n```\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   this._chunk = new XHRMozChunked({\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       retry:2\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   });\nnnthis._chunk.on('chunk',(chunk,type)=>{\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       //...\n})\nn                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   //end \nthis._chunk.on('end',(chunk,type)=>{\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       //...\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   })\nnerror\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   this._chunk.on('error',(chunk,type)=>{\nn})\n```\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    * \nnvar\n\nXHRMozChunked = function (_BaseHeader) {_inherits(XHRMozChunked, _BaseHeader);\n    function XHRMozChunked(config) {_classCallCheck(this, XHRMozChunked);return _possibleConstructorReturn(this, (XHRMozChunked.__proto__ || Object.getPrototypeOf(XHRMozChunked)).call(this,\n        config));\n\n    }_createClass(XHRMozChunked, [{ key: 'send', value: function send(\n        url) {\n            this._xhr && this.drop(); // if it is used, clear it\n\n\n            var xhr = this._xhr = new XMLHttpRequest();\n\n            this._url = url;\n\n            xhr.open('GET', url, true);\n            xhr.responseType = 'moz-chunked-arraybuffer';\n\n            xhr.onerror = this._onError.bind(this);\n            xhr.onprogress = this._onProgress.bind(this);\n\n            xhr.withCredentials = this.withCredentials;\n            xhr.timeout = this.timeout;\n\n            xhr.send();\n        } }, { key: '_onProgress', value: function _onProgress(\n\n        e) {\n            var chunk = this._xhr.response;\n\n            if (!chunk) {\n                console.error('the chunked buffer is null ', chunk);\n            }\n\n            _get(XHRMozChunked.prototype.__proto__ || Object.getPrototypeOf(XHRMozChunked.prototype), '_emit', this).call(this, _constants.CHUNKEDPROGRESS, chunk.slice(this._len));\n\n            this._len += chunk.length;\n\n        } }, { key: '_onError', value: function _onError(\n        e) {var _this2 = this;\n            clearTimeout(this._retryTimer);\n\n            this._retryTimer = this._retry > 0 && setTimeout(function () {\n                _this2.retry();\n            }, 3000);\n\n            this._retry--; // only retry \n\n            throw new Error(e);\n        } }, { key: 'drop', value: function drop()\n        {\n            this._xhr.abort();\n        } }, { key: 'retry', value: function retry()\n        {\n            this.drop();\n            this.send(this._url);\n        } }, { key: 'replace', value: function replace(\n        url) {\n            this.drop();\n            this.send(url);\n        } }]);return XHRMozChunked;}(_baseheader2.default);exports.default = XHRMozChunked;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2h0dHBmbHYvbGliL3hoci1mZi1jaHVua2VkLmpzP2JiZDciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIFxuICogZm9yIGZpcmVmb3ggdG8gcmVhZCBjaHVua2VkIGJ1ZmZlclxuKi9cblxuXG5pbXBvcnQgQmFzZUhlYWRlciBmcm9tICcuL2Jhc2VoZWFkZXInO1xuaW1wb3J0IHtcbiAgICBDSFVOS0VERU5ELFxuICAgIENIVU5LRURFUlIsXG4gICAgQ0hVTktFRFBST0dSRVNTXG59IGZyb20gJ2xpYi9jb25zdGFudHMnO1xuXG5cbi8qKlxuICogQHBhcmFtIGNvbmZpZzpcbiAqICAgICAgICAgIHdpdGhDcmVkZW50aWFsczp0cnVlLFxuICAgICAgICAgICAgdGltZW91dDowLCAvLyB3YWl0aW5nIGZvciBYSFIgcGVuZGluZ1xuICAgICAgICAgICAgcmV0cnk6IDEsXG4gKiBpdCBwcm92aWRlIHNvbWUgQVBJOlxuICogIHNlbmQodXJsKVxuICogIHJldHJ5KClcbiAqICBkcm9wKClcbiAqICByZXBsYWNlKClcbiAqIGlmIHlvdSB3YW50IHRvIHJlY2VpdmUgdGhlIGNodW5rZWQgZGF0YSxcbiAqICB5b3UgY2FuIHdyaXRlIHNvbWUgY29kZSBsaWtlOlxuYGBgXG50aGlzLl9jaHVuayA9IG5ldyBYSFJNb3pDaHVua2VkKHtcbiAgICByZXRyeToyXG59KTtcblxuXG50aGlzLl9jaHVuay5vbignY2h1bmsnLChjaHVuayx0eXBlKT0+e1xuICAgIC8vLi4uXG59KVxuXG4vL2VuZCBcbnRoaXMuX2NodW5rLm9uKCdlbmQnLChjaHVuayx0eXBlKT0+e1xuICAgIC8vLi4uXG59KVxuXG4vLyBlcnJvclxudGhpcy5fY2h1bmsub24oJ2Vycm9yJywoY2h1bmssdHlwZSk9PntcbiAgICAvLy4uLlxufSlcbmBgYFxuICogXG4gKiBcbiAqL1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBYSFJNb3pDaHVua2VkIGV4dGVuZHMgQmFzZUhlYWRlcntcbiAgICBjb25zdHJ1Y3Rvcihjb25maWcpe1xuICAgICAgICBzdXBlcihjb25maWcpO1xuICAgICAgICBcbiAgICB9XG4gICAgc2VuZCh1cmwpe1xuICAgICAgICB0aGlzLl94aHIgJiYgdGhpcy5kcm9wKCk7IC8vIGlmIGl0IGlzIHVzZWQsIGNsZWFyIGl0XG5cblxuICAgICAgICBjb25zdCB4aHIgPSB0aGlzLl94aHIgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcblxuICAgICAgICB0aGlzLl91cmwgPSB1cmw7XG5cbiAgICAgICAgeGhyLm9wZW4oJ0dFVCcsdXJsLCB0cnVlKTtcbiAgICAgICAgeGhyLnJlc3BvbnNlVHlwZSA9ICdtb3otY2h1bmtlZC1hcnJheWJ1ZmZlcic7XG5cbiAgICAgICAgeGhyLm9uZXJyb3IgPSB0aGlzLl9vbkVycm9yLmJpbmQodGhpcyk7XG4gICAgICAgIHhoci5vbnByb2dyZXNzID0gdGhpcy5fb25Qcm9ncmVzcy5iaW5kKHRoaXMpO1xuXG4gICAgICAgIHhoci53aXRoQ3JlZGVudGlhbHMgPSB0aGlzLndpdGhDcmVkZW50aWFscztcbiAgICAgICAgeGhyLnRpbWVvdXQgPSB0aGlzLnRpbWVvdXQ7XG4gICAgICAgIFxuICAgICAgICB4aHIuc2VuZCgpO1xuICAgIH1cblxuICAgIF9vblByb2dyZXNzKGUpe1xuICAgICAgICBsZXQgY2h1bmsgPSB0aGlzLl94aHIucmVzcG9uc2U7XG5cbiAgICAgICAgaWYoIWNodW5rKXtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ3RoZSBjaHVua2VkIGJ1ZmZlciBpcyBudWxsICcsY2h1bmspO1xuICAgICAgICB9XG5cbiAgICAgICAgc3VwZXIuX2VtaXQoQ0hVTktFRFBST0dSRVNTLCBjaHVuay5zbGljZSh0aGlzLl9sZW4pKTtcblxuICAgICAgICB0aGlzLl9sZW4gKz0gY2h1bmsubGVuZ3RoO1xuXG4gICAgfVxuICAgIF9vbkVycm9yKGUpe1xuICAgICAgICBjbGVhclRpbWVvdXQodGhpcy5fcmV0cnlUaW1lcik7XG5cbiAgICAgICAgdGhpcy5fcmV0cnlUaW1lciA9IHRoaXMuX3JldHJ5ID4wICYmIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5yZXRyeSgpO1xuICAgICAgICB9LCAzMDAwKTtcblxuICAgICAgICB0aGlzLl9yZXRyeS0tOyAvLyBvbmx5IHJldHJ5IFxuXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihlKTtcbiAgICB9XG4gICAgZHJvcCgpe1xuICAgICAgICB0aGlzLl94aHIuYWJvcnQoKTtcbiAgICB9XG4gICAgcmV0cnkoKXtcbiAgICAgICAgdGhpcy5kcm9wKCk7XG4gICAgICAgIHRoaXMuc2VuZCh0aGlzLl91cmwpO1xuICAgIH1cbiAgICByZXBsYWNlKHVybCl7XG4gICAgICAgIHRoaXMuZHJvcCgpO1xuICAgICAgICB0aGlzLnNlbmQodXJsKTtcbiAgICB9XG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9odHRwZmx2L2xpYi94aHItZmYtY2h1bmtlZC5qcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFLQTtBQUNBOzs7Ozs7O0FBT0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW9DQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///14\n")},function(module,exports,__webpack_require__){"use strict";eval("Object.defineProperty(exports, \"__esModule\", { value: true });var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var _baseheader = __webpack_require__(4);var _baseheader2 = _interopRequireDefault(_baseheader);\nvar _constants = __webpack_require__(1);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== \"function\" && superClass !== null) {throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}\n\n\n\n\n\n\n\n\n/**\nparam config:\nwithCredentials:true,\ntimeout:0, // waiting for XHR pending\nretry: 1,\nit provide some API:\nsend(url)\nretry()\ndrop()\nreplace()\nif you want to receive the chunked data,\nyou can write some code like:\n```\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                this._chunk = new FetchChunked({\nretry:2\n});\nn                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                \nthis._chunk.on('chunk',(chunk,type)=>{\nn})\nnend \nthis._chunk.on('end',(chunk,type)=>{\nn})\nnerror\nthis._chunk.on('error',(chunk,type)=>{\nn})\n```\nnnvar\n\nFetchChunked = function (_BaseHeader) {_inherits(FetchChunked, _BaseHeader);\n    function FetchChunked(config) {_classCallCheck(this, FetchChunked);var _this = _possibleConstructorReturn(this, (FetchChunked.__proto__ || Object.getPrototypeOf(FetchChunked)).call(this,\n        config));\n\n        _this._CANCEL = false;\n        _this._ERROR = false;\n        _this._reader;\n        console.log(\"FETCH chunked\");return _this;\n    }_createClass(FetchChunked, [{ key: 'send', value: function send(\n        url) {var _this2 = this;\n            this._url = url;\n\n            console.log(\"FETCH SEND url \", url);\n\n            window.fetch(url, {\n                mode: this._cors }).\n\n            then(function (res) {\n\n                if (res.ok && res.status >= 200 && res.status <= 299) {\n\n                    // this._xhr = res;\n\n                    return _this2._readerTmpFn.call(_this2, res.body.getReader());\n                } else {\n                    _this2._emit(_constants.CHUNKEDEND);\n                }\n\n            }).\n            then(function (res) {\n                console.log(\"all done\");\n            }).\n            catch(function (err) {\n\n                _this2._ERROR = true;\n                _this2._emit(_constants.CHUNKEDERR, err);\n                _this2._emit(_constants.CHUNKEDEND);\n\n                console.error(err);\n            });\n        } }, { key: '_readerTmpFn', value: function _readerTmpFn(\n        reader) {var _this3 = this;\n\n            return reader.read().then(function (_ref) {var done = _ref.done,value = _ref.value;\n                if (_this3._CANCEL) {\n                    if (!done) {\n                        try {\n                            console.log('drop this url, ', _this3._url);\n\n                            reader.releaseLock();\n\n                            _this3._emit(_constants.HTTPCANCEL); // indicate that drop() fn when to resolve the promise\n\n                            _this3._emit(_constants.CHUNKEDEND);\n\n                        } catch (error) {\n                            console.error('dont\"t support drop(). because you brower don\"t support reader.releaseLock() API \\n', error);\n                        }\n                    }\n                    // break the reading process\n                    return;\n                }\n\n                if (done) {\n                    console.log('====================================');\n                    console.log('the chunked connection has stopped');\n                    console.log('====================================');\n\n                    _this3._emit(_constants.CHUNKEDEND);\n                    return;\n                }\n\n                _this3._emit(_constants.CHUNKEDPROGRESS, value.buffer);\n\n                // resolve the memory leak\n                // never use retrun fn\n                _this3._readerTmpFn(reader);\n            }).catch(function (err) {\n\n                _this3._ERROR = true;\n                _this3._emit(_constants.CHUNKEDERR, err);\n                _this3._emit(_constants.CHUNKEDEND);\n\n                console.error(err);\n            });\n        } }, { key: 'retry', value: function retry()\n        {var _this4 = this;\n            console.log('retry to connect the url,', this._url);\n\n            if (this._ERROR) {\n                return this.send(this._url);\n            }\n\n            this.drop().\n            then(function () {\n                _this4.send(_this4._url);\n            });\n        } }, { key: 'drop', value: function drop()\n        {var _this5 = this;\n            this._CANCEL = true;\n\n            return new Promise(function (res, rej) {\n                _this5._on(_constants.HTTPCANCEL, function () {\n\n                    res();\n                });\n            });\n\n        } }, { key: 'replace', value: function replace(\n        url) {var _this6 = this;\n            console.log('replace the url: ', url);\n\n            this.drop().\n            then(function () {\n                _this6.send(url);\n            });\n\n        } }, { key: '_init', value: function _init()\n        {\n            this._CANCEL = false;\n            this._ERROR = false;\n        } }]);return FetchChunked;}(_baseheader2.default);exports.default = FetchChunked;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2h0dHBmbHYvbGliL2ZldGNoLWNodW5rZWQuanM/ODk1YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQmFzZUhlYWRlciBmcm9tICcuL2Jhc2VoZWFkZXInO1xuaW1wb3J0IHtcbiAgICBIVFRQQ0FOQ0VMLFxuICAgIENIVU5LRURQUk9HUkVTUyxcbiAgICBDSFVOS0VEU1RSRUFNLFxuICAgIENIVU5LRURFTkQsXG4gICAgQ0hVTktFREVSUlxufSBmcm9tICdsaWIvY29uc3RhbnRzJztcblxuXG4vKipcbiAqIEBwYXJhbSBjb25maWc6XG4gKiAgICAgICAgICB3aXRoQ3JlZGVudGlhbHM6dHJ1ZSxcbiAgICAgICAgICAgIHRpbWVvdXQ6MCwgLy8gd2FpdGluZyBmb3IgWEhSIHBlbmRpbmdcbiAgICAgICAgICAgIHJldHJ5OiAxLFxuICogaXQgcHJvdmlkZSBzb21lIEFQSTpcbiAqICBzZW5kKHVybClcbiAqICByZXRyeSgpXG4gKiAgZHJvcCgpXG4gKiAgcmVwbGFjZSgpXG4gKiBpZiB5b3Ugd2FudCB0byByZWNlaXZlIHRoZSBjaHVua2VkIGRhdGEsXG4gKiAgeW91IGNhbiB3cml0ZSBzb21lIGNvZGUgbGlrZTpcbmBgYFxudGhpcy5fY2h1bmsgPSBuZXcgRmV0Y2hDaHVua2VkKHtcbiAgICByZXRyeToyXG59KTtcblxuXG50aGlzLl9jaHVuay5vbignY2h1bmsnLChjaHVuayx0eXBlKT0+e1xuICAgIC8vLi4uXG59KVxuXG4vL2VuZCBcbnRoaXMuX2NodW5rLm9uKCdlbmQnLChjaHVuayx0eXBlKT0+e1xuICAgIC8vLi4uXG59KVxuXG4vLyBlcnJvclxudGhpcy5fY2h1bmsub24oJ2Vycm9yJywoY2h1bmssdHlwZSk9PntcbiAgICAvLy4uLlxufSlcbmBgYFxuICogXG4gKiBcbiAqL1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBGZXRjaENodW5rZWQgZXh0ZW5kcyBCYXNlSGVhZGVyIHtcbiAgICBjb25zdHJ1Y3Rvcihjb25maWcpIHtcbiAgICAgICAgc3VwZXIoY29uZmlnKTtcblxuICAgICAgICB0aGlzLl9DQU5DRUwgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5fRVJST1IgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5fcmVhZGVyO1xuICAgICAgICBjb25zb2xlLmxvZyhcIkZFVENIIGNodW5rZWRcIik7XG4gICAgfVxuICAgIHNlbmQodXJsKSB7XG4gICAgICAgIHRoaXMuX3VybCA9IHVybDtcblxuICAgICAgICBjb25zb2xlLmxvZyhcIkZFVENIIFNFTkQgdXJsIFwiLCB1cmwpO1xuICAgICAgICBcbiAgICAgICAgd2luZG93LmZldGNoKHVybCwge1xuICAgICAgICAgICAgICAgIG1vZGU6IHRoaXMuX2NvcnNcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAudGhlbihyZXMgPT4ge1xuXG4gICAgICAgICAgICAgICAgaWYgKHJlcy5vayAmJiAocmVzLnN0YXR1cyA+PSAyMDAgJiYgcmVzLnN0YXR1cyA8PSAyOTkpKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgLy8gdGhpcy5feGhyID0gcmVzO1xuXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9yZWFkZXJUbXBGbi5jYWxsKHRoaXMscmVzLmJvZHkuZ2V0UmVhZGVyKCkpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2VtaXQoQ0hVTktFREVORCk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLnRoZW4ocmVzID0+IHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcImFsbCBkb25lXCIpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5jYXRjaChlcnIgPT4geyBcblxuICAgICAgICAgICAgICAgIHRoaXMuX0VSUk9SID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB0aGlzLl9lbWl0KENIVU5LRURFUlIsIGVycik7XG4gICAgICAgICAgICAgICAgdGhpcy5fZW1pdChDSFVOS0VERU5EKTtcblxuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgICAgICAgICAgIH0pXG4gICAgfVxuICAgIF9yZWFkZXJUbXBGbihyZWFkZXIpIHtcblxuICAgICAgICByZXR1cm4gcmVhZGVyLnJlYWQoKS50aGVuKCh7ZG9uZSx2YWx1ZX0pPT57XG4gICAgICAgICAgICBpZiAodGhpcy5fQ0FOQ0VMKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFkb25lKSB7XG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnZHJvcCB0aGlzIHVybCwgJywgdGhpcy5fdXJsKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgcmVhZGVyLnJlbGVhc2VMb2NrKCk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2VtaXQoSFRUUENBTkNFTCk7IC8vIGluZGljYXRlIHRoYXQgZHJvcCgpIGZuIHdoZW4gdG8gcmVzb2x2ZSB0aGUgcHJvbWlzZVxuICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fZW1pdChDSFVOS0VERU5EKTtcbiAgICBcbiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ2RvbnRcInQgc3VwcG9ydCBkcm9wKCkuIGJlY2F1c2UgeW91IGJyb3dlciBkb25cInQgc3VwcG9ydCByZWFkZXIucmVsZWFzZUxvY2soKSBBUEkgXFxuJywgZXJyb3IpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIGJyZWFrIHRoZSByZWFkaW5nIHByb2Nlc3NcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgXG4gICAgICAgICAgICBpZiAoZG9uZSkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCc9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0nKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygndGhlIGNodW5rZWQgY29ubmVjdGlvbiBoYXMgc3RvcHBlZCcpO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCc9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0nKTtcbiAgICBcbiAgICAgICAgICAgICAgICB0aGlzLl9lbWl0KENIVU5LRURFTkQpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy5fZW1pdChDSFVOS0VEUFJPR1JFU1MsIHZhbHVlLmJ1ZmZlcik7XG5cbiAgICAgICAgICAgIC8vIHJlc29sdmUgdGhlIG1lbW9yeSBsZWFrXG4gICAgICAgICAgICAvLyBuZXZlciB1c2UgcmV0cnVuIGZuXG4gICAgICAgICAgICB0aGlzLl9yZWFkZXJUbXBGbihyZWFkZXIpXG4gICAgICAgIH0pLmNhdGNoKGVyciA9PiB7IFxuXG4gICAgICAgICAgICB0aGlzLl9FUlJPUiA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLl9lbWl0KENIVU5LRURFUlIsIGVycik7XG4gICAgICAgICAgICB0aGlzLl9lbWl0KENIVU5LRURFTkQpO1xuXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycik7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXRyeSgpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ3JldHJ5IHRvIGNvbm5lY3QgdGhlIHVybCwnLCB0aGlzLl91cmwpO1xuXG4gICAgICAgIGlmICh0aGlzLl9FUlJPUikge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuc2VuZCh0aGlzLl91cmwpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5kcm9wKClcbiAgICAgICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLnNlbmQodGhpcy5fdXJsKTtcbiAgICAgICAgICAgIH0pXG4gICAgfVxuICAgIGRyb3AoKSB7XG4gICAgICAgIHRoaXMuX0NBTkNFTCA9IHRydWU7XG5cbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXMsIHJlaikgPT4ge1xuICAgICAgICAgICAgdGhpcy5fb24oSFRUUENBTkNFTCwgKCkgPT4ge1xuXG4gICAgICAgICAgICAgICAgcmVzKCk7XG4gICAgICAgICAgICB9KVxuICAgICAgICB9KVxuXG4gICAgfVxuICAgIHJlcGxhY2UodXJsKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdyZXBsYWNlIHRoZSB1cmw6ICcsIHVybCk7XG5cbiAgICAgICAgdGhpcy5kcm9wKClcbiAgICAgICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLnNlbmQodXJsKTtcbiAgICAgICAgICAgIH0pXG5cbiAgICB9XG4gICAgX2luaXQoKSB7XG4gICAgICAgIHRoaXMuX0NBTkNFTCA9IGZhbHNlO1xuICAgICAgICB0aGlzLl9FUlJPUiA9IGZhbHNlO1xuICAgIH1cbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2h0dHBmbHYvbGliL2ZldGNoLWNodW5rZWQuanMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW9DQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///15\n")},function(module,exports,__webpack_require__){"use strict";eval("Object.defineProperty(exports, \"__esModule\", { value: true });var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();\n\n\n\n\nvar _baseheader = __webpack_require__(4);var _baseheader2 = _interopRequireDefault(_baseheader);\nvar _constants = __webpack_require__(1);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== \"function\" && superClass !== null) {throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;} /** \nfor firefox to read chunked buffer\nn\n\n\n\n/**\nparam config:\nwithCredentials:true,\ntimeout:0, // waiting for XHR pending\nretry: 1,\nit provide some API:\nsend(url)\nretry()\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *  drop()\nreplace()\nif you want to receive the chunked data,\nyou can write some code like:\n```\nthis._chunk = new XHRMozChunked({\nretry:2\n});\nnnthis._chunk.on('chunk',(chunk,type)=>{\nn})\nnend \nthis._chunk.on('end',(chunk,type)=>{\nn})\nnerror\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   this._chunk.on('error',(chunk,type)=>{\nn})\n```\nnnvar\n\nW3CChunked = function (_BaseHeader) {_inherits(W3CChunked, _BaseHeader);\n    function W3CChunked(config) {_classCallCheck(this, W3CChunked);return _possibleConstructorReturn(this, (W3CChunked.__proto__ || Object.getPrototypeOf(W3CChunked)).call(this,\n        config));\n\n    }_createClass(W3CChunked, [{ key: 'send', value: function send(\n        url) {\n            this._xhr && this.drop(); // if it is used, clear it\n\n\n            var xhr = this._xhr = new XMLHttpRequest();\n\n            this._url = url;\n\n            xhr.open('GET', url, true);\n            // xhr.responseType = 'arraybuffer';\n\n            xhr.onerror = this._onError.bind(this);\n            xhr.onprogress = this._onProgress.bind(this);\n            xhr.onload = this._onLoad.bind(this);\n            xhr.responseType = 'arraybuffer';\n            xhr.withCredentials = false;\n            xhr.timeout = this.timeout;\n            xhr.send();\n        } }, { key: '_onProgress', value: function _onProgress(\n\n        e) {\n            var chunk = this._xhr.response;\n            e;\n\n\n            // if(!chunk){\n            //     console.error('the chunked buffer is null ',chunk);\n            // }\n            if (this._xhr.readyState === 3) {\n                e.target.response;\n\n                debugger;\n\n                // this.xhr.responseText;\n\n                // super._emit(CHUNKEDPROGRESS, chunk.slice(this._len));\n\n                // this._len += chunk.length;\n            }\n\n\n\n        } }, { key: '_onLoad', value: function _onLoad(\n        e) {\n\n            this._xhr.readyState;\n\n            debugger;\n        } }, { key: '_onError', value: function _onError(\n        e) {var _this2 = this;\n            clearTimeout(this._retryTimer);\n\n            this._retryTimer = this._retry > 0 && setTimeout(function () {\n                _this2.retry();\n            }, 3000);\n\n            this._retry--; // only retry \n\n            throw new Error(e);\n        } }, { key: 'drop', value: function drop()\n        {\n            this._xhr.abort();\n        } }, { key: 'retry', value: function retry()\n        {\n            this.drop();\n            this.send(this._url);\n        } }, { key: 'replace', value: function replace(\n        url) {\n            this.drop();\n            this.send(url);\n        } }]);return W3CChunked;}(_baseheader2.default);exports.default = W3CChunked;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2h0dHBmbHYvbGliL3hoci13M2MtY2h1bmtlZC5qcz83NmQ3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBcbiAqIGZvciBmaXJlZm94IHRvIHJlYWQgY2h1bmtlZCBidWZmZXJcbiovXG5cblxuaW1wb3J0IEJhc2VIZWFkZXIgZnJvbSAnLi9iYXNlaGVhZGVyJztcbmltcG9ydCB7XG4gICAgQ0hVTktFREVORCxcbiAgICBDSFVOS0VERVJSLFxuICAgIENIVU5LRURQUk9HUkVTU1xufSBmcm9tICdsaWIvY29uc3RhbnRzJztcblxuXG4vKipcbiAqIEBwYXJhbSBjb25maWc6XG4gKiAgICAgICAgICB3aXRoQ3JlZGVudGlhbHM6dHJ1ZSxcbiAgICAgICAgICAgIHRpbWVvdXQ6MCwgLy8gd2FpdGluZyBmb3IgWEhSIHBlbmRpbmdcbiAgICAgICAgICAgIHJldHJ5OiAxLFxuICogaXQgcHJvdmlkZSBzb21lIEFQSTpcbiAqICBzZW5kKHVybClcbiAqICByZXRyeSgpXG4gKiAgZHJvcCgpXG4gKiAgcmVwbGFjZSgpXG4gKiBpZiB5b3Ugd2FudCB0byByZWNlaXZlIHRoZSBjaHVua2VkIGRhdGEsXG4gKiAgeW91IGNhbiB3cml0ZSBzb21lIGNvZGUgbGlrZTpcbmBgYFxudGhpcy5fY2h1bmsgPSBuZXcgWEhSTW96Q2h1bmtlZCh7XG4gICAgcmV0cnk6MlxufSk7XG5cblxudGhpcy5fY2h1bmsub24oJ2NodW5rJywoY2h1bmssdHlwZSk9PntcbiAgICAvLy4uLlxufSlcblxuLy9lbmQgXG50aGlzLl9jaHVuay5vbignZW5kJywoY2h1bmssdHlwZSk9PntcbiAgICAvLy4uLlxufSlcblxuLy8gZXJyb3JcbnRoaXMuX2NodW5rLm9uKCdlcnJvcicsKGNodW5rLHR5cGUpPT57XG4gICAgLy8uLi5cbn0pXG5gYGBcbiAqIFxuICogXG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVzNDQ2h1bmtlZCBleHRlbmRzIEJhc2VIZWFkZXJ7XG4gICAgY29uc3RydWN0b3IoY29uZmlnKXtcbiAgICAgICAgc3VwZXIoY29uZmlnKTtcbiAgICAgICAgXG4gICAgfVxuICAgIHNlbmQodXJsKXtcbiAgICAgICAgdGhpcy5feGhyICYmIHRoaXMuZHJvcCgpOyAvLyBpZiBpdCBpcyB1c2VkLCBjbGVhciBpdFxuXG5cbiAgICAgICAgY29uc3QgeGhyID0gdGhpcy5feGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG5cbiAgICAgICAgdGhpcy5fdXJsID0gdXJsO1xuXG4gICAgICAgIHhoci5vcGVuKCdHRVQnLHVybCwgdHJ1ZSk7XG4gICAgICAgIC8vIHhoci5yZXNwb25zZVR5cGUgPSAnYXJyYXlidWZmZXInO1xuXG4gICAgICAgIHhoci5vbmVycm9yID0gdGhpcy5fb25FcnJvci5iaW5kKHRoaXMpO1xuICAgICAgICB4aHIub25wcm9ncmVzcyA9IHRoaXMuX29uUHJvZ3Jlc3MuYmluZCh0aGlzKTtcbiAgICAgICAgeGhyLm9ubG9hZCA9IHRoaXMuX29uTG9hZC5iaW5kKHRoaXMpO1xuICAgICAgICB4aHIucmVzcG9uc2VUeXBlID0gJ2FycmF5YnVmZmVyJztcbiAgICAgICAgeGhyLndpdGhDcmVkZW50aWFscyA9IGZhbHNlO1xuICAgICAgICB4aHIudGltZW91dCA9IHRoaXMudGltZW91dDtcbiAgICAgICAgeGhyLnNlbmQoKTtcbiAgICB9XG5cbiAgICBfb25Qcm9ncmVzcyhlKXtcbiAgICAgICAgbGV0IGNodW5rID0gdGhpcy5feGhyLnJlc3BvbnNlO1xuICAgICAgICBlO1xuXG4gICAgICAgIFxuICAgICAgICAvLyBpZighY2h1bmspe1xuICAgICAgICAvLyAgICAgY29uc29sZS5lcnJvcigndGhlIGNodW5rZWQgYnVmZmVyIGlzIG51bGwgJyxjaHVuayk7XG4gICAgICAgIC8vIH1cbiAgICAgICAgaWYodGhpcy5feGhyLnJlYWR5U3RhdGUgPT09IDMpe1xuICAgICAgICAgICAgZS50YXJnZXQucmVzcG9uc2VcbiAgICAgICAgICAgXG4gICAgICAgICAgICBkZWJ1Z2dlclxuXG4gICAgICAgICAgICAvLyB0aGlzLnhoci5yZXNwb25zZVRleHQ7XG5cbiAgICAgICAgICAgIC8vIHN1cGVyLl9lbWl0KENIVU5LRURQUk9HUkVTUywgY2h1bmsuc2xpY2UodGhpcy5fbGVuKSk7XG5cbiAgICAgICAgICAgIC8vIHRoaXMuX2xlbiArPSBjaHVuay5sZW5ndGg7XG4gICAgICAgIH1cblxuICAgICAgXG5cbiAgICB9XG4gICAgX29uTG9hZChlKXtcblxuICAgICAgICB0aGlzLl94aHIucmVhZHlTdGF0ZTtcblxuICAgICAgICBkZWJ1Z2dlcjtcbiAgICB9XG4gICAgX29uRXJyb3IoZSl7XG4gICAgICAgIGNsZWFyVGltZW91dCh0aGlzLl9yZXRyeVRpbWVyKTtcblxuICAgICAgICB0aGlzLl9yZXRyeVRpbWVyID0gdGhpcy5fcmV0cnkgPjAgJiYgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnJldHJ5KCk7XG4gICAgICAgIH0sIDMwMDApO1xuXG4gICAgICAgIHRoaXMuX3JldHJ5LS07IC8vIG9ubHkgcmV0cnkgXG5cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGUpO1xuICAgIH1cbiAgICBkcm9wKCl7XG4gICAgICAgIHRoaXMuX3hoci5hYm9ydCgpO1xuICAgIH1cbiAgICByZXRyeSgpe1xuICAgICAgICB0aGlzLmRyb3AoKTtcbiAgICAgICAgdGhpcy5zZW5kKHRoaXMuX3VybCk7XG4gICAgfVxuICAgIHJlcGxhY2UodXJsKXtcbiAgICAgICAgdGhpcy5kcm9wKCk7XG4gICAgICAgIHRoaXMuc2VuZCh1cmwpO1xuICAgIH1cbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2h0dHBmbHYvbGliL3hoci13M2MtY2h1bmtlZC5qcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFLQTtBQUNBOzs7Ozs7O0FBT0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW9DQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///16\n")},function(module,exports,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(process) { /**\n                # detect-browser\n              \n                This is a package that attempts to detect a browser vendor and version (in\n                a semver compatible format) using a navigator useragent in a browser or\n                `process.version` in node.\n              \n                ## NOTE: Version 2.x release\n              \n                Release 2.0 introduces a breaking API change (hence the major release)\n                which requires invocation of a `detect` function rather than just inclusion of\n                the module.  PR [#46](https://github.com/DamonOehlman/detect-browser/pull/46)\n                provides more context as to why this change has been made.\n              \n                ## Example Usage\n              \n                <<< examples/simple.js\n              \n                Or you can use a switch statement:\n              \n                <<< examples/switch.js\n              \n                ## Adding additional browser support\n              \n                The current list of browsers that can be detected by `detect-browser` is\n                not exhaustive. If you have a browser that you would like to add support for\n                then please submit a pull request with the implementation.\n              \n                Creating an acceptable implementation requires two things:\n              \n                1. A test demonstrating that the regular expression you have defined identifies\n                   your new browser correctly.  Examples of this can be found in the \n                   `test/logic.js` file.\n              \n                2. Write the actual regex to the `lib/detectBrowser.js` file. In most cases adding\n                   the regex to the list of existing regexes will be suitable (if usage of `detect-brower`\n                   returns `undefined` for instance), but in some cases you might have to add it before\n                   an existing regex.  This would be true for a case where you have a browser that\n                   is a specialised variant of an existing browser but is identified as the\n                   non-specialised case.\n              \n                When writing the regular expression remember that you would write it containing a\n                single [capturing group](https://regexone.com/lesson/capturing_groups) which\n                captures the version number of the browser.\n              \n              **/\n\nfunction detect() {\n  var nodeVersion = getNodeVersion();\n  if (nodeVersion) {\n    return nodeVersion;\n  } else if (typeof navigator !== 'undefined') {\n    return parseUserAgent(navigator.userAgent);\n  }\n\n  return null;\n}\n\nfunction detectOS(userAgentString) {\n  var rules = getOperatingSystemRules();\n  var detected = rules.filter(function (os) {\n    return os.rule && os.rule.test(userAgentString);\n  })[0];\n\n  return detected ? detected.name : null;\n}\n\nfunction getNodeVersion() {\n  var isNode = typeof navigator === 'undefined' && typeof process !== 'undefined';\n  return isNode ? {\n    name: 'node',\n    version: process.version.slice(1),\n    os: __webpack_require__(18).type().toLowerCase() } :\n  null;\n}\n\nfunction parseUserAgent(userAgentString) {\n  var browsers = getBrowserRules();\n  if (!userAgentString) {\n    return null;\n  }\n\n  var detected = browsers.map(function (browser) {\n    var match = browser.rule.exec(userAgentString);\n    var version = match && match[1].split(/[._]/).slice(0, 3);\n\n    if (version && version.length < 3) {\n      version = version.concat(version.length == 1 ? [0, 0] : [0]);\n    }\n\n    return match && {\n      name: browser.name,\n      version: version.join('.') };\n\n  }).filter(Boolean)[0] || null;\n\n  if (detected) {\n    detected.os = detectOS(userAgentString);\n  }\n\n  return detected;\n}\n\nfunction getBrowserRules() {\n  return buildRules([\n  ['edge', /Edge\\/([0-9\\._]+)/],\n  ['yandexbrowser', /YaBrowser\\/([0-9\\._]+)/],\n  ['vivaldi', /Vivaldi\\/([0-9\\.]+)/],\n  ['kakaotalk', /KAKAOTALK\\s([0-9\\.]+)/],\n  ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/],\n  ['phantomjs', /PhantomJS\\/([0-9\\.]+)(:?\\s|$)/],\n  ['crios', /CriOS\\/([0-9\\.]+)(:?\\s|$)/],\n  ['firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/],\n  ['fxios', /FxiOS\\/([0-9\\.]+)/],\n  ['opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/],\n  ['opera', /OPR\\/([0-9\\.]+)(:?\\s|$)$/],\n  ['ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+).*\\).*Gecko$/],\n  ['ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/],\n  ['ie', /MSIE\\s(7\\.0)/],\n  ['bb10', /BB10;\\sTouch.*Version\\/([0-9\\.]+)/],\n  ['android', /Android\\s([0-9\\.]+)/],\n  ['ios', /Version\\/([0-9\\._]+).*Mobile.*Safari.*/],\n  ['safari', /Version\\/([0-9\\._]+).*Safari/]]);\n\n}\n\nfunction getOperatingSystemRules() {\n  return buildRules([\n  ['iOS', /iP(hone|od|ad)/],\n  ['Android OS', /Android/],\n  ['BlackBerry OS', /BlackBerry|BB10/],\n  ['Windows Mobile', /IEMobile/],\n  ['Amazon OS', /Kindle/],\n  ['Windows 3.11', /Win16/],\n  ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/],\n  ['Windows 98', /(Windows 98)|(Win98)/],\n  ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/],\n  ['Windows XP', /(Windows NT 5.1)|(Windows XP)/],\n  ['Windows Server 2003', /(Windows NT 5.2)/],\n  ['Windows Vista', /(Windows NT 6.0)/],\n  ['Windows 7', /(Windows NT 6.1)/],\n  ['Windows 8', /(Windows NT 6.2)/],\n  ['Windows 8.1', /(Windows NT 6.3)/],\n  ['Windows 10', /(Windows NT 10.0)/],\n  ['Windows ME', /Windows ME/],\n  ['Open BSD', /OpenBSD/],\n  ['Sun OS', /SunOS/],\n  ['Linux', /(Linux)|(X11)/],\n  ['Mac OS', /(Mac_PowerPC)|(Macintosh)/],\n  ['QNX', /QNX/],\n  ['BeOS', /BeOS/],\n  ['OS/2', /OS\\/2/],\n  ['Search Bot', /(nuhk)|(Googlebot)|(Yammybot)|(Openbot)|(Slurp)|(MSNBot)|(Ask Jeeves\\/Teoma)|(ia_archiver)/]]);\n\n}\n\nfunction buildRules(ruleTuples) {\n  return ruleTuples.map(function (tuple) {\n    return {\n      name: tuple[0],\n      rule: tuple[1] };\n\n  });\n}\n\nmodule.exports = {\n  detect: detect,\n  detectOS: detectOS,\n  getNodeVersion: getNodeVersion,\n  parseUserAgent: parseUserAgent };\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///17\n")},function(module,exports,__webpack_require__){"use strict";eval("exports.endianness = function () {return 'LE';};\n\nexports.hostname = function () {\n    if (typeof location !== 'undefined') {\n        return location.hostname;\n    } else\n    return '';\n};\n\nexports.loadavg = function () {return [];};\n\nexports.uptime = function () {return 0;};\n\nexports.freemem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.totalmem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.cpus = function () {return [];};\n\nexports.type = function () {return 'Browser';};\n\nexports.release = function () {\n    if (typeof navigator !== 'undefined') {\n        return navigator.appVersion;\n    }\n    return '';\n};\n\nexports.networkInterfaces =\nexports.getNetworkInterfaces =\nfunction () {return {};};\n\nexports.arch = function () {return 'javascript';};\n\nexports.platform = function () {return 'browser';};\n\nexports.tmpdir = exports.tmpDir = function () {\n    return '/tmp';\n};\n\nexports.EOL = '\\n';//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vbm9kZV9tb2R1bGVzL29zLWJyb3dzZXJpZnkvYnJvd3Nlci5qcz9jMWFhIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMuZW5kaWFubmVzcyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuICdMRScgfTtcblxuZXhwb3J0cy5ob3N0bmFtZSA9IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAodHlwZW9mIGxvY2F0aW9uICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICByZXR1cm4gbG9jYXRpb24uaG9zdG5hbWVcbiAgICB9XG4gICAgZWxzZSByZXR1cm4gJyc7XG59O1xuXG5leHBvcnRzLmxvYWRhdmcgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBbXSB9O1xuXG5leHBvcnRzLnVwdGltZSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIDAgfTtcblxuZXhwb3J0cy5mcmVlbWVtID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBOdW1iZXIuTUFYX1ZBTFVFO1xufTtcblxuZXhwb3J0cy50b3RhbG1lbSA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gTnVtYmVyLk1BWF9WQUxVRTtcbn07XG5cbmV4cG9ydHMuY3B1cyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFtdIH07XG5cbmV4cG9ydHMudHlwZSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuICdCcm93c2VyJyB9O1xuXG5leHBvcnRzLnJlbGVhc2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKHR5cGVvZiBuYXZpZ2F0b3IgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybiBuYXZpZ2F0b3IuYXBwVmVyc2lvbjtcbiAgICB9XG4gICAgcmV0dXJuICcnO1xufTtcblxuZXhwb3J0cy5uZXR3b3JrSW50ZXJmYWNlc1xuPSBleHBvcnRzLmdldE5ldHdvcmtJbnRlcmZhY2VzXG49IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHt9IH07XG5cbmV4cG9ydHMuYXJjaCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuICdqYXZhc2NyaXB0JyB9O1xuXG5leHBvcnRzLnBsYXRmb3JtID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gJ2Jyb3dzZXInIH07XG5cbmV4cG9ydHMudG1wZGlyID0gZXhwb3J0cy50bXBEaXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuICcvdG1wJztcbn07XG5cbmV4cG9ydHMuRU9MID0gJ1xcbic7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gbm9kZV9tb2R1bGVzL29zLWJyb3dzZXJpZnkvYnJvd3Nlci5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///18\n")},function(module,exports,__webpack_require__){"use strict";eval('Object.defineProperty(exports, "__esModule", { value: true });var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var _flvdemux = __webpack_require__(20);var _flvdemux2 = _interopRequireDefault(_flvdemux);\nvar _mp4remux = __webpack_require__(27);var _mp4remux2 = _interopRequireDefault(_mp4remux);\nvar _helper = __webpack_require__(3);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}var\n\n\n\nMuxController = function () {\n    function MuxController() {_classCallCheck(this, MuxController);\n        this._flvDemux = new _flvdemux2.default();\n\n        this._mp4Remux = new _mp4remux2.default({\n            audioTrack: this._flvDemux.audioTrack,\n            videoTrack: this._flvDemux.videoTrack,\n            mediaInfo: this._flvDemux.mediaInfo });\n\n\n\n        this._videoTrack = this._flvDemux.videoTrack;\n        this._audioTrack = this._flvDemux.audioTrack;\n    }_createClass(MuxController, [{ key: \'parse\', value: function parse(\n        chunkArray) {var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "MS";\n            this._flvDemux.parse(chunkArray);\n\n            if (type === "IS") {var _mp4Remux$generateIS =\n\n                this._mp4Remux.generateIS(),videoIS = _mp4Remux$generateIS.videoIS,audioIS = _mp4Remux$generateIS.audioIS;\n\n                return {\n                    videoIS: videoIS,\n                    audioIS: audioIS,\n                    videoMime: this._flvDemux.videoMIME,\n                    audioMime: this._flvDemux.audioMIME };\n\n            } else {\n\n                // cache at least 2 video tags\n                if (this._videoTrack.samples.length > 1) {var _mp4Remux$generateMS =\n\n\n                    this._mp4Remux.generateMS(this._lastVideoSample.timeStamp),audioMS = _mp4Remux$generateMS.audioMS,videoMS = _mp4Remux$generateMS.videoMS;\n\n\n\n                    return {\n                        audioMS: audioMS, videoMS: videoMS };\n\n\n                }\n\n                return {};\n\n            }\n        } }]);return MuxController;}();\n\n\n/**\n                                         * TODO\n                                         *      clear audio and video \n                                         *      ? save the video and audio IS\n                                         *      reset the timeBase of video and audio\n                                         *      clear the tmpBuffer in specific sourceBuffer\n                                         * \n                                         */exports.default = MuxController;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL211eC9pbmRleC5qcz83NDMwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBGTFZEZW11eCBmcm9tICcuL2RlbXV4L2ZsdmRlbXV4JztcbmltcG9ydCBNUDRSZW11eCBmcm9tICcuL3JlbXV4L21wNHJlbXV4JztcbmltcG9ydCB7XG4gICAgY29uY2F0QnVmZmVyXG59IGZyb20gJ2RlYnVnL2hlbHBlcic7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE11eENvbnRyb2xsZXIge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLl9mbHZEZW11eCA9IG5ldyBGTFZEZW11eCgpO1xuXG4gICAgICAgIHRoaXMuX21wNFJlbXV4ID0gbmV3IE1QNFJlbXV4KHtcbiAgICAgICAgICAgIGF1ZGlvVHJhY2s6IHRoaXMuX2ZsdkRlbXV4LmF1ZGlvVHJhY2ssXG4gICAgICAgICAgICB2aWRlb1RyYWNrOiB0aGlzLl9mbHZEZW11eC52aWRlb1RyYWNrLFxuICAgICAgICAgICAgbWVkaWFJbmZvOiB0aGlzLl9mbHZEZW11eC5tZWRpYUluZm9cbiAgICAgICAgfSk7XG5cblxuICAgICAgICB0aGlzLl92aWRlb1RyYWNrID0gdGhpcy5fZmx2RGVtdXgudmlkZW9UcmFjaztcbiAgICAgICAgdGhpcy5fYXVkaW9UcmFjayA9IHRoaXMuX2ZsdkRlbXV4LmF1ZGlvVHJhY2s7XG4gICAgfVxuICAgIHBhcnNlKGNodW5rQXJyYXksIHR5cGUgPSBcIk1TXCIpIHtcbiAgICAgICAgdGhpcy5fZmx2RGVtdXgucGFyc2UoY2h1bmtBcnJheSk7XG4gICAgICAgIFxuICAgICAgICBpZiAodHlwZSA9PT0gXCJJU1wiKSB7XG4gICAgICAgICAgICBsZXQge3ZpZGVvSVMsXG4gICAgICAgICAgICAgICAgYXVkaW9JU30gPSB0aGlzLl9tcDRSZW11eC5nZW5lcmF0ZUlTKCk7XG5cbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgdmlkZW9JUyxcbiAgICAgICAgICAgICAgICBhdWRpb0lTLFxuICAgICAgICAgICAgICAgIHZpZGVvTWltZTp0aGlzLl9mbHZEZW11eC52aWRlb01JTUUsXG4gICAgICAgICAgICAgICAgYXVkaW9NaW1lOnRoaXMuX2ZsdkRlbXV4LmF1ZGlvTUlNRVxuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuXG4gICAgICAgICAgICAvLyBjYWNoZSBhdCBsZWFzdCAyIHZpZGVvIHRhZ3NcbiAgICAgICAgICAgIGlmICh0aGlzLl92aWRlb1RyYWNrLnNhbXBsZXMubGVuZ3RoID4gMSkge1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGxldCB7YXVkaW9NUyx2aWRlb01TfSA9IHRoaXMuX21wNFJlbXV4LmdlbmVyYXRlTVModGhpcy5fbGFzdFZpZGVvU2FtcGxlLnRpbWVTdGFtcCk7XG4gICAgICAgICAgICBcblxuXG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgYXVkaW9NUyx2aWRlb01TXG4gICAgICAgICAgICAgICAgfVxuICAgIFxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4ge307XG4gXG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8qKlxuICogVE9ET1xuICogICAgICBjbGVhciBhdWRpbyBhbmQgdmlkZW8gXG4gKiAgICAgID8gc2F2ZSB0aGUgdmlkZW8gYW5kIGF1ZGlvIElTXG4gKiAgICAgIHJlc2V0IHRoZSB0aW1lQmFzZSBvZiB2aWRlbyBhbmQgYXVkaW9cbiAqICAgICAgY2xlYXIgdGhlIHRtcEJ1ZmZlciBpbiBzcGVjaWZpYyBzb3VyY2VCdWZmZXJcbiAqIFxuICovXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9tdXgvaW5kZXguanMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7QUFqREEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///19\n')},function(module,exports,__webpack_require__){"use strict";eval("Object.defineProperty(exports, \"__esModule\", { value: true });var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var _log = __webpack_require__(0);var _log2 = _interopRequireDefault(_log);\nvar _baseinfo = __webpack_require__(21);var _baseinfo2 = _interopRequireDefault(_baseinfo);\nvar _amf = __webpack_require__(22);var _amf2 = _interopRequireDefault(_amf);\nvar _avcdemux = __webpack_require__(23);var _avcdemux2 = _interopRequireDefault(_avcdemux);\nvar _aacdemux = __webpack_require__(26);var _aacdemux2 = _interopRequireDefault(_aacdemux);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== \"function\" && superClass !== null) {throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}\n\n\nvar log = new _log2.default('FLVDemux');var\n\nFLVDemux = function (_BaseInfo) {_inherits(FLVDemux, _BaseInfo);\n    function FLVDemux() {_classCallCheck(this, FLVDemux);var _this = _possibleConstructorReturn(this, (FLVDemux.__proto__ || Object.getPrototypeOf(FLVDemux)).call(this));\n\n        _this._type = {\n            header: 'header',\n            video: \"video\",\n            audio: \"audio\",\n            script: \"script\"\n\n\n            // we don't get return of function to save values just pass the video and audio\n            // object to save values all following code have only one entry -- parse()\n        };_this.AVC = new _avcdemux2.default({\n            videoTrack: _this._videoTrack,\n            mediaInfo: _this._mediaInfo });\n\n        _this.AAC = new _aacdemux2.default({\n            audioTrack: _this._audioTrack,\n            mediaInfo: _this._mediaInfo });return _this;\n\n\n    }_createClass(FLVDemux, [{ key: 'parse', value: function parse(\n        chunkArray) {var _iteratorNormalCompletion = true;var _didIteratorError = false;var _iteratorError = undefined;try {\n                for (var _iterator = chunkArray[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {var chunk = _step.value;\n                    var info = chunk.info;\n                    switch (info.type) {\n                        case this._type.header:\n                            this._mediaInfo.hasVideo = info.hasVideo;\n                            this._mediaInfo.hasAudio = info.hasAudio;\n                            break;\n                        case this._type.video:\n                            if (!this._mediaInfo.hasVideo) return log.w('The FLVheader indicates hasVideo ', this._hasVideo, ' but accidentally enounter a video tag', chunk);\n                            this._parseVideo(chunk);\n                            break;\n                        case this._type.audio:\n                            if (!this._mediaInfo.hasAudio) return log.w('The FLVheader indicates hasVideo ', this._hasAudio, ' but accidentally enounter a audio tag', chunk);\n                            this._parseAudio(chunk);\n                            break;\n                        case this._type.script:\n                            this._parseScript(chunk);\n                            break;}\n\n                }} catch (err) {_didIteratorError = true;_iteratorError = err;} finally {try {if (!_iteratorNormalCompletion && _iterator.return) {_iterator.return();}} finally {if (_didIteratorError) {throw _iteratorError;}}}\n        } }, { key: '_parseVideo', value: function _parseVideo(\n        chunk) {var\n\n            buffer =\n\n            chunk.buffer,info = chunk.info;\n\n            buffer = buffer.slice(info.dataOffset);\n\n            var header = new DataView(buffer).getUint8(0),\n            frameType = (header & 240) >>> 4,\n            codecId = header & 15;\n\n            if (codecId !== 7) {\n                log.e(\"It is only support AVC format(7), but you type code is \" + codecId);\n                return;\n            }\n\n            this.AVC.parse(buffer.slice(1), frameType, codecId, info.timeStamp);\n\n        } }, { key: '_parseAudio', value: function _parseAudio(\n        chunk) {var\n            buffer = chunk.buffer,info = chunk.info;\n\n            buffer = buffer.slice(info.dataOffset);\n\n            var v = new DataView(buffer);\n\n            var soundSpec = v.getUint8(0);\n\n            var soundFormat = soundSpec >>> 4;\n            if (soundFormat !== 2 && soundFormat !== 10) {\n                // only support MP3 or ACC format\n                log.e('we do not support this type' + soundFormat);\n                return;\n            }\n\n            var soundRate = (soundSpec & 12) >>> 2;\n            if (soundRate >= 0 && soundRate <= 4) {\n                soundRate = this._flvSoundRateTable[soundRate];\n            } else {\n                log.e('Invalid soundRate: ' + soundRate);\n                return;\n            }\n\n            var soundSize = (soundSpec & 2) >>> 1; // unused\n            var soundType = soundSpec & 1;\n\n            var meta = this._audioTrack.meta;\n\n            meta.audioSampleRate = soundRate;\n            meta.channelCount = soundType === 0 ?\n            1 :\n            2; // mono or stereo\n\n            v = null;\n\n            buffer = buffer.slice(1);\n\n            if (soundFormat === 2) {\n                // MP3\n            } else if (soundFormat === 10) {\n                // AAC\n                this.AAC.parse(buffer);\n\n            }\n\n\n        } }, { key: '_parseScript', value: function _parseScript(\n        chunk) {var\n\n            buffer =\n\n            chunk.buffer,info = chunk.info;\n\n            var scriptData = _amf2.default.parseScriptData(buffer, info.dataOffset, info.dataSize);\n\n            Object.assign(this._mediaInfo, scriptData.onMetaData);\n\n        } }]);return FLVDemux;}(_baseinfo2.default);exports.default = FLVDemux;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL211eC9kZW11eC9mbHZkZW11eC5qcz9mMmE0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBMb2cgZnJvbSAnbGliL2xvZyc7XG5pbXBvcnQgQmFzZUluZm8gZnJvbSAnLi9saWIvYmFzZWluZm8nO1xuaW1wb3J0IEFNRiBmcm9tICcuL2xpYi9hbWYnO1xuaW1wb3J0IEFWQyBmcm9tICcuL2F2Y2RlbXV4JztcbmltcG9ydCBBQUMgZnJvbSAnLi9hYWNkZW11eCc7XG5cblxuY29uc3QgbG9nID0gbmV3IExvZygnRkxWRGVtdXgnKTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRkxWRGVtdXggZXh0ZW5kcyBCYXNlSW5mbyB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuX3R5cGUgPSB7XG4gICAgICAgICAgICBoZWFkZXI6ICdoZWFkZXInLFxuICAgICAgICAgICAgdmlkZW86IFwidmlkZW9cIixcbiAgICAgICAgICAgIGF1ZGlvOiBcImF1ZGlvXCIsXG4gICAgICAgICAgICBzY3JpcHQ6IFwic2NyaXB0XCJcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHdlIGRvbid0IGdldCByZXR1cm4gb2YgZnVuY3Rpb24gdG8gc2F2ZSB2YWx1ZXMganVzdCBwYXNzIHRoZSB2aWRlbyBhbmQgYXVkaW9cbiAgICAgICAgLy8gb2JqZWN0IHRvIHNhdmUgdmFsdWVzIGFsbCBmb2xsb3dpbmcgY29kZSBoYXZlIG9ubHkgb25lIGVudHJ5IC0tIHBhcnNlKClcbiAgICAgICAgdGhpcy5BVkMgPSBuZXcgQVZDKHtcbiAgICAgICAgICAgIHZpZGVvVHJhY2s6IHRoaXMuX3ZpZGVvVHJhY2ssXG4gICAgICAgICAgICBtZWRpYUluZm86IHRoaXMuX21lZGlhSW5mb1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5BQUMgPSBuZXcgQUFDKHtcbiAgICAgICAgICAgIGF1ZGlvVHJhY2s6IHRoaXMuX2F1ZGlvVHJhY2ssXG4gICAgICAgICAgICBtZWRpYUluZm86IHRoaXMuX21lZGlhSW5mb1xuICAgICAgICB9KTtcblxuICAgIH1cbiAgICBwYXJzZShjaHVua0FycmF5KSB7XG4gICAgICAgIGZvciAodmFyIGNodW5rIG9mIGNodW5rQXJyYXkpIHtcbiAgICAgICAgICAgIGxldCBpbmZvID0gY2h1bmsuaW5mbztcbiAgICAgICAgICAgIHN3aXRjaCAoaW5mby50eXBlKSB7XG4gICAgICAgICAgICAgICAgY2FzZSB0aGlzLl90eXBlLmhlYWRlcjpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fbWVkaWFJbmZvLmhhc1ZpZGVvID0gaW5mby5oYXNWaWRlbztcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fbWVkaWFJbmZvLmhhc0F1ZGlvID0gaW5mby5oYXNBdWRpbztcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSB0aGlzLl90eXBlLnZpZGVvOlxuICAgICAgICAgICAgICAgICAgICBpZiAoIXRoaXMuX21lZGlhSW5mby5oYXNWaWRlbykgcmV0dXJuIGxvZy53KCdUaGUgRkxWaGVhZGVyIGluZGljYXRlcyBoYXNWaWRlbyAnLCB0aGlzLl9oYXNWaWRlbywgJyBidXQgYWNjaWRlbnRhbGx5IGVub3VudGVyIGEgdmlkZW8gdGFnJywgY2h1bmspXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX3BhcnNlVmlkZW8oY2h1bmspO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIHRoaXMuX3R5cGUuYXVkaW86XG4gICAgICAgICAgICAgICAgICAgIGlmICghdGhpcy5fbWVkaWFJbmZvLmhhc0F1ZGlvKSByZXR1cm4gbG9nLncoJ1RoZSBGTFZoZWFkZXIgaW5kaWNhdGVzIGhhc1ZpZGVvICcsIHRoaXMuX2hhc0F1ZGlvLCAnIGJ1dCBhY2NpZGVudGFsbHkgZW5vdW50ZXIgYSBhdWRpbyB0YWcnLCBjaHVuaylcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fcGFyc2VBdWRpbyhjaHVuayk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgdGhpcy5fdHlwZS5zY3JpcHQ6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX3BhcnNlU2NyaXB0KGNodW5rKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgX3BhcnNlVmlkZW8oY2h1bmspIHtcbiAgICAgICAgbGV0IHtcbiAgICAgICAgICAgIGJ1ZmZlcixcbiAgICAgICAgICAgIGluZm9cbiAgICAgICAgfSA9IGNodW5rO1xuXG4gICAgICAgIGJ1ZmZlciA9IGJ1ZmZlci5zbGljZShpbmZvLmRhdGFPZmZzZXQpO1xuXG4gICAgICAgIGxldCBoZWFkZXIgPSBuZXcgRGF0YVZpZXcoYnVmZmVyKS5nZXRVaW50OCgwKSxcbiAgICAgICAgICAgIGZyYW1lVHlwZSA9IChoZWFkZXIgJiAyNDApID4+PiA0LFxuICAgICAgICAgICAgY29kZWNJZCA9IGhlYWRlciAmIDE1O1xuXG4gICAgICAgIGlmIChjb2RlY0lkICE9PSA3KSB7XG4gICAgICAgICAgICBsb2cuZShcIkl0IGlzIG9ubHkgc3VwcG9ydCBBVkMgZm9ybWF0KDcpLCBidXQgeW91IHR5cGUgY29kZSBpcyBcIiArIGNvZGVjSWQpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5BVkMucGFyc2UoYnVmZmVyLnNsaWNlKDEpLCBmcmFtZVR5cGUsIGNvZGVjSWQsaW5mby50aW1lU3RhbXApO1xuXG4gICAgfVxuICAgIF9wYXJzZUF1ZGlvKGNodW5rKSB7XG4gICAgICAgIGxldCB7YnVmZmVyLGluZm99ID0gY2h1bms7XG5cbiAgICAgICAgYnVmZmVyID0gYnVmZmVyLnNsaWNlKGluZm8uZGF0YU9mZnNldCk7XG5cbiAgICAgICAgbGV0IHYgPSBuZXcgRGF0YVZpZXcoYnVmZmVyKTtcblxuICAgICAgICBsZXQgc291bmRTcGVjID0gdi5nZXRVaW50OCgwKTtcblxuICAgICAgICBsZXQgc291bmRGb3JtYXQgPSBzb3VuZFNwZWMgPj4+IDQ7XG4gICAgICAgIGlmIChzb3VuZEZvcm1hdCAhPT0gMiAmJiBzb3VuZEZvcm1hdCAhPT0gMTApIHtcbiAgICAgICAgICAgIC8vIG9ubHkgc3VwcG9ydCBNUDMgb3IgQUNDIGZvcm1hdFxuICAgICAgICAgICAgbG9nLmUoJ3dlIGRvIG5vdCBzdXBwb3J0IHRoaXMgdHlwZScgKyBzb3VuZEZvcm1hdCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBsZXQgc291bmRSYXRlID0gKHNvdW5kU3BlYyAmIDEyKSA+Pj4gMjtcbiAgICAgICAgaWYgKHNvdW5kUmF0ZSA+PSAwICYmIHNvdW5kUmF0ZSA8PSA0KSB7XG4gICAgICAgICAgICBzb3VuZFJhdGUgPSB0aGlzLl9mbHZTb3VuZFJhdGVUYWJsZVtzb3VuZFJhdGVdO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbG9nLmUoJ0ludmFsaWQgc291bmRSYXRlOiAnICsgc291bmRSYXRlKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGxldCBzb3VuZFNpemUgPSAoc291bmRTcGVjICYgMikgPj4+IDE7IC8vIHVudXNlZFxuICAgICAgICBsZXQgc291bmRUeXBlID0gKHNvdW5kU3BlYyAmIDEpO1xuXG4gICAgICAgIGxldCBtZXRhID0gdGhpcy5fYXVkaW9UcmFjay5tZXRhO1xuXG4gICAgICAgIG1ldGEuYXVkaW9TYW1wbGVSYXRlID0gc291bmRSYXRlO1xuICAgICAgICBtZXRhLmNoYW5uZWxDb3VudCA9IChzb3VuZFR5cGUgPT09IDBcbiAgICAgICAgICAgID8gMVxuICAgICAgICAgICAgOiAyKTsgLy8gbW9ubyBvciBzdGVyZW9cblxuICAgICAgICB2ID0gbnVsbDtcblxuICAgICAgICBidWZmZXIgPSBidWZmZXIuc2xpY2UoMSk7XG5cbiAgICAgICAgaWYoc291bmRGb3JtYXQgPT09IDIpe1xuICAgICAgICAgICAgLy8gTVAzXG4gICAgICAgIH1lbHNlIGlmKHNvdW5kRm9ybWF0ID09PSAxMCl7XG4gICAgICAgICAgICAvLyBBQUNcbiAgICAgICAgICAgIHRoaXMuQUFDLnBhcnNlKGJ1ZmZlcilcblxuICAgICAgICB9XG5cblxuICAgIH1cbiAgICBfcGFyc2VTY3JpcHQoY2h1bmspIHtcbiAgICAgICAgbGV0IHtcbiAgICAgICAgICAgIGJ1ZmZlcixcbiAgICAgICAgICAgIGluZm9cbiAgICAgICAgfSA9IGNodW5rO1xuXG4gICAgICAgIGxldCBzY3JpcHREYXRhID0gQU1GLnBhcnNlU2NyaXB0RGF0YShidWZmZXIsIGluZm8uZGF0YU9mZnNldCwgaW5mby5kYXRhU2l6ZSk7XG5cbiAgICAgICAgT2JqZWN0LmFzc2lnbih0aGlzLl9tZWRpYUluZm8sIHNjcmlwdERhdGEub25NZXRhRGF0YSk7XG5cbiAgICB9XG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9tdXgvZGVtdXgvZmx2ZGVtdXguanMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVJBO0FBVUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///20\n")},function(module,exports,__webpack_require__){"use strict";eval("Object.defineProperty(exports, \"__esModule\", { value: true });var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}var TrackInfo = function () {\n    function TrackInfo() {_classCallCheck(this, TrackInfo);\n        this._videoTrack = {\n            type: 'video',\n            id: 1,\n            samples: [],\n            length: 0, // the data length of samples\n            meta: {\n                type: 'video',\n                id: 1,\n                timescale: 1000,\n                duration: 0,\n                codec: '',\n                refSampleDuration: null,\n                avcc: '', // used for stsd box\n                codecWidth: '',\n                codecHeight: '',\n                presentWidth: 0,\n                presentHeight: 0 } };\n\n\n\n\n\n        this._audioTrack = {\n            type: 'audio',\n            id: 2,\n            sequenceNumber: 0,\n            samples: [],\n            length: 0,\n            meta: _defineProperty({\n                type: 'audio',\n                id: 2,\n                timescale: 1000,\n                duration: 0,\n                codec: '',\n                refSampleDuration: null,\n                audioSampleRate: null,\n                config: null, // us\n                channelCount: null }, 'codec',\n            null) };\n\n\n\n        this._flvSoundRateTable = [5500, 11025, 22050, 44100, 48000]; // 5.5kHz~44kHz\n        this._hasVideo;\n        this._hasAudio;\n\n        this._mediaInfo = {\n            audiocodecid: 10,\n            audiodatarate: 62.5,\n            audiosamplerate: 48000,\n            audiosamplesize: 16,\n            duration: 0,\n            encoder: \"Lavf57.56.101\",\n            filesize: 0,\n            height: 640,\n            stereo: true,\n            videocodecid: 7,\n            videodatarate: 1171.875,\n            width: 368,\n            hasVideo: false,\n            hasAudio: false };\n\n    }_createClass(TrackInfo, [{ key: 'videoTrack', get: function get()\n        {\n            return this._videoTrack;\n        } }, { key: 'audioTrack', get: function get()\n        {\n            return this._audioTrack;\n        } }, { key: 'mediaInfo', get: function get()\n        {\n            return this._mediaInfo;\n        } }, { key: 'MIME', get: function get()\n        {\n            return 'video/mp4; codecs=\"' + this._videoTrack.meta.codec + ',' + this._audioTrack.meta.codec + '\"';\n        } }, { key: 'videoMIME', get: function get()\n        {\n            return 'video/mp4; codecs=\"' + this._videoTrack.meta.codec + '\"';\n        } }, { key: 'audioMIME', get: function get()\n        {\n            return 'audio/mp4; codecs=\"' + this._audioTrack.meta.codec + '\"';\n        } }]);return TrackInfo;}();exports.default = TrackInfo;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL211eC9kZW11eC9saWIvYmFzZWluZm8uanM/NTk3MiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBUcmFja0luZm8ge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLl92aWRlb1RyYWNrID0ge1xuICAgICAgICAgICAgdHlwZTogJ3ZpZGVvJyxcbiAgICAgICAgICAgIGlkOjEsXG4gICAgICAgICAgICBzYW1wbGVzOiBbXSxcbiAgICAgICAgICAgIGxlbmd0aDogMCwgLy8gdGhlIGRhdGEgbGVuZ3RoIG9mIHNhbXBsZXNcbiAgICAgICAgICAgIG1ldGE6IHtcbiAgICAgICAgICAgICAgICB0eXBlOiAndmlkZW8nLFxuICAgICAgICAgICAgICAgIGlkOjEsXG4gICAgICAgICAgICAgICAgdGltZXNjYWxlOiAxMDAwLFxuICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAwLFxuICAgICAgICAgICAgICAgIGNvZGVjOicnLFxuICAgICAgICAgICAgICAgIHJlZlNhbXBsZUR1cmF0aW9uOm51bGwsXG4gICAgICAgICAgICAgICAgYXZjYzonJywgLy8gdXNlZCBmb3Igc3RzZCBib3hcbiAgICAgICAgICAgICAgICBjb2RlY1dpZHRoOicnLFxuICAgICAgICAgICAgICAgIGNvZGVjSGVpZ2h0OicnLFxuICAgICAgICAgICAgICAgIHByZXNlbnRXaWR0aDowLFxuICAgICAgICAgICAgICAgIHByZXNlbnRIZWlnaHQ6MCxcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG5cblxuICAgICAgICB0aGlzLl9hdWRpb1RyYWNrID0ge1xuICAgICAgICAgICAgdHlwZTogJ2F1ZGlvJyxcbiAgICAgICAgICAgIGlkOiAyLFxuICAgICAgICAgICAgc2VxdWVuY2VOdW1iZXI6IDAsXG4gICAgICAgICAgICBzYW1wbGVzOiBbXSxcbiAgICAgICAgICAgIGxlbmd0aDogMCxcbiAgICAgICAgICAgIG1ldGE6IHtcbiAgICAgICAgICAgICAgICB0eXBlOiAnYXVkaW8nLFxuICAgICAgICAgICAgICAgIGlkOiAyLFxuICAgICAgICAgICAgICAgIHRpbWVzY2FsZTogMTAwMCxcbiAgICAgICAgICAgICAgICBkdXJhdGlvbjogMCxcbiAgICAgICAgICAgICAgICBjb2RlYzonJyxcbiAgICAgICAgICAgICAgICByZWZTYW1wbGVEdXJhdGlvbjpudWxsLFxuICAgICAgICAgICAgICAgIGF1ZGlvU2FtcGxlUmF0ZTpudWxsLFxuICAgICAgICAgICAgICAgIGNvbmZpZzpudWxsLCAvLyB1c1xuICAgICAgICAgICAgICAgIGNoYW5uZWxDb3VudDpudWxsLFxuICAgICAgICAgICAgICAgIGNvZGVjOm51bGwsICBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuX2ZsdlNvdW5kUmF0ZVRhYmxlID0gWzU1MDAsIDExMDI1LCAyMjA1MCwgNDQxMDAsIDQ4MDAwXTsgLy8gNS41a0h6fjQ0a0h6XG4gICAgICAgIHRoaXMuX2hhc1ZpZGVvO1xuICAgICAgICB0aGlzLl9oYXNBdWRpbztcblxuICAgICAgICB0aGlzLl9tZWRpYUluZm8gPSB7XG4gICAgICAgICAgICBhdWRpb2NvZGVjaWQ6IDEwLFxuICAgICAgICAgICAgYXVkaW9kYXRhcmF0ZTogNjIuNSxcbiAgICAgICAgICAgIGF1ZGlvc2FtcGxlcmF0ZTogNDgwMDAsXG4gICAgICAgICAgICBhdWRpb3NhbXBsZXNpemU6IDE2LFxuICAgICAgICAgICAgZHVyYXRpb246IDAsXG4gICAgICAgICAgICBlbmNvZGVyOiBcIkxhdmY1Ny41Ni4xMDFcIiwgXG4gICAgICAgICAgICBmaWxlc2l6ZTogMCxcbiAgICAgICAgICAgIGhlaWdodDogNjQwLFxuICAgICAgICAgICAgc3RlcmVvOiB0cnVlLFxuICAgICAgICAgICAgdmlkZW9jb2RlY2lkOiA3LFxuICAgICAgICAgICAgdmlkZW9kYXRhcmF0ZTogMTE3MS44NzUsXG4gICAgICAgICAgICB3aWR0aDogMzY4LFxuICAgICAgICAgICAgaGFzVmlkZW86ZmFsc2UsXG4gICAgICAgICAgICBoYXNBdWRpbzpmYWxzZSxcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXQgdmlkZW9UcmFjaygpe1xuICAgICAgICByZXR1cm4gdGhpcy5fdmlkZW9UcmFjaztcbiAgICB9XG4gICAgZ2V0IGF1ZGlvVHJhY2soKXtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2F1ZGlvVHJhY2s7XG4gICAgfVxuICAgIGdldCBtZWRpYUluZm8oKXtcbiAgICAgICAgcmV0dXJuIHRoaXMuX21lZGlhSW5mbztcbiAgICB9XG4gICAgZ2V0IE1JTUUoKXtcbiAgICAgICAgcmV0dXJuICd2aWRlby9tcDQ7IGNvZGVjcz1cIicgKyB0aGlzLl92aWRlb1RyYWNrLm1ldGEuY29kZWMgKyAnLCcgKyB0aGlzLl9hdWRpb1RyYWNrLm1ldGEuY29kZWMgKyAnXCInO1xuICAgIH1cbiAgICBnZXQgdmlkZW9NSU1FKCl7XG4gICAgICAgIHJldHVybiAndmlkZW8vbXA0OyBjb2RlY3M9XCInICsgdGhpcy5fdmlkZW9UcmFjay5tZXRhLmNvZGVjICsgJ1wiJztcbiAgICB9XG4gICAgZ2V0IGF1ZGlvTUlNRSgpe1xuICAgICAgICByZXR1cm4gJ2F1ZGlvL21wNDsgY29kZWNzPVwiJyArIHRoaXMuX2F1ZGlvVHJhY2subWV0YS5jb2RlYyArICdcIic7XG4gICAgfVxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvbXV4L2RlbXV4L2xpYi9iYXNlaW5mby5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///21\n")},function(module,exports,__webpack_require__){"use strict";eval("Object.defineProperty(exports, \"__esModule\", { value: true });var _log = __webpack_require__(0);var _log2 = _interopRequireDefault(_log);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\nvar log = new _log2.default('AMF');\n\n\nvar AMF = {\n    parseScriptData: function parseScriptData(arrayBuffer, dataOffset, dataSize) {\n        var data = {};\n\n        try {\n            var name = AMF.parseValue(arrayBuffer, dataOffset, dataSize);\n            var value = AMF.parseValue(arrayBuffer, dataOffset + name.size, dataSize - name.size);\n\n            data[name.data] = value.data;\n        } catch (e) {\n            log.e('AMF', e.toString());\n        }\n\n        return data;\n    },\n    parseObject: function parseObject(arrayBuffer, dataOffset, dataSize) {\n        if (dataSize < 3) {\n            throw new Error('Data not enough when parse ScriptDataObject');\n        }\n        var name = AMF.parseString(arrayBuffer, dataOffset, dataSize);\n        var value = AMF.parseValue(arrayBuffer, dataOffset + name.size, dataSize - name.size);\n        var isObjectEnd = value.objectEnd;\n\n        return {\n            data: {\n                name: name.data,\n                value: value.data },\n\n            size: name.size + value.size,\n            objectEnd: isObjectEnd };\n\n    },\n    parseVariable: function parseVariable(arrayBuffer, dataOffset, dataSize) {\n        return AMF.parseObject(arrayBuffer, dataOffset, dataSize);\n    },\n    parseString: function parseString(arrayBuffer, dataOffset, dataSize) {\n        if (dataSize < 2) {\n            throw new Error('Data not enough when parse String');\n        }\n        var v = new DataView(arrayBuffer, dataOffset, dataSize);\n        var length = v.getUint16(0);\n\n        var str = void 0;\n        if (length > 0) {\n            str = AMF.decodeUTF8(new Uint8Array(arrayBuffer, dataOffset + 2, length));\n        } else {\n            str = '';\n        }\n\n        return {\n            data: str,\n            size: 2 + length };\n\n    },\n    parseLongString: function parseLongString(arrayBuffer, dataOffset, dataSize) {\n        if (dataSize < 4) {\n            throw new Error('Data not enough when parse LongString');\n        }\n        var v = new DataView(arrayBuffer, dataOffset, dataSize);\n        var length = v.getUint32(0);\n\n        var str = void 0;\n        if (length > 0) {\n            str = AMF.decodeUTF8(new Uint8Array(arrayBuffer, dataOffset + 4, length));\n        } else {\n            str = '';\n        }\n\n        return {\n            data: str,\n            size: 4 + length };\n\n    },\n    parseDate: function parseDate(arrayBuffer, dataOffset, dataSize) {\n        if (dataSize < 10) {\n            throw new Error('Data size invalid when parse Date');\n        }\n        var v = new DataView(arrayBuffer, dataOffset, dataSize);\n        var timestamp = v.getFloat64(0);\n        var localTimeOffset = v.getInt16(8);\n        timestamp += localTimeOffset * 60 * 1000; // get UTC time\n\n        return {\n            data: new Date(timestamp),\n            size: 8 + 2 };\n\n    },\n    parseValue: function parseValue(arrayBuffer, dataOffset, dataSize) {\n        if (dataSize < 1) {\n            throw new Error('Data not enough when parse Value');\n        }\n\n        var v = new DataView(arrayBuffer, dataOffset, dataSize);\n\n        var offset = 1;\n        var type = v.getUint8(0);\n        var value = void 0;\n        var objectEnd = false;\n\n        try {\n            switch (type) {\n                case 0: // Number(Double) type\n                    value = v.getFloat64(1);\n                    offset += 8;\n                    break;\n                case 1:\n                    {// Boolean type\n                        var b = v.getUint8(1);\n                        value = b ?\n                        true :\n                        false;\n                        offset += 1;\n                        break;\n                    }\n                case 2:\n                    {// String type\n                        var amfstr = AMF.parseString(arrayBuffer, dataOffset + 1, dataSize - 1);\n                        value = amfstr.data;\n                        offset += amfstr.size;\n                        break;\n                    }\n                case 3:\n                    {// Object(s) type\n                        value = {};\n                        var terminal = 0; // workaround for malformed Objects which has missing ScriptDataObjectEnd\n                        if ((v.getUint32(dataSize - 4) & 0x00FFFFFF) === 9) {\n                            terminal = 3;\n                        }\n                        while (offset < dataSize - 4) {// 4 === type(UI8) + ScriptDataObjectEnd(UI24)\n                            var amfobj = AMF.parseObject(arrayBuffer, dataOffset + offset, dataSize - offset - terminal);\n                            if (amfobj.objectEnd)\n                            break;\n                            value[amfobj.data.name] = amfobj.data.value;\n                            offset += amfobj.size;\n                        }\n                        if (offset <= dataSize - 3) {\n                            var marker = v.getUint32(offset - 1) & 0x00FFFFFF;\n                            if (marker === 9) {\n                                offset += 3;\n                            }\n                        }\n                        break;\n                    }\n                case 8:\n                    {// ECMA array type (Mixed array)\n                        value = {};\n                        offset += 4; // ECMAArrayLength(UI32)\n                        var _terminal = 0; // workaround for malformed MixedArrays which has missing ScriptDataObjectEnd\n                        if ((v.getUint32(dataSize - 4) & 0x00FFFFFF) === 9) {\n                            _terminal = 3;\n                        }\n                        while (offset < dataSize - 8) {// 8 === type(UI8) + ECMAArrayLength(UI32) + ScriptDataVariableEnd(UI24)\n                            var amfvar = AMF.parseVariable(arrayBuffer, dataOffset + offset, dataSize - offset - _terminal);\n                            if (amfvar.objectEnd)\n                            break;\n                            value[amfvar.data.name] = amfvar.data.value;\n                            offset += amfvar.size;\n                        }\n                        if (offset <= dataSize - 3) {\n                            var _marker = v.getUint32(offset - 1) & 0x00FFFFFF;\n                            if (_marker === 9) {\n                                offset += 3;\n                            }\n                        }\n                        break;\n                    }\n                case 9: // ScriptDataObjectEnd\n                    value = undefined;\n                    offset = 1;\n                    objectEnd = true;\n                    break;\n                case 10:\n                    {// Strict array type\n                        // ScriptDataValue[n]. NOTE: according to video_file_format_spec_v10_1.pdf\n                        value = [];\n                        var strictArrayLength = v.getUint32(1);\n                        offset += 4;\n                        for (var i = 0; i < strictArrayLength; i++) {\n                            var val = AMF.parseValue(arrayBuffer, dataOffset + offset, dataSize - offset);\n                            value.push(val.data);\n                            offset += val.size;\n                        }\n                        break;\n                    }\n                case 11:\n                    {// Date type\n                        var date = AMF.parseDate(arrayBuffer, dataOffset + 1, dataSize - 1);\n                        value = date.data;\n                        offset += date.size;\n                        break;\n                    }\n                case 12:\n                    {// Long string type\n                        var amfLongStr = AMF.parseString(arrayBuffer, dataOffset + 1, dataSize - 1);\n                        value = amfLongStr.data;\n                        offset += amfLongStr.size;\n                        break;\n                    }\n                default:\n                    // ignore and skip\n                    offset = dataSize;\n                    log.w('AMF', 'Unsupported AMF value type ' + type);}\n\n        } catch (e) {\n            log.e('AMF', e.toString());\n        }\n\n        return { data: value, size: offset, objectEnd: objectEnd };\n    },\n    decodeUTF8: function decodeUTF8(data) {\n        var result = \"\";\n        var i = 0;\n        var c = 0;\n        var c1 = 0;\n        var c2 = 0;\n\n        // If we have a BOM skip it\n        if (data.length >= 3 && data[0] === 0xef && data[1] === 0xbb && data[2] === 0xbf) {\n            i = 3;\n        }\n\n        while (i < data.length) {\n            c = data[i];\n\n            if (c < 128) {\n                result += String.fromCharCode(c);\n                i++;\n            } else if (c > 191 && c < 224) {\n                if (i + 1 >= data.length) {\n                    throw \"UTF-8 Decode failed. Two byte character was truncated.\";\n                }\n                c2 = data[i + 1];\n                result += String.fromCharCode((c & 31) << 6 | c2 & 63);\n                i += 2;\n            } else {\n                if (i + 2 >= data.length) {\n                    throw \"UTF-8 Decode failed. Multi byte character was truncated.\";\n                }\n                c2 = data[i + 1];\n                c3 = data[i + 2];\n                result += String.fromCharCode((c & 15) << 12 | (c2 & 63) << 6 | c3 & 63);\n                i += 3;\n            }\n        }\n        return result;\n    } };exports.default =\n\n\n\nAMF;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///22\n")},function(module,exports,__webpack_require__){"use strict";eval("Object.defineProperty(exports, \"__esModule\", { value: true });var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var _log = __webpack_require__(0);var _log2 = _interopRequireDefault(_log);\nvar _utils = __webpack_require__(2);\nvar _sps_parse = __webpack_require__(24);var _sps_parse2 = _interopRequireDefault(_sps_parse);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}\n\n\nvar log = new _log2.default('AVCDemux');var\n\nAVCDemux = function () {\n    function AVCDemux(_ref)\n\n\n    {var videoTrack = _ref.videoTrack,mediaInfo = _ref.mediaInfo;_classCallCheck(this, AVCDemux);\n        this._videoTrack = videoTrack;\n        this._mediaInfo = mediaInfo;\n\n\n        // set the default frame rate if is not fixed\n        this._referenceFrameRate = {\n            fixed: true,\n            fps: 23.976,\n            fps_num: 23976,\n            fps_den: 1000 };\n\n\n        this._naluLengthSize = 4;\n        this._timestampBase = 0;\n\n        this._keyFrame = { 1: true, 2: false };\n    }_createClass(AVCDemux, [{ key: 'parse', value: function parse(\n\n        chunk, frameType, codecId, timeStamp) {\n\n            var v = new DataView(chunk);\n\n            var type = v.getUint8(0),\n            cts = v.getUint32(0) & 0x00FFFFFF;\n\n            v = null;\n\n            chunk = chunk.slice(4);\n\n            switch (type) {\n                case 0:\n                    this._parseConfig(chunk);\n                    break;\n                case 1:\n                    this._parseAVC(chunk, { cts: cts, frameType: frameType, timeStamp: timeStamp });\n                    break;\n                case 2:\n                // empty\n            }\n        }\n        /**\n           * \n           * @param {*} chunk \n           * @param {*} Object\n           */ }, { key: '_parseAVC', value: function _parseAVC(\n        chunk, _ref2) {var cts = _ref2.cts,frameType = _ref2.frameType,timeStamp = _ref2.timeStamp;\n            var v = new DataView(chunk);\n\n            var slices = [],\n            dataSize = chunk.byteLength,\n            offset = 0;\n\n            var keyFrame = !!this._keyFrame[frameType];\n\n            var naluLen = this._naluLengthSize;\n            var dts = this._timestampBase;\n\n            this._timestampBase += 23; // set the default value\n\n            while (offset < dataSize) {\n                if (offset + 4 >= dataSize) {\n                    log.w('not enought data to parse');\n                    break; // data not enough for next Nalu\n                }\n\n                // AVC1 decode\n                var naluSize = v.getUint32(offset); // Big-Endian read\n                if (naluLen === 3) {\n                    naluSize >>>= 8;\n                }\n\n                if (naluSize > dataSize - naluLen) {\n                    log.w('invalid nalu value');\n                    return;\n                }\n\n                var sliceType = v.getUint8(offset + naluLen) & 0x1F;\n\n                if (sliceType === 5) {\n                    // ?\n                    keyFrame = true;\n                }\n\n                var data = new Uint8Array(chunk, offset, naluLen + naluSize);\n\n                slices.push(data);\n\n\n                offset += naluLen + naluSize;\n            }\n\n            slices = _utils.mergeTypedArray.apply(null, slices);\n\n\n            if (slices.length) {\n                this._videoTrack.samples.push({\n                    slices: slices,\n                    length: offset,\n                    keyFrame: keyFrame,\n                    timeStamp: timeStamp,\n                    cts: cts });\n\n                this._videoTrack.length += offset;\n            }\n        } }, { key: '_parseConfig', value: function _parseConfig(\n        chunk) {\n            var v = new DataView(chunk);\n\n            var version = v.getUint8(0); // configurationVersion\n            var avcProfile = v.getUint8(1); // avcProfileIndication\n            var profileCompatibility = v.getUint8(2); // profile_compatibility\n            var avcLevel = v.getUint8(3); // AVCLevelIndication\n\n            if (version !== 1 || avcProfile === 0) {\n                log.e('Invalid AVCDecoderConfigurationRecord');\n                return;\n            }\n\n            var nalu_len = this._naluLengthSize = (v.getUint8(4) & 3) + 1; // lengthSizePlusOne\n            if (nalu_len !== 3 && nalu_len !== 4) {\n                log.e('Invalid NaluLengthSizeMinusOne: ' + nalu_len);\n                return;\n            }\n\n            var spsCount = v.getUint8(5) & 31; // get SequenceParameterSets count\n\n            if (spsCount === 0) {\n                log.e('the SequenceParameterSets count couldn\"t be 0');\n                return;\n            } else if (spsCount > 1) {\n                log.e('strange count of SPS, it should be 1 as usual');\n            }\n\n            // skip over 6B header\n            var offset = 6;\n\n            // start to decode SPS usually has only one SPS\n            for (var i = 0; i < spsCount; i++) {\n\n                // skip over decoding other strange AVCDecoderConfigurationRecord\n                if (i > 0)\n                continue;\n\n                // the divided flag is not the start code 00 00 00 01, but the 4B length of SPS\n                var spsLen = v.getUint16(offset);\n                offset += 2;\n\n                if (!spsLen)\n                continue;\n\n                var sps = new Uint8Array(chunk, offset, spsLen);\n\n                offset += spsLen;\n\n                var metaInfo = _sps_parse2.default.parseSPS(sps);\n\n                this._extrackInfo(metaInfo, sps);\n\n            }\n\n            this._videoTrack.meta.avcc = new Uint8Array(chunk);\n\n            console.log('parsed already, ', this._videoTrack);\n        } }, { key: '_extrackInfo', value: function _extrackInfo(\n        spsInfo, sps) {\n            var meta = this._videoTrack.meta;\n\n            meta.spsInfo = spsInfo;\n            meta.codecWidth = spsInfo.codec_size.width;\n            meta.codecHeight = spsInfo.codec_size.height;\n            meta.presentWidth = spsInfo.present_size.width;\n            meta.presentHeight = spsInfo.present_size.height;\n\n            // debugger\n            meta.frame_rate = spsInfo.frame_rate;\n\n            console.log(spsInfo);\n\n\n            if (spsInfo.frame_rate.fixed === false || spsInfo.frame_rate.fps_num === 0 || spsInfo.frame_rate.fps_den === 0) {\n                meta.frame_rate = this._referenceFrameRate;\n            }var _meta$frame_rate =\n\n\n\n\n            meta.frame_rate,fps_den = _meta$frame_rate.fps_den,fps_num = _meta$frame_rate.fps_num;\n\n            meta.refSampleDuration = Math.floor(meta.timescale * (fps_den / fps_num));\n\n\n            // get AVC codec\n            var codecArray = sps.subarray(1, 4);\n            var codecString = 'avc1.';\n            for (var j = 0; j < 3; j++) {\n                var h = codecArray[j].toString(16);\n                if (h.length < 2) {\n                    h = '0' + h;\n                }\n                codecString += h;\n            }\n            meta.codec = codecString;\n        } }]);return AVCDemux;}();exports.default = AVCDemux;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL211eC9kZW11eC9hdmNkZW11eC5qcz80MWYwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBMb2cgZnJvbSAnbGliL2xvZyc7XG5pbXBvcnQge21lcmdlVHlwZWRBcnJheX0gZnJvbSAnbGliL3V0aWxzJztcbmltcG9ydCBTUFNQYXJzZXIgZnJvbSAnLi9saWIvc3BzX3BhcnNlJztcblxuXG5jb25zdCBsb2cgPSBuZXcgTG9nKCdBVkNEZW11eCcpXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFWQ0RlbXV4IHtcbiAgICBjb25zdHJ1Y3Rvcih7XG4gICAgICAgIHZpZGVvVHJhY2ssXG4gICAgICAgIG1lZGlhSW5mb1xuICAgIH0pIHtcbiAgICAgICAgdGhpcy5fdmlkZW9UcmFjayA9IHZpZGVvVHJhY2s7XG4gICAgICAgIHRoaXMuX21lZGlhSW5mbyA9IG1lZGlhSW5mbztcblxuXG4gICAgICAgIC8vIHNldCB0aGUgZGVmYXVsdCBmcmFtZSByYXRlIGlmIGlzIG5vdCBmaXhlZFxuICAgICAgICB0aGlzLl9yZWZlcmVuY2VGcmFtZVJhdGUgPSB7XG4gICAgICAgICAgICBmaXhlZDogdHJ1ZSxcbiAgICAgICAgICAgIGZwczogMjMuOTc2LFxuICAgICAgICAgICAgZnBzX251bTogMjM5NzYsXG4gICAgICAgICAgICBmcHNfZGVuOiAxMDAwXG4gICAgICAgIH07XG5cbiAgICAgICAgdGhpcy5fbmFsdUxlbmd0aFNpemUgPSA0O1xuICAgICAgICB0aGlzLl90aW1lc3RhbXBCYXNlID0gMDtcblxuICAgICAgICB0aGlzLl9rZXlGcmFtZSA9IHsxOnRydWUsMjpmYWxzZX07XG4gICAgfVxuXG4gICAgcGFyc2UoY2h1bmssIGZyYW1lVHlwZSwgY29kZWNJZCx0aW1lU3RhbXApIHtcblxuICAgICAgICBsZXQgdiA9IG5ldyBEYXRhVmlldyhjaHVuayk7XG5cbiAgICAgICAgbGV0IHR5cGUgPSB2LmdldFVpbnQ4KDApLFxuICAgICAgICAgICAgY3RzID0gdi5nZXRVaW50MzIoMCkgJiAweDAwRkZGRkZGO1xuXG4gICAgICAgIHYgPSBudWxsO1xuXG4gICAgICAgIGNodW5rID0gY2h1bmsuc2xpY2UoNCk7XG5cbiAgICAgICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgdGhpcy5fcGFyc2VDb25maWcoY2h1bmspO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgIHRoaXMuX3BhcnNlQVZDKGNodW5rLHtjdHMsZnJhbWVUeXBlLHRpbWVTdGFtcH0pO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgICAgIC8vIGVtcHR5XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogXG4gICAgICogQHBhcmFtIHsqfSBjaHVuayBcbiAgICAgKiBAcGFyYW0geyp9IE9iamVjdFxuICAgICAqL1xuICAgIF9wYXJzZUFWQyhjaHVuayx7Y3RzLGZyYW1lVHlwZSx0aW1lU3RhbXB9KSB7XG4gICAgICAgIGxldCB2ID0gbmV3IERhdGFWaWV3KGNodW5rKTtcblxuICAgICAgICBsZXQgc2xpY2VzID0gW10sXG4gICAgICAgICAgICBkYXRhU2l6ZSA9IGNodW5rLmJ5dGVMZW5ndGgsXG4gICAgICAgICAgICBvZmZzZXQgPSAwO1xuXG4gICAgICAgIGxldCBrZXlGcmFtZSA9ICEhdGhpcy5fa2V5RnJhbWVbZnJhbWVUeXBlXTtcblxuICAgICAgICBsZXQgbmFsdUxlbiA9IHRoaXMuX25hbHVMZW5ndGhTaXplO1xuICAgICAgICBsZXQgZHRzID0gdGhpcy5fdGltZXN0YW1wQmFzZTtcblxuICAgICAgICB0aGlzLl90aW1lc3RhbXBCYXNlICs9IDIzOyAvLyBzZXQgdGhlIGRlZmF1bHQgdmFsdWVcblxuICAgICAgICB3aGlsZShvZmZzZXQgPCBkYXRhU2l6ZSApe1xuICAgICAgICAgICAgaWYgKG9mZnNldCArIDQgPj0gZGF0YVNpemUpIHtcbiAgICAgICAgICAgICAgICBsb2cudygnbm90IGVub3VnaHQgZGF0YSB0byBwYXJzZScpXG4gICAgICAgICAgICAgICAgYnJlYWs7IC8vIGRhdGEgbm90IGVub3VnaCBmb3IgbmV4dCBOYWx1XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAvLyBBVkMxIGRlY29kZVxuICAgICAgICAgICAgIGxldCBuYWx1U2l6ZSA9IHYuZ2V0VWludDMyKG9mZnNldCk7IC8vIEJpZy1FbmRpYW4gcmVhZFxuICAgICAgICAgICAgIGlmIChuYWx1TGVuID09PSAzKSB7XG4gICAgICAgICAgICAgICAgIG5hbHVTaXplID4+Pj0gODtcbiAgICAgICAgICAgICB9XG4gXG4gICAgICAgICAgICAgaWYgKG5hbHVTaXplID4gZGF0YVNpemUgLSBuYWx1TGVuKSB7XG4gICAgICAgICAgICAgICAgIGxvZy53KCdpbnZhbGlkIG5hbHUgdmFsdWUnKTtcbiAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgIH1cbiBcbiAgICAgICAgICAgICBsZXQgc2xpY2VUeXBlID0gdi5nZXRVaW50OChvZmZzZXQgKyBuYWx1TGVuKSAmIDB4MUY7XG4gXG4gICAgICAgICAgICAgaWYgKHNsaWNlVHlwZSA9PT0gNSkge1xuICAgICAgICAgICAgICAgICAvLyA/XG4gICAgICAgICAgICAgICAgIGtleUZyYW1lID0gdHJ1ZTtcbiAgICAgICAgICAgICB9XG4gXG4gICAgICAgICAgICAgbGV0IGRhdGEgPSBuZXcgVWludDhBcnJheShjaHVuaywgb2Zmc2V0LCBuYWx1TGVuICsgbmFsdVNpemUpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAgc2xpY2VzLnB1c2goZGF0YSk7XG4gXG4gXG4gICAgICAgICAgICAgb2Zmc2V0ICs9IG5hbHVMZW4gKyBuYWx1U2l6ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHNsaWNlcyA9IG1lcmdlVHlwZWRBcnJheS5hcHBseShudWxsLHNsaWNlcyk7XG5cblxuICAgICAgICBpZihzbGljZXMubGVuZ3RoKXtcbiAgICAgICAgICAgIHRoaXMuX3ZpZGVvVHJhY2suc2FtcGxlcy5wdXNoKHtcbiAgICAgICAgICAgICAgICBzbGljZXMsXG4gICAgICAgICAgICAgICAgbGVuZ3RoOm9mZnNldCxcbiAgICAgICAgICAgICAgICBrZXlGcmFtZSxcbiAgICAgICAgICAgICAgICB0aW1lU3RhbXAsXG4gICAgICAgICAgICAgICAgY3RzLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aGlzLl92aWRlb1RyYWNrLmxlbmd0aCArPSBvZmZzZXQ7XG4gICAgICAgIH1cbiAgICB9XG4gICAgX3BhcnNlQ29uZmlnKGNodW5rKSB7XG4gICAgICAgIGxldCB2ID0gbmV3IERhdGFWaWV3KGNodW5rKTtcblxuICAgICAgICBsZXQgdmVyc2lvbiA9IHYuZ2V0VWludDgoMCk7IC8vIGNvbmZpZ3VyYXRpb25WZXJzaW9uXG4gICAgICAgIGxldCBhdmNQcm9maWxlID0gdi5nZXRVaW50OCgxKTsgLy8gYXZjUHJvZmlsZUluZGljYXRpb25cbiAgICAgICAgbGV0IHByb2ZpbGVDb21wYXRpYmlsaXR5ID0gdi5nZXRVaW50OCgyKTsgLy8gcHJvZmlsZV9jb21wYXRpYmlsaXR5XG4gICAgICAgIGxldCBhdmNMZXZlbCA9IHYuZ2V0VWludDgoMyk7IC8vIEFWQ0xldmVsSW5kaWNhdGlvblxuXG4gICAgICAgIGlmICh2ZXJzaW9uICE9PSAxIHx8IGF2Y1Byb2ZpbGUgPT09IDApIHtcbiAgICAgICAgICAgIGxvZy5lKCdJbnZhbGlkIEFWQ0RlY29kZXJDb25maWd1cmF0aW9uUmVjb3JkJylcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGxldCBuYWx1X2xlbiA9IHRoaXMuX25hbHVMZW5ndGhTaXplID0gKHYuZ2V0VWludDgoNCkgJiAzKSArIDE7IC8vIGxlbmd0aFNpemVQbHVzT25lXG4gICAgICAgIGlmIChuYWx1X2xlbiAhPT0gMyAmJiBuYWx1X2xlbiAhPT0gNCkge1xuICAgICAgICAgICAgbG9nLmUoJ0ludmFsaWQgTmFsdUxlbmd0aFNpemVNaW51c09uZTogJyArIG5hbHVfbGVuKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGxldCBzcHNDb3VudCA9IHYuZ2V0VWludDgoNSkgJiAzMTsgLy8gZ2V0IFNlcXVlbmNlUGFyYW1ldGVyU2V0cyBjb3VudFxuXG4gICAgICAgIGlmIChzcHNDb3VudCA9PT0gMCkge1xuICAgICAgICAgICAgbG9nLmUoJ3RoZSBTZXF1ZW5jZVBhcmFtZXRlclNldHMgY291bnQgY291bGRuXCJ0IGJlIDAnKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfSBlbHNlIGlmIChzcHNDb3VudCA+IDEpIHtcbiAgICAgICAgICAgIGxvZy5lKCdzdHJhbmdlIGNvdW50IG9mIFNQUywgaXQgc2hvdWxkIGJlIDEgYXMgdXN1YWwnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHNraXAgb3ZlciA2QiBoZWFkZXJcbiAgICAgICAgbGV0IG9mZnNldCA9IDY7XG5cbiAgICAgICAgLy8gc3RhcnQgdG8gZGVjb2RlIFNQUyB1c3VhbGx5IGhhcyBvbmx5IG9uZSBTUFNcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzcHNDb3VudDsgaSsrKSB7XG5cbiAgICAgICAgICAgIC8vIHNraXAgb3ZlciBkZWNvZGluZyBvdGhlciBzdHJhbmdlIEFWQ0RlY29kZXJDb25maWd1cmF0aW9uUmVjb3JkXG4gICAgICAgICAgICBpZiAoaSA+IDApXG4gICAgICAgICAgICAgICAgY29udGludWU7XG5cbiAgICAgICAgICAgIC8vIHRoZSBkaXZpZGVkIGZsYWcgaXMgbm90IHRoZSBzdGFydCBjb2RlIDAwIDAwIDAwIDAxLCBidXQgdGhlIDRCIGxlbmd0aCBvZiBTUFNcbiAgICAgICAgICAgIGxldCBzcHNMZW4gPSB2LmdldFVpbnQxNihvZmZzZXQpO1xuICAgICAgICAgICAgb2Zmc2V0ICs9IDI7XG5cbiAgICAgICAgICAgIGlmICghc3BzTGVuKVxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuXG4gICAgICAgICAgICBsZXQgc3BzID0gbmV3IFVpbnQ4QXJyYXkoY2h1bmssIG9mZnNldCwgc3BzTGVuKTtcblxuICAgICAgICAgICAgb2Zmc2V0ICs9IHNwc0xlbjtcblxuICAgICAgICAgICAgbGV0IG1ldGFJbmZvID0gU1BTUGFyc2VyLnBhcnNlU1BTKHNwcyk7XG5cbiAgICAgICAgICAgIHRoaXMuX2V4dHJhY2tJbmZvKG1ldGFJbmZvLCBzcHMpO1xuXG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLl92aWRlb1RyYWNrLm1ldGEuYXZjYyA9IG5ldyBVaW50OEFycmF5KGNodW5rKTtcblxuICAgICAgICBjb25zb2xlLmxvZygncGFyc2VkIGFscmVhZHksICcsIHRoaXMuX3ZpZGVvVHJhY2spO1xuICAgIH1cbiAgICBfZXh0cmFja0luZm8oc3BzSW5mbywgc3BzKSB7XG4gICAgICAgIGxldCBtZXRhID0gdGhpcy5fdmlkZW9UcmFjay5tZXRhO1xuXG4gICAgICAgIG1ldGEuc3BzSW5mbyA9IHNwc0luZm87XG4gICAgICAgIG1ldGEuY29kZWNXaWR0aCA9IHNwc0luZm8uY29kZWNfc2l6ZS53aWR0aDtcbiAgICAgICAgbWV0YS5jb2RlY0hlaWdodCA9IHNwc0luZm8uY29kZWNfc2l6ZS5oZWlnaHQ7XG4gICAgICAgIG1ldGEucHJlc2VudFdpZHRoID0gc3BzSW5mby5wcmVzZW50X3NpemUud2lkdGg7XG4gICAgICAgIG1ldGEucHJlc2VudEhlaWdodCA9IHNwc0luZm8ucHJlc2VudF9zaXplLmhlaWdodDtcblxuICAgICAgICAvLyBkZWJ1Z2dlclxuICAgICAgICBtZXRhLmZyYW1lX3JhdGUgPSBzcHNJbmZvLmZyYW1lX3JhdGU7XG5cbiAgICAgICAgY29uc29sZS5sb2coc3BzSW5mbyk7XG5cblxuICAgICAgICBpZiAoc3BzSW5mby5mcmFtZV9yYXRlLmZpeGVkID09PSBmYWxzZSB8fCBzcHNJbmZvLmZyYW1lX3JhdGUuZnBzX251bSA9PT0gMCB8fCBzcHNJbmZvLmZyYW1lX3JhdGUuZnBzX2RlbiA9PT0gMCkge1xuICAgICAgICAgICAgbWV0YS5mcmFtZV9yYXRlID0gdGhpcy5fcmVmZXJlbmNlRnJhbWVSYXRlO1xuICAgICAgICB9XG5cbiAgICAgICAgbGV0IHtcbiAgICAgICAgICAgIGZwc19kZW4sXG4gICAgICAgICAgICBmcHNfbnVtXG4gICAgICAgIH0gPSBtZXRhLmZyYW1lX3JhdGU7XG5cbiAgICAgICAgbWV0YS5yZWZTYW1wbGVEdXJhdGlvbiA9IE1hdGguZmxvb3IobWV0YS50aW1lc2NhbGUgKiAoZnBzX2RlbiAvIGZwc19udW0pKTtcblxuXG4gICAgICAgIC8vIGdldCBBVkMgY29kZWNcbiAgICAgICAgbGV0IGNvZGVjQXJyYXkgPSBzcHMuc3ViYXJyYXkoMSwgNCk7XG4gICAgICAgIGxldCBjb2RlY1N0cmluZyA9ICdhdmMxLic7XG4gICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgMzsgaisrKSB7XG4gICAgICAgICAgICBsZXQgaCA9IGNvZGVjQXJyYXlbal0udG9TdHJpbmcoMTYpO1xuICAgICAgICAgICAgaWYgKGgubGVuZ3RoIDwgMikge1xuICAgICAgICAgICAgICAgIGggPSAnMCcgKyBoO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29kZWNTdHJpbmcgKz0gaDtcbiAgICAgICAgfVxuICAgICAgICBtZXRhLmNvZGVjID0gY29kZWNTdHJpbmc7XG4gICAgfVxuXG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9tdXgvZGVtdXgvYXZjZGVtdXguanMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFSQTtBQVVBO0FBQ0E7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///23\n")},function(module,exports,__webpack_require__){"use strict";eval("Object.defineProperty(exports, \"__esModule\", { value: true });var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var _exp_golomb = __webpack_require__(25);var _exp_golomb2 = _interopRequireDefault(_exp_golomb);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}var\n\nSPSParser = function () {function SPSParser() {_classCallCheck(this, SPSParser);}_createClass(SPSParser, null, [{ key: '_ebsp2rbsp', value: function _ebsp2rbsp(\n\n        uint8array) {\n            var src = uint8array;\n            var src_length = src.byteLength;\n            var dst = new Uint8Array(src_length);\n            var dst_idx = 0;\n\n            for (var i = 0; i < src_length; i++) {\n                if (i >= 2) {\n                    // Unescape: Skip 0x03 after 00 00\n                    if (src[i] === 0x03 && src[i - 1] === 0x00 && src[i - 2] === 0x00) {\n                        continue;\n                    }\n                }\n                dst[dst_idx] = src[i];\n                dst_idx++;\n            }\n\n            return new Uint8Array(dst.buffer, 0, dst_idx);\n        } }, { key: 'parseSPS', value: function parseSPS(\n\n        uint8array) {\n            var rbsp = SPSParser._ebsp2rbsp(uint8array);\n            var gb = new _exp_golomb2.default(rbsp);\n\n            gb.readByte();\n            var profile_idc = gb.readByte(); // profile_idc\n            gb.readByte(); // constraint_set_flags[5] + reserved_zero[3]\n            var level_idc = gb.readByte(); // level_idc\n            gb.readUEG(); // seq_parameter_set_id\n\n            var profile_string = SPSParser.getProfileString(profile_idc);\n            var level_string = SPSParser.getLevelString(level_idc);\n            var chroma_format_idc = 1;\n            var chroma_format = 420;\n            var chroma_format_table = [0, 420, 422, 444];\n            var bit_depth = 8;\n\n            if (profile_idc === 100 || profile_idc === 110 || profile_idc === 122 ||\n            profile_idc === 244 || profile_idc === 44 || profile_idc === 83 ||\n            profile_idc === 86 || profile_idc === 118 || profile_idc === 128 ||\n            profile_idc === 138 || profile_idc === 144) {\n\n                chroma_format_idc = gb.readUEG();\n                if (chroma_format_idc === 3) {\n                    gb.readBits(1); // separate_colour_plane_flag\n                }\n                if (chroma_format_idc <= 3) {\n                    chroma_format = chroma_format_table[chroma_format_idc];\n                }\n\n                bit_depth = gb.readUEG() + 8; // bit_depth_luma_minus8\n                gb.readUEG(); // bit_depth_chroma_minus8\n                gb.readBits(1); // qpprime_y_zero_transform_bypass_flag\n                if (gb.readBool()) {// seq_scaling_matrix_present_flag\n                    var scaling_list_count = chroma_format_idc !== 3 ? 8 : 12;\n                    for (var i = 0; i < scaling_list_count; i++) {\n                        if (gb.readBool()) {// seq_scaling_list_present_flag\n                            if (i < 6) {\n                                SPSParser._skipScalingList(gb, 16);\n                            } else {\n                                SPSParser._skipScalingList(gb, 64);\n                            }\n                        }\n                    }\n                }\n            }\n            gb.readUEG(); // log2_max_frame_num_minus4\n            var pic_order_cnt_type = gb.readUEG();\n            if (pic_order_cnt_type === 0) {\n                gb.readUEG(); // log2_max_pic_order_cnt_lsb_minus_4\n            } else if (pic_order_cnt_type === 1) {\n                gb.readBits(1); // delta_pic_order_always_zero_flag\n                gb.readSEG(); // offset_for_non_ref_pic\n                gb.readSEG(); // offset_for_top_to_bottom_field\n                var num_ref_frames_in_pic_order_cnt_cycle = gb.readUEG();\n                for (var _i = 0; _i < num_ref_frames_in_pic_order_cnt_cycle; _i++) {\n                    gb.readSEG(); // offset_for_ref_frame\n                }\n            }\n            gb.readUEG(); // max_num_ref_frames\n            gb.readBits(1); // gaps_in_frame_num_value_allowed_flag\n\n            var pic_width_in_mbs_minus1 = gb.readUEG();\n            var pic_height_in_map_units_minus1 = gb.readUEG();\n\n            var frame_mbs_only_flag = gb.readBits(1);\n            if (frame_mbs_only_flag === 0) {\n                gb.readBits(1); // mb_adaptive_frame_field_flag\n            }\n            gb.readBits(1); // direct_8x8_inference_flag\n\n            var frame_crop_left_offset = 0;\n            var frame_crop_right_offset = 0;\n            var frame_crop_top_offset = 0;\n            var frame_crop_bottom_offset = 0;\n\n            var frame_cropping_flag = gb.readBool();\n            if (frame_cropping_flag) {\n                frame_crop_left_offset = gb.readUEG();\n                frame_crop_right_offset = gb.readUEG();\n                frame_crop_top_offset = gb.readUEG();\n                frame_crop_bottom_offset = gb.readUEG();\n            }\n\n            var sar_width = 1,sar_height = 1;\n            var fps = 0,fps_fixed = true,fps_num = 0,fps_den = 0;\n\n            var vui_parameters_present_flag = gb.readBool();\n            if (vui_parameters_present_flag) {\n                if (gb.readBool()) {// aspect_ratio_info_present_flag\n                    var aspect_ratio_idc = gb.readByte();\n                    var sar_w_table = [1, 12, 10, 16, 40, 24, 20, 32, 80, 18, 15, 64, 160, 4, 3, 2];\n                    var sar_h_table = [1, 11, 11, 11, 33, 11, 11, 11, 33, 11, 11, 33, 99, 3, 2, 1];\n\n                    if (aspect_ratio_idc > 0 && aspect_ratio_idc < 16) {\n                        sar_width = sar_w_table[aspect_ratio_idc - 1];\n                        sar_height = sar_h_table[aspect_ratio_idc - 1];\n                    } else if (aspect_ratio_idc === 255) {\n                        sar_width = gb.readByte() << 8 | gb.readByte();\n                        sar_height = gb.readByte() << 8 | gb.readByte();\n                    }\n                }\n\n                if (gb.readBool()) {// overscan_info_present_flag\n                    gb.readBool(); // overscan_appropriate_flag\n                }\n                if (gb.readBool()) {// video_signal_type_present_flag\n                    gb.readBits(4); // video_format & video_full_range_flag\n                    if (gb.readBool()) {// colour_description_present_flag\n                        gb.readBits(24); // colour_primaries & transfer_characteristics & matrix_coefficients\n                    }\n                }\n                if (gb.readBool()) {// chroma_loc_info_present_flag\n                    gb.readUEG(); // chroma_sample_loc_type_top_field\n                    gb.readUEG(); // chroma_sample_loc_type_bottom_field\n                }\n                if (gb.readBool()) {// timing_info_present_flag\n                    var num_units_in_tick = gb.readBits(32);\n                    var time_scale = gb.readBits(32);\n                    fps_fixed = gb.readBool(); // fixed_frame_rate_flag\n\n                    fps_num = time_scale;\n                    fps_den = num_units_in_tick * 2;\n                    fps = fps_num / fps_den;\n                }\n            }\n\n            var sarScale = 1;\n            if (sar_width !== 1 || sar_height !== 1) {\n                sarScale = sar_width / sar_height;\n            }\n\n            var crop_unit_x = 0,crop_unit_y = 0;\n            if (chroma_format_idc === 0) {\n                crop_unit_x = 1;\n                crop_unit_y = 2 - frame_mbs_only_flag;\n            } else {\n                var sub_wc = chroma_format_idc === 3 ? 1 : 2;\n                var sub_hc = chroma_format_idc === 1 ? 2 : 1;\n                crop_unit_x = sub_wc;\n                crop_unit_y = sub_hc * (2 - frame_mbs_only_flag);\n            }\n\n            var codec_width = (pic_width_in_mbs_minus1 + 1) * 16;\n            var codec_height = (2 - frame_mbs_only_flag) * ((pic_height_in_map_units_minus1 + 1) * 16);\n\n            codec_width -= (frame_crop_left_offset + frame_crop_right_offset) * crop_unit_x;\n            codec_height -= (frame_crop_top_offset + frame_crop_bottom_offset) * crop_unit_y;\n\n            var present_width = Math.ceil(codec_width * sarScale);\n\n            gb.destroy();\n            gb = null;\n\n            return {\n                profile_string: profile_string, // baseline, high, high10, ...\n                level_string: level_string, // 3, 3.1, 4, 4.1, 5, 5.1, ...\n                bit_depth: bit_depth, // 8bit, 10bit, ...\n                chroma_format: chroma_format, // 4:2:0, 4:2:2, ...\n                chroma_format_string: SPSParser.getChromaFormatString(chroma_format),\n\n                frame_rate: {\n                    fixed: fps_fixed,\n                    fps: fps,\n                    fps_den: fps_den,\n                    fps_num: fps_num },\n\n\n                sar_ratio: {\n                    width: sar_width,\n                    height: sar_height },\n\n\n                codec_size: {\n                    width: codec_width,\n                    height: codec_height },\n\n\n                present_size: {\n                    width: present_width,\n                    height: codec_height } };\n\n\n        } }, { key: '_skipScalingList', value: function _skipScalingList(\n\n        gb, count) {\n            var last_scale = 8,next_scale = 8;\n            var delta_scale = 0;\n            for (var i = 0; i < count; i++) {\n                if (next_scale !== 0) {\n                    delta_scale = gb.readSEG();\n                    next_scale = (last_scale + delta_scale + 256) % 256;\n                }\n                last_scale = next_scale === 0 ? last_scale : next_scale;\n            }\n        } }, { key: 'getProfileString', value: function getProfileString(\n\n        profile_idc) {\n            switch (profile_idc) {\n                case 66:\n                    return 'Baseline';\n                case 77:\n                    return 'Main';\n                case 88:\n                    return 'Extended';\n                case 100:\n                    return 'High';\n                case 110:\n                    return 'High10';\n                case 122:\n                    return 'High422';\n                case 244:\n                    return 'High444';\n                default:\n                    return 'Unknown';}\n\n        } }, { key: 'getLevelString', value: function getLevelString(\n\n        level_idc) {\n            return (level_idc / 10).toFixed(1);\n        } }, { key: 'getChromaFormatString', value: function getChromaFormatString(\n\n        chroma) {\n            switch (chroma) {\n                case 420:\n                    return '4:2:0';\n                case 422:\n                    return '4:2:2';\n                case 444:\n                    return '4:4:4';\n                default:\n                    return 'Unknown';}\n\n        } }]);return SPSParser;}();exports.default =\n\n\n\nSPSParser;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///24\n")},function(module,exports,__webpack_require__){"use strict";eval("Object.defineProperty(exports, \"__esModule\", { value: true });var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}\n\n// Exponential-Golomb buffer decoder\nvar ExpGolomb = function () {\n\n    function ExpGolomb(uint8array) {_classCallCheck(this, ExpGolomb);\n        this.TAG = 'ExpGolomb';\n\n        this._buffer = uint8array;\n        this._buffer_index = 0;\n        this._total_bytes = uint8array.byteLength;\n        this._total_bits = uint8array.byteLength * 8;\n        this._current_word = 0;\n        this._current_word_bits_left = 0;\n    }_createClass(ExpGolomb, [{ key: 'destroy', value: function destroy()\n\n        {\n            this._buffer = null;\n        } }, { key: '_fillCurrentWord', value: function _fillCurrentWord()\n\n        {\n            var buffer_bytes_left = this._total_bytes - this._buffer_index;\n            if (buffer_bytes_left <= 0)\n            throw new Error('ExpGolomb: _fillCurrentWord() but no bytes available');\n\n            var bytes_read = Math.min(4, buffer_bytes_left);\n            var word = new Uint8Array(4);\n            word.set(this._buffer.subarray(this._buffer_index, this._buffer_index + bytes_read));\n            this._current_word = new DataView(word.buffer).getUint32(0, false);\n\n            this._buffer_index += bytes_read;\n            this._current_word_bits_left = bytes_read * 8;\n        } }, { key: 'readBits', value: function readBits(\n\n        bits) {\n            if (bits > 32)\n            throw new Error('ExpGolomb: readBits() bits exceeded max 32bits!');\n\n            if (bits <= this._current_word_bits_left) {\n                var _result = this._current_word >>> 32 - bits;\n                this._current_word <<= bits;\n                this._current_word_bits_left -= bits;\n                return _result;\n            }\n\n            var result = this._current_word_bits_left ? this._current_word : 0;\n            result = result >>> 32 - this._current_word_bits_left;\n            var bits_need_left = bits - this._current_word_bits_left;\n\n            this._fillCurrentWord();\n            var bits_read_next = Math.min(bits_need_left, this._current_word_bits_left);\n\n            var result2 = this._current_word >>> 32 - bits_read_next;\n            this._current_word <<= bits_read_next;\n            this._current_word_bits_left -= bits_read_next;\n\n            result = result << bits_read_next | result2;\n            return result;\n        } }, { key: 'readBool', value: function readBool()\n\n        {\n            return this.readBits(1) === 1;\n        } }, { key: 'readByte', value: function readByte()\n\n        {\n            return this.readBits(8);\n        } }, { key: '_skipLeadingZero', value: function _skipLeadingZero()\n\n        {\n            var zero_count = void 0;\n            for (zero_count = 0; zero_count < this._current_word_bits_left; zero_count++) {\n                if (0 !== (this._current_word & 0x80000000 >>> zero_count)) {\n                    this._current_word <<= zero_count;\n                    this._current_word_bits_left -= zero_count;\n                    return zero_count;\n                }\n            }\n            this._fillCurrentWord();\n            return zero_count + this._skipLeadingZero();\n        } }, { key: 'readUEG', value: function readUEG()\n\n        {// unsigned exponential golomb\n            var leading_zeros = this._skipLeadingZero();\n            return this.readBits(leading_zeros + 1) - 1;\n        } }, { key: 'readSEG', value: function readSEG()\n\n        {// signed exponential golomb\n            var value = this.readUEG();\n            if (value & 0x01) {\n                return value + 1 >>> 1;\n            } else {\n                return -1 * (value >>> 1);\n            }\n        } }]);return ExpGolomb;}();exports.default =\n\n\n\nExpGolomb;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL211eC9kZW11eC9saWIvZXhwX2dvbG9tYi5qcz9kZDk2Il0sInNvdXJjZXNDb250ZW50IjpbIlxuXG4vLyBFeHBvbmVudGlhbC1Hb2xvbWIgYnVmZmVyIGRlY29kZXJcbmNsYXNzIEV4cEdvbG9tYiB7XG5cbiAgICBjb25zdHJ1Y3Rvcih1aW50OGFycmF5KSB7XG4gICAgICAgIHRoaXMuVEFHID0gJ0V4cEdvbG9tYic7XG5cbiAgICAgICAgdGhpcy5fYnVmZmVyID0gdWludDhhcnJheTtcbiAgICAgICAgdGhpcy5fYnVmZmVyX2luZGV4ID0gMDtcbiAgICAgICAgdGhpcy5fdG90YWxfYnl0ZXMgPSB1aW50OGFycmF5LmJ5dGVMZW5ndGg7XG4gICAgICAgIHRoaXMuX3RvdGFsX2JpdHMgPSB1aW50OGFycmF5LmJ5dGVMZW5ndGggKiA4O1xuICAgICAgICB0aGlzLl9jdXJyZW50X3dvcmQgPSAwO1xuICAgICAgICB0aGlzLl9jdXJyZW50X3dvcmRfYml0c19sZWZ0ID0gMDtcbiAgICB9XG5cbiAgICBkZXN0cm95KCkge1xuICAgICAgICB0aGlzLl9idWZmZXIgPSBudWxsO1xuICAgIH1cblxuICAgIF9maWxsQ3VycmVudFdvcmQoKSB7XG4gICAgICAgIGxldCBidWZmZXJfYnl0ZXNfbGVmdCA9IHRoaXMuX3RvdGFsX2J5dGVzIC0gdGhpcy5fYnVmZmVyX2luZGV4O1xuICAgICAgICBpZiAoYnVmZmVyX2J5dGVzX2xlZnQgPD0gMClcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignRXhwR29sb21iOiBfZmlsbEN1cnJlbnRXb3JkKCkgYnV0IG5vIGJ5dGVzIGF2YWlsYWJsZScpO1xuXG4gICAgICAgIGxldCBieXRlc19yZWFkID0gTWF0aC5taW4oNCwgYnVmZmVyX2J5dGVzX2xlZnQpO1xuICAgICAgICBsZXQgd29yZCA9IG5ldyBVaW50OEFycmF5KDQpO1xuICAgICAgICB3b3JkLnNldCh0aGlzLl9idWZmZXIuc3ViYXJyYXkodGhpcy5fYnVmZmVyX2luZGV4LCB0aGlzLl9idWZmZXJfaW5kZXggKyBieXRlc19yZWFkKSk7XG4gICAgICAgIHRoaXMuX2N1cnJlbnRfd29yZCA9IG5ldyBEYXRhVmlldyh3b3JkLmJ1ZmZlcikuZ2V0VWludDMyKDAsIGZhbHNlKTtcblxuICAgICAgICB0aGlzLl9idWZmZXJfaW5kZXggKz0gYnl0ZXNfcmVhZDtcbiAgICAgICAgdGhpcy5fY3VycmVudF93b3JkX2JpdHNfbGVmdCA9IGJ5dGVzX3JlYWQgKiA4O1xuICAgIH1cblxuICAgIHJlYWRCaXRzKGJpdHMpIHtcbiAgICAgICAgaWYgKGJpdHMgPiAzMilcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignRXhwR29sb21iOiByZWFkQml0cygpIGJpdHMgZXhjZWVkZWQgbWF4IDMyYml0cyEnKTtcblxuICAgICAgICBpZiAoYml0cyA8PSB0aGlzLl9jdXJyZW50X3dvcmRfYml0c19sZWZ0KSB7XG4gICAgICAgICAgICBsZXQgcmVzdWx0ID0gdGhpcy5fY3VycmVudF93b3JkID4+PiAoMzIgLSBiaXRzKTtcbiAgICAgICAgICAgIHRoaXMuX2N1cnJlbnRfd29yZCA8PD0gYml0cztcbiAgICAgICAgICAgIHRoaXMuX2N1cnJlbnRfd29yZF9iaXRzX2xlZnQgLT0gYml0cztcbiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgIH1cblxuICAgICAgICBsZXQgcmVzdWx0ID0gdGhpcy5fY3VycmVudF93b3JkX2JpdHNfbGVmdCA/IHRoaXMuX2N1cnJlbnRfd29yZCA6IDA7XG4gICAgICAgIHJlc3VsdCA9IHJlc3VsdCA+Pj4gKDMyIC0gdGhpcy5fY3VycmVudF93b3JkX2JpdHNfbGVmdCk7XG4gICAgICAgIGxldCBiaXRzX25lZWRfbGVmdCA9IGJpdHMgLSB0aGlzLl9jdXJyZW50X3dvcmRfYml0c19sZWZ0O1xuXG4gICAgICAgIHRoaXMuX2ZpbGxDdXJyZW50V29yZCgpO1xuICAgICAgICBsZXQgYml0c19yZWFkX25leHQgPSBNYXRoLm1pbihiaXRzX25lZWRfbGVmdCwgdGhpcy5fY3VycmVudF93b3JkX2JpdHNfbGVmdCk7XG5cbiAgICAgICAgbGV0IHJlc3VsdDIgPSB0aGlzLl9jdXJyZW50X3dvcmQgPj4+ICgzMiAtIGJpdHNfcmVhZF9uZXh0KTtcbiAgICAgICAgdGhpcy5fY3VycmVudF93b3JkIDw8PSBiaXRzX3JlYWRfbmV4dDtcbiAgICAgICAgdGhpcy5fY3VycmVudF93b3JkX2JpdHNfbGVmdCAtPSBiaXRzX3JlYWRfbmV4dDtcblxuICAgICAgICByZXN1bHQgPSAocmVzdWx0IDw8IGJpdHNfcmVhZF9uZXh0KSB8IHJlc3VsdDI7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuXG4gICAgcmVhZEJvb2woKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnJlYWRCaXRzKDEpID09PSAxO1xuICAgIH1cblxuICAgIHJlYWRCeXRlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5yZWFkQml0cyg4KTtcbiAgICB9XG5cbiAgICBfc2tpcExlYWRpbmdaZXJvKCkge1xuICAgICAgICBsZXQgemVyb19jb3VudDtcbiAgICAgICAgZm9yICh6ZXJvX2NvdW50ID0gMDsgemVyb19jb3VudCA8IHRoaXMuX2N1cnJlbnRfd29yZF9iaXRzX2xlZnQ7IHplcm9fY291bnQrKykge1xuICAgICAgICAgICAgaWYgKDAgIT09ICh0aGlzLl9jdXJyZW50X3dvcmQgJiAoMHg4MDAwMDAwMCA+Pj4gemVyb19jb3VudCkpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fY3VycmVudF93b3JkIDw8PSB6ZXJvX2NvdW50O1xuICAgICAgICAgICAgICAgIHRoaXMuX2N1cnJlbnRfd29yZF9iaXRzX2xlZnQgLT0gemVyb19jb3VudDtcbiAgICAgICAgICAgICAgICByZXR1cm4gemVyb19jb3VudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9maWxsQ3VycmVudFdvcmQoKTtcbiAgICAgICAgcmV0dXJuIHplcm9fY291bnQgKyB0aGlzLl9za2lwTGVhZGluZ1plcm8oKTtcbiAgICB9XG5cbiAgICByZWFkVUVHKCkgeyAgLy8gdW5zaWduZWQgZXhwb25lbnRpYWwgZ29sb21iXG4gICAgICAgIGxldCBsZWFkaW5nX3plcm9zID0gdGhpcy5fc2tpcExlYWRpbmdaZXJvKCk7XG4gICAgICAgIHJldHVybiB0aGlzLnJlYWRCaXRzKGxlYWRpbmdfemVyb3MgKyAxKSAtIDE7XG4gICAgfVxuXG4gICAgcmVhZFNFRygpIHsgIC8vIHNpZ25lZCBleHBvbmVudGlhbCBnb2xvbWJcbiAgICAgICAgbGV0IHZhbHVlID0gdGhpcy5yZWFkVUVHKCk7XG4gICAgICAgIGlmICh2YWx1ZSAmIDB4MDEpIHtcbiAgICAgICAgICAgIHJldHVybiAodmFsdWUgKyAxKSA+Pj4gMTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiAtMSAqICh2YWx1ZSA+Pj4gMSk7XG4gICAgICAgIH1cbiAgICB9XG5cbn1cblxuZXhwb3J0IGRlZmF1bHQgRXhwR29sb21iO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvbXV4L2RlbXV4L2xpYi9leHBfZ29sb21iLmpzIl0sIm1hcHBpbmdzIjoiOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///25\n")},function(module,exports,__webpack_require__){"use strict";eval("Object.defineProperty(exports, \"__esModule\", { value: true });var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var _log = __webpack_require__(0);var _log2 = _interopRequireDefault(_log);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}\n\nvar log = new _log2.default('AACDemux');var\n\nAACDemux = function () {\n\tfunction AACDemux(_ref)\n\n\n\t{var audioTrack = _ref.audioTrack,mediaInfo = _ref.mediaInfo;_classCallCheck(this, AACDemux);\n\t\tthis._audioTrack = audioTrack;\n\t\tthis._mediaInfo = mediaInfo;\n\n\t\tthis._mpegSamplingRates = [\n\t\t96000,\n\t\t88200,\n\t\t64000,\n\t\t48000,\n\t\t44100,\n\t\t32000,\n\t\t24000,\n\t\t22050,\n\t\t16000,\n\t\t12000,\n\t\t11025,\n\t\t8000,\n\t\t7350];\n\n\n\t}_createClass(AACDemux, [{ key: 'parse', value: function parse(\n\t\tchunk) {\n\t\t\tvar v = new DataView(chunk);\n\n\t\t\tvar type = v.getUint8(0);\n\n\t\t\tif (type === 0) {\n\t\t\t\tthis._parseConfig(chunk.slice(1));\n\t\t\t} else {\n\t\t\t\tthis._parseAAC(chunk.slice(1));\n\t\t\t}\n\t\t}\n\t\t// chunk is SoundData in flv audio tag\n\t}, { key: '_parseAAC', value: function _parseAAC(chunk) {\n\t\t\tvar audio = new Uint8Array(chunk);\n\n\t\t\tthis._audioTrack.samples.push({\n\t\t\t\tunit: audio,\n\t\t\t\tlength: audio.byteLength });\n\n\n\t\t\tthis._audioTrack.length += audio.byteLength;\n\n\t\t} }, { key: '_parseConfig', value: function _parseConfig(\n\t\tchunk) {\n\t\t\tvar audio = new Uint8Array(chunk),\n\t\t\tmeta = this._audioTrack.meta,\n\t\t\tconfig = void 0,\n\t\t\tuserAgent = navigator.\n\t\t\tuserAgent.\n\t\t\ttoLowerCase();\n\n\t\t\tvar audioObjectType = audio[0] >>> 3; // 5b\n\t\t\tvar originType = audioObjectType;\n\t\t\tvar samplingFreIndex = (audio[0] & 0x07) << 1 | audio[1] >>> 7; // 4b\n\t\t\tvar extensionSamplingIndex = null;\n\n\t\t\t// only decode the sample frequenct between 0 - 13.\n\t\t\tif (samplingFreIndex < 0 || samplingFreIndex >= this._mpegSamplingRates.length) {\n\t\t\t\tlog.e('invalid samplingFreIndex: ' + samplingFreIndex);\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t\tvar samplingFre = this._mpegSamplingRates[samplingFreIndex];\n\n\t\t\tvar channelConfig = (audio[1] & 0x78) >>> 3;\n\t\t\tif (channelConfig < 0 || channelConfig > 7) {\n\t\t\t\tlog.e('invalid channel Count: ' + channelConfig);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (audioObjectType === 5) {// HE-AAC/SBR\n\t\t\t\t// 4 bits\n\t\t\t\textensionSamplingIndex = (audio[1] & 0x07) << 1 | audio[2] >>> 7;\n\t\t\t\t// 5 bits\n\t\t\t\taudioExtensionObjectType = (audio[2] & 0x7C) >>> 2;\n\t\t\t}\n\n\t\t\t// refer adts.js in hls.js\n\t\t\t// https://github.com/video-dev/hls.js/blob/master/src/demux/adts.js\n\n\t\t\tlog.i('userAgent is ' + userAgent);\n\n\t\t\tlog.i('the audioObjectType in AAC is ' + audioObjectType);\n\n\t\t\t// firefox: freq less than 24kHz = AAC SBR (HE-AAC)\n\t\t\tif (userAgent.indexOf('firefox') !== -1) {\n\t\t\t\tif (samplingFreIndex >= 6) {\n\t\t\t\t\taudioObjectType = 5;\n\t\t\t\t\tconfig = new Array(4);\n\n\t\t\t\t\t// HE-AAC uses SBR (Spectral Band Replication) , high frequencies are\n\t\t\t\t\t// constructed from low frequencies so there is a factor 2 between sample fre\n\t\t\t\t\t// rate and exten fre rate and refering to _mpegSamplingRates list mutiply the\n\t\t\t\t\t// sample rate by 2, which is equivalent to substract 3 from samplingFreIndex\n\t\t\t\t\textensionSamplingIndex = samplingFreIndex - 3;\n\t\t\t\t} else {// use LC-AAC\n\t\t\t\t\taudioObjectType = 2;\n\t\t\t\t\tconfig = new Array(2);\n\t\t\t\t\textensionSamplingIndex = samplingFreIndex;\n\t\t\t\t}\n\t\t\t} else if (userAgent.indexOf('android') !== -1) {\n\t\t\t\t// Android: use LC-AAC\n\t\t\t\taudioObjectType = 2;\n\t\t\t\tconfig = new Array(2);\n\t\t\t\textensionSamplingIndex = samplingFreIndex;\n\t\t\t} else {\n\t\t\t\t// other browsers always use HE-AAC SBR type they don't support codec switch\n\n\t\t\t\taudioObjectType = 5;\n\t\t\t\textensionSamplingIndex = samplingFreIndex;\n\t\t\t\tconfig = new Array(4);\n\n\t\t\t\tif (samplingFreIndex >= 6) {\n\t\t\t\t\textensionSamplingIndex = samplingFreIndex - 3;\n\t\t\t\t} else if (channelConfig === 1) {// Mono channel\n\t\t\t\t\taudioObjectType = 2;\n\t\t\t\t\tconfig = new Array(2);\n\t\t\t\t\textensionSamplingIndex = samplingFreIndex;\n\t\t\t\t}\n\n\t\t\t\tconfig[0] = audioObjectType << 3;\n\t\t\t\tconfig[0] |= (samplingFreIndex & 0x0F) >>> 1;\n\t\t\t\tconfig[1] = (samplingFreIndex & 0x0F) << 7;\n\t\t\t\tconfig[1] |= (channelConfig & 0x0F) << 3;\n\n\t\t\t}\n\n\t\t\tconfig[0] = audioObjectType << 3;\n\t\t\tconfig[0] |= (samplingFreIndex & 0x0F) >>> 1;\n\t\t\tconfig[1] = (samplingFreIndex & 0x0F) << 7;\n\t\t\tconfig[1] |= (channelConfig & 0x0F) << 3;\n\t\t\tif (audioObjectType === 5) {\n\t\t\t\t// audioObjectType (force to 2, chrome is checking that object type is less than\n\t\t\t\t// 5 ???\n\t\t\t\t// https://chromium.googlesource.com/chromium/src.git/+/master/media/formats/mp4\n\t\t\t\t//\n\t\t\t\tconfig[1] |= (extensionSamplingIndex & 0x0F) >>> 1;\n\t\t\t\tconfig[2] = (extensionSamplingIndex & 0x01) << 7;\n\t\t\t\t// extended audio object type: force to 2 (LC-AAC)\n\t\t\t\tconfig[2] |= 2 << 2;\n\t\t\t\tconfig[3] = 0;\n\t\t\t}\n\n\t\t\tmeta.config = config;\n\t\t\tmeta.audioSampleRate = samplingFre;\n\t\t\tmeta.channelCount = channelConfig;\n\t\t\tmeta.codec = 'mp4a.40.' + audioObjectType;\n\n\t\t\tmeta.refSampleDuration = Math.floor(1024 / meta.audioSampleRate * meta.timescale);\n\n\t\t\tconsole.log(meta.refSampleDuration);\n\n\t\t} }]);return AACDemux;}();exports.default = AACDemux;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL211eC9kZW11eC9hYWNkZW11eC5qcz82NWQzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBMb2cgZnJvbSAnbGliL2xvZyc7XG5cbmNvbnN0IGxvZyA9IG5ldyBMb2coJ0FBQ0RlbXV4Jyk7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFBQ0RlbXV4IHtcblx0Y29uc3RydWN0b3Ioe1xuXHRcdGF1ZGlvVHJhY2ssXG5cdFx0bWVkaWFJbmZvXG5cdH0pIHtcblx0XHR0aGlzLl9hdWRpb1RyYWNrID0gYXVkaW9UcmFjaztcblx0XHR0aGlzLl9tZWRpYUluZm8gPSBtZWRpYUluZm87XG5cblx0XHR0aGlzLl9tcGVnU2FtcGxpbmdSYXRlcyA9IFtcblx0XHRcdDk2MDAwLFxuXHRcdFx0ODgyMDAsXG5cdFx0XHQ2NDAwMCxcblx0XHRcdDQ4MDAwLFxuXHRcdFx0NDQxMDAsXG5cdFx0XHQzMjAwMCxcblx0XHRcdDI0MDAwLFxuXHRcdFx0MjIwNTAsXG5cdFx0XHQxNjAwMCxcblx0XHRcdDEyMDAwLFxuXHRcdFx0MTEwMjUsXG5cdFx0XHQ4MDAwLFxuXHRcdFx0NzM1MFxuXHRcdF07XG5cblx0fVxuXHRwYXJzZShjaHVuaykge1xuXHRcdGxldCB2ID0gbmV3IERhdGFWaWV3KGNodW5rKTtcblxuXHRcdGxldCB0eXBlID0gdi5nZXRVaW50OCgwKTtcblxuXHRcdGlmICh0eXBlID09PSAwKSB7XG5cdFx0XHR0aGlzLl9wYXJzZUNvbmZpZyhjaHVuay5zbGljZSgxKSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHRoaXMuX3BhcnNlQUFDKGNodW5rLnNsaWNlKDEpKTtcblx0XHR9XG5cdH1cblx0Ly8gY2h1bmsgaXMgU291bmREYXRhIGluIGZsdiBhdWRpbyB0YWdcblx0X3BhcnNlQUFDKGNodW5rKSB7XG5cdFx0bGV0IGF1ZGlvID0gbmV3IFVpbnQ4QXJyYXkoY2h1bmspO1xuXG5cdFx0dGhpcy5fYXVkaW9UcmFjay5zYW1wbGVzLnB1c2goe1xuXHRcdFx0dW5pdDphdWRpbyxcblx0XHRcdGxlbmd0aDphdWRpby5ieXRlTGVuZ3RoXG5cdFx0fSk7XG5cblx0XHR0aGlzLl9hdWRpb1RyYWNrLmxlbmd0aCArPSBhdWRpby5ieXRlTGVuZ3RoO1xuXG5cdH1cblx0X3BhcnNlQ29uZmlnKGNodW5rKSB7XG5cdFx0bGV0IGF1ZGlvID0gbmV3IFVpbnQ4QXJyYXkoY2h1bmspLFxuXHRcdFx0bWV0YSA9IHRoaXMuX2F1ZGlvVHJhY2subWV0YSxcblx0XHRcdGNvbmZpZyxcblx0XHRcdHVzZXJBZ2VudCA9IG5hdmlnYXRvclxuXHRcdFx0LnVzZXJBZ2VudFxuXHRcdFx0LnRvTG93ZXJDYXNlKCk7XG5cblx0XHRsZXQgYXVkaW9PYmplY3RUeXBlID0gYXVkaW9bMF0gPj4+IDM7IC8vIDViXG5cdFx0bGV0IG9yaWdpblR5cGUgPSBhdWRpb09iamVjdFR5cGU7XG5cdFx0bGV0IHNhbXBsaW5nRnJlSW5kZXggPSAoKGF1ZGlvWzBdICYgMHgwNykgPDwgMSkgfCAoYXVkaW9bMV0gPj4+IDcpOyAvLyA0YlxuXHRcdGxldCBleHRlbnNpb25TYW1wbGluZ0luZGV4ID0gbnVsbDtcblxuXHRcdC8vIG9ubHkgZGVjb2RlIHRoZSBzYW1wbGUgZnJlcXVlbmN0IGJldHdlZW4gMCAtIDEzLlxuXHRcdGlmIChzYW1wbGluZ0ZyZUluZGV4IDwgMCB8fCBzYW1wbGluZ0ZyZUluZGV4ID49IHRoaXMuX21wZWdTYW1wbGluZ1JhdGVzLmxlbmd0aCkge1xuXHRcdFx0bG9nLmUoJ2ludmFsaWQgc2FtcGxpbmdGcmVJbmRleDogJyArIHNhbXBsaW5nRnJlSW5kZXgpO1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXG5cdFx0bGV0IHNhbXBsaW5nRnJlID0gdGhpcy5fbXBlZ1NhbXBsaW5nUmF0ZXNbc2FtcGxpbmdGcmVJbmRleF07XG5cblx0XHRsZXQgY2hhbm5lbENvbmZpZyA9IChhdWRpb1sxXSAmIDB4NzgpID4+PiAzO1xuXHRcdGlmIChjaGFubmVsQ29uZmlnIDwgMCB8fCBjaGFubmVsQ29uZmlnID4gNykge1xuXHRcdFx0bG9nLmUoJ2ludmFsaWQgY2hhbm5lbCBDb3VudDogJyArIGNoYW5uZWxDb25maWcpO1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGlmIChhdWRpb09iamVjdFR5cGUgPT09IDUpIHsgLy8gSEUtQUFDL1NCUlxuXHRcdFx0Ly8gNCBiaXRzXG5cdFx0XHRleHRlbnNpb25TYW1wbGluZ0luZGV4ID0gKChhdWRpb1sxXSAmIDB4MDcpIDw8IDEpIHwgKGF1ZGlvWzJdID4+PiA3KTtcblx0XHRcdC8vIDUgYml0c1xuXHRcdFx0YXVkaW9FeHRlbnNpb25PYmplY3RUeXBlID0gKGF1ZGlvWzJdICYgMHg3QykgPj4+IDI7XG5cdFx0fVxuXG5cdFx0Ly8gcmVmZXIgYWR0cy5qcyBpbiBobHMuanNcblx0XHQvLyBodHRwczovL2dpdGh1Yi5jb20vdmlkZW8tZGV2L2hscy5qcy9ibG9iL21hc3Rlci9zcmMvZGVtdXgvYWR0cy5qc1xuXG5cdFx0bG9nLmkoYHVzZXJBZ2VudCBpcyAke3VzZXJBZ2VudH1gKTtcblxuXHRcdGxvZy5pKGB0aGUgYXVkaW9PYmplY3RUeXBlIGluIEFBQyBpcyAke2F1ZGlvT2JqZWN0VHlwZX1gKTtcblxuXHRcdC8vIGZpcmVmb3g6IGZyZXEgbGVzcyB0aGFuIDI0a0h6ID0gQUFDIFNCUiAoSEUtQUFDKVxuXHRcdGlmICh1c2VyQWdlbnQuaW5kZXhPZignZmlyZWZveCcpICE9PSAtMSkge1xuXHRcdFx0aWYgKHNhbXBsaW5nRnJlSW5kZXggPj0gNikge1xuXHRcdFx0XHRhdWRpb09iamVjdFR5cGUgPSA1O1xuXHRcdFx0XHRjb25maWcgPSBuZXcgQXJyYXkoNCk7XG5cblx0XHRcdFx0Ly8gSEUtQUFDIHVzZXMgU0JSIChTcGVjdHJhbCBCYW5kIFJlcGxpY2F0aW9uKSAsIGhpZ2ggZnJlcXVlbmNpZXMgYXJlXG5cdFx0XHRcdC8vIGNvbnN0cnVjdGVkIGZyb20gbG93IGZyZXF1ZW5jaWVzIHNvIHRoZXJlIGlzIGEgZmFjdG9yIDIgYmV0d2VlbiBzYW1wbGUgZnJlXG5cdFx0XHRcdC8vIHJhdGUgYW5kIGV4dGVuIGZyZSByYXRlIGFuZCByZWZlcmluZyB0byBfbXBlZ1NhbXBsaW5nUmF0ZXMgbGlzdCBtdXRpcGx5IHRoZVxuXHRcdFx0XHQvLyBzYW1wbGUgcmF0ZSBieSAyLCB3aGljaCBpcyBlcXVpdmFsZW50IHRvIHN1YnN0cmFjdCAzIGZyb20gc2FtcGxpbmdGcmVJbmRleFxuXHRcdFx0XHRleHRlbnNpb25TYW1wbGluZ0luZGV4ID0gc2FtcGxpbmdGcmVJbmRleCAtIDM7XG5cdFx0XHR9IGVsc2UgeyAvLyB1c2UgTEMtQUFDXG5cdFx0XHRcdGF1ZGlvT2JqZWN0VHlwZSA9IDI7XG5cdFx0XHRcdGNvbmZpZyA9IG5ldyBBcnJheSgyKTtcblx0XHRcdFx0ZXh0ZW5zaW9uU2FtcGxpbmdJbmRleCA9IHNhbXBsaW5nRnJlSW5kZXg7XG5cdFx0XHR9XG5cdFx0fSBlbHNlIGlmICh1c2VyQWdlbnQuaW5kZXhPZignYW5kcm9pZCcpICE9PSAtMSkge1xuXHRcdFx0Ly8gQW5kcm9pZDogdXNlIExDLUFBQ1xuXHRcdFx0YXVkaW9PYmplY3RUeXBlID0gMjtcblx0XHRcdGNvbmZpZyA9IG5ldyBBcnJheSgyKTtcblx0XHRcdGV4dGVuc2lvblNhbXBsaW5nSW5kZXggPSBzYW1wbGluZ0ZyZUluZGV4O1xuXHRcdH0gZWxzZSB7XG5cdFx0XHQvLyBvdGhlciBicm93c2VycyBhbHdheXMgdXNlIEhFLUFBQyBTQlIgdHlwZSB0aGV5IGRvbid0IHN1cHBvcnQgY29kZWMgc3dpdGNoXG5cblx0XHRcdGF1ZGlvT2JqZWN0VHlwZSA9IDU7XG5cdFx0XHRleHRlbnNpb25TYW1wbGluZ0luZGV4ID0gc2FtcGxpbmdGcmVJbmRleDtcblx0XHRcdGNvbmZpZyA9IG5ldyBBcnJheSg0KTtcblxuXHRcdFx0aWYgKHNhbXBsaW5nRnJlSW5kZXggPj0gNikge1xuXHRcdFx0XHRleHRlbnNpb25TYW1wbGluZ0luZGV4ID0gc2FtcGxpbmdGcmVJbmRleCAtIDM7XG5cdFx0XHR9IGVsc2UgaWYgKGNoYW5uZWxDb25maWcgPT09IDEpIHsgLy8gTW9ubyBjaGFubmVsXG5cdFx0XHRcdGF1ZGlvT2JqZWN0VHlwZSA9IDI7XG5cdFx0XHRcdGNvbmZpZyA9IG5ldyBBcnJheSgyKTtcblx0XHRcdFx0ZXh0ZW5zaW9uU2FtcGxpbmdJbmRleCA9IHNhbXBsaW5nRnJlSW5kZXg7XG5cdFx0XHR9XG5cblx0XHRcdGNvbmZpZ1swXSA9IGF1ZGlvT2JqZWN0VHlwZSA8PCAzO1xuXHRcdFx0Y29uZmlnWzBdIHw9IChzYW1wbGluZ0ZyZUluZGV4ICYgMHgwRikgPj4+IDE7XG5cdFx0XHRjb25maWdbMV0gPSAoc2FtcGxpbmdGcmVJbmRleCAmIDB4MEYpIDw8IDc7XG5cdFx0XHRjb25maWdbMV0gfD0gKGNoYW5uZWxDb25maWcgJiAweDBGKSA8PCAzO1xuXG5cdFx0fVxuXG5cdFx0Y29uZmlnWzBdID0gYXVkaW9PYmplY3RUeXBlIDw8IDM7XG5cdFx0Y29uZmlnWzBdIHw9IChzYW1wbGluZ0ZyZUluZGV4ICYgMHgwRikgPj4+IDE7XG5cdFx0Y29uZmlnWzFdID0gKHNhbXBsaW5nRnJlSW5kZXggJiAweDBGKSA8PCA3O1xuXHRcdGNvbmZpZ1sxXSB8PSAoY2hhbm5lbENvbmZpZyAmIDB4MEYpIDw8IDM7XG5cdFx0aWYgKGF1ZGlvT2JqZWN0VHlwZSA9PT0gNSkge1xuXHRcdFx0Ly8gYXVkaW9PYmplY3RUeXBlIChmb3JjZSB0byAyLCBjaHJvbWUgaXMgY2hlY2tpbmcgdGhhdCBvYmplY3QgdHlwZSBpcyBsZXNzIHRoYW5cblx0XHRcdC8vIDUgPz8/XG5cdFx0XHQvLyBodHRwczovL2Nocm9taXVtLmdvb2dsZXNvdXJjZS5jb20vY2hyb21pdW0vc3JjLmdpdC8rL21hc3Rlci9tZWRpYS9mb3JtYXRzL21wNFxuXHRcdFx0Ly9cblx0XHRcdGNvbmZpZ1sxXSB8PSAoKGV4dGVuc2lvblNhbXBsaW5nSW5kZXggJiAweDBGKSA+Pj4gMSk7XG5cdFx0XHRjb25maWdbMl0gPSAoZXh0ZW5zaW9uU2FtcGxpbmdJbmRleCAmIDB4MDEpIDw8IDc7XG5cdFx0XHQvLyBleHRlbmRlZCBhdWRpbyBvYmplY3QgdHlwZTogZm9yY2UgdG8gMiAoTEMtQUFDKVxuXHRcdFx0Y29uZmlnWzJdIHw9ICgyIDw8IDIpO1xuXHRcdFx0Y29uZmlnWzNdID0gMDtcblx0XHR9XG5cblx0XHRtZXRhLmNvbmZpZyA9IGNvbmZpZztcblx0XHRtZXRhLmF1ZGlvU2FtcGxlUmF0ZSA9IHNhbXBsaW5nRnJlO1xuXHRcdG1ldGEuY2hhbm5lbENvdW50ID0gY2hhbm5lbENvbmZpZztcblx0XHRtZXRhLmNvZGVjID0gJ21wNGEuNDAuJyArIGF1ZGlvT2JqZWN0VHlwZTtcblxuXHRcdG1ldGEucmVmU2FtcGxlRHVyYXRpb24gPSBNYXRoLmZsb29yKDEwMjQgLyBtZXRhLmF1ZGlvU2FtcGxlUmF0ZSAqIG1ldGEudGltZXNjYWxlKTtcblxuXHRcdGNvbnNvbGUubG9nKG1ldGEucmVmU2FtcGxlRHVyYXRpb24pO1xuXG5cdH1cbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL211eC9kZW11eC9hYWNkZW11eC5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///26\n")},function(module,exports,__webpack_require__){"use strict";eval("Object.defineProperty(exports, \"__esModule\", { value: true });var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var _mp4_generator = __webpack_require__(28);var _mp4_generator2 = _interopRequireDefault(_mp4_generator);\nvar _utils = __webpack_require__(2);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}var\n\n\n\nMP4Remux = function () {\n    function MP4Remux(_ref)\n\n\n\n    {var audioTrack = _ref.audioTrack,videoTrack = _ref.videoTrack,mediaInfo = _ref.mediaInfo;_classCallCheck(this, MP4Remux);\n        this._audioTrack = audioTrack;\n        this._videoTrack = videoTrack;\n        this._mediaInfo = mediaInfo;\n\n        this._videoSeq = 0;\n        this._audioSeg = 0;\n        this._lastTimeStamp;\n        this._lastDuration;\n\n        this._videoTimebase = 0;\n        this._audioTimebase = 0;\n\n        this._audioClockRange = {\n            startTS: 0,\n            endTS: 0 };\n\n    }_createClass(MP4Remux, [{ key: 'generateIS', value: function generateIS()\n        {var _mediaInfo =\n\n\n\n            this._mediaInfo,hasVideo = _mediaInfo.hasVideo,hasAudio = _mediaInfo.hasAudio;\n            if (hasVideo && hasAudio) {\n                return {\n                    videoIS: _mp4_generator2.default.initBox(this._videoTrack.meta),\n                    audioIS: _mp4_generator2.default.initBox(this._audioTrack.meta) };\n\n            }\n        } }, { key: 'generateMS', value: function generateMS(\n        lastTimeStamp) {\n            var videoMS = new Uint8Array(0),\n            audioMS = new Uint8Array(0);\n\n\n            if (this._audioTrack.samples.length >= 2 &&\n            this._videoTrack.samples.length) {\n                audioMS = this._remuxAudio();\n                videoMS = this._remuxVideo();\n            }\n\n\n            console.log(\"the diff time is \", this._videoTimebase - this._audioTimebase);\n\n            return {\n                audioMS: audioMS,\n                videoMS: videoMS };\n\n\n        } }, { key: '_remuxVideoMdat', value: function _remuxVideoMdat()\n\n        {var _this = this;\n            var videoMdat = _mp4_generator2.default.mdat(this._videoTrack.length);\n\n            var offset = 8,\n            track = this._videoTrack,\n            meta = track.meta,\n            samples = track.samples,\n            mp4Samples = [];\n\n            var baseDts = this._videoTimebase;\n\n            var lastPreciseDuration = void 0,tagDuration = void 0,deltaCorrect = void 0,tmpTime = void 0;\n\n\n            samples.forEach(function (viSample, index) {\n                var cts = viSample.cts,\n                dts = void 0,pts = void 0;\n\n                var sampleSize = viSample.slices.byteLength;\n\n\n                videoMdat.set(viSample.slices, offset);\n\n                var keyFrame = viSample.keyFrame;\n\n                if (samples.length > 1 && samples.length !== index + 1) {\n                    // loop the samples but not the last one\n                    tagDuration = samples[index + 1].timeStamp - viSample.timeStamp;\n                } else {\n                    tagDuration = _this._lastTimeStamp - viSample.timeStamp;\n                }\n\n                dts = _this._videoTimebase;\n                pts = dts + cts;\n\n                _this._videoTimebase += tagDuration;\n\n\n\n                meta.duration += tagDuration;\n\n                mp4Samples.push({\n                    dts: dts,\n                    pts: pts,\n                    cts: cts,\n                    length: viSample.length,\n                    keyFrame: keyFrame,\n                    sampleSize: sampleSize,\n                    duration: tagDuration,\n                    chunkOffset: offset,\n                    flags: {\n                        isLeading: 0,\n                        dependsOn: keyFrame ?\n                        2 : 1, // an I picture : not I picture\n                        isDepended: keyFrame ?\n                        1 : 0, //  unknown dependent sample: not disposable\n                        hasRedundancy: 0, // for sdtp\n                        isNonSync: keyFrame ?\n                        0 : 1 } });\n\n\n\n                offset += viSample.length;\n            });\n\n\n            track.samples = mp4Samples;\n            this._videoSeq++;\n\n            return {\n                videoMdat: videoMdat,\n                baseDts: baseDts };\n\n\n        } }, { key: '_remuxAudio', value: function _remuxAudio()\n\n        {var _remuxAudioMdat2 =\n\n\n\n            this._remuxAudioMdat(),audioMdat = _remuxAudioMdat2.audioMdat,baseDts = _remuxAudioMdat2.baseDts;\n\n            var moof = _mp4_generator2.default.moof(this._audioTrack, baseDts, this._audioSeg);\n\n            return (0, _utils.mergeTypedArray)(moof, audioMdat);\n        } }, { key: '_remuxVideo', value: function _remuxVideo()\n\n        {var _remuxVideoMdat2 =\n\n\n\n            this._remuxVideoMdat(),videoMdat = _remuxVideoMdat2.videoMdat,baseDts = _remuxVideoMdat2.baseDts;\n\n            var moof = _mp4_generator2.default.moof(this._videoTrack, baseDts, this._videoSeq);\n\n\n            return (0, _utils.mergeTypedArray)(moof, videoMdat);\n        } }, { key: '_remuxAudioMdat', value: function _remuxAudioMdat()\n        {var _this2 = this;\n            var audioMdat = _mp4_generator2.default.mdat(this._audioTrack.length);\n\n            var offset = 8,\n            track = this._audioTrack,\n            meta = track.meta,\n            refDuration = meta.refSampleDuration,\n            samples = track.samples,\n            baseDts = this._audioTimebase,\n            mp4Samples = [];\n\n            samples.forEach(function (accSample, index) {\n                var dts = _this2._audioTimebase,\n                cts = 0,\n                pts = dts + cts;\n\n                audioMdat.set(accSample.unit, offset);\n\n                var sampleSize = accSample.unit.byteLength;\n\n                _this2._audioTimebase += refDuration;\n\n                mp4Samples.push({\n                    dts: dts,\n                    pts: pts,\n                    cts: cts,\n                    sampleSize: sampleSize,\n                    duration: refDuration,\n                    chunkOffset: offset,\n                    flags: {\n                        isLeading: 0,\n                        dependsOn: 1, // origin is 1\n                        isDepended: 0,\n                        hasRedundancy: 0 } });\n\n\n\n                offset += sampleSize;\n\n            });\n\n            track.samples = mp4Samples;\n            this._audioSeg++;\n\n            return {\n                baseDts: baseDts,\n                audioMdat: audioMdat };\n\n\n        } }]);return MP4Remux;}();exports.default = MP4Remux;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///27\n")},function(module,exports,__webpack_require__){"use strict";eval("Object.defineProperty(exports, \"__esModule\", { value: true });var MP4 = {};\n\nMP4.types = {\n\t// codingname\n\tavc1: [],\n\tavcC: [],\n\tbtrt: [],\n\tdinf: [],\n\tdref: [],\n\tesds: [],\n\tftyp: [],\n\thdlr: [],\n\tmdat: [],\n\tmdhd: [],\n\tmdia: [],\n\tmfhd: [],\n\tminf: [],\n\tmoof: [],\n\tmoov: [],\n\tmp4a: [],\n\t'.mp3': [],\n\tmvex: [],\n\tmvhd: [],\n\tpasp: [],\n\tsdtp: [],\n\tstbl: [],\n\tstco: [],\n\tstsc: [],\n\tstsd: [],\n\tstsz: [],\n\tstts: [],\n\ttfdt: [],\n\ttfhd: [],\n\ttraf: [],\n\ttrak: [],\n\ttrun: [],\n\ttrex: [],\n\ttkhd: [],\n\tvmhd: [],\n\tsmhd: [],\n\tfree: [],\n\tstss: [],\n\tctts: [] };\n\n\n\nMP4.symbolValue = {\n\tFTYP: new Uint8Array([\n\t0x69, 0x73, 0x6F, 0x6D, // major_brand: isom\n\t0x0, 0x0, 0x0, 0x1, // minor_version: 0x01\n\t0x69, 0x73, 0x6F, 0x6D, // isom\n\t0x61, 0x76, 0x63, 0x31 // avc1\n\t]),\n\tHDLR_VIDEO: new Uint8Array([\n\t0x00, 0x00, 0x00, 0x00, // version(0) + flags\n\t0x00, 0x00, 0x00, 0x00, // pre_defined\n\t0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n\t0x00, 0x00, 0x00, 0x00, // reserved: 3 * 4 bytes\n\t0x00, 0x00, 0x00, 0x00,\n\t0x00, 0x00, 0x00, 0x00,\n\t0x56, 0x69, 0x64, 0x65,\n\t0x6F, 0x48, 0x61, 0x6E,\n\t0x64, 0x6C, 0x65, 0x72, 0x00 // name: VideoHandler\n\t]),\n\tHDLR_AUDIO: new Uint8Array([\n\t0x00, 0x00, 0x00, 0x00, // version(0) + flags\n\t0x00, 0x00, 0x00, 0x00, // pre_defined\n\t0x73, 0x6F, 0x75, 0x6E, // handler_type: 'soun'\n\t0x00, 0x00, 0x00, 0x00, // reserved: 3 * 4 bytes\n\t0x00, 0x00, 0x00, 0x00,\n\t0x00, 0x00, 0x00, 0x00,\n\t0x53, 0x6F, 0x75, 0x6E,\n\t0x64, 0x48, 0x61, 0x6E,\n\t0x64, 0x6C, 0x65, 0x72, 0x00 // name: SoundHandler\n\t]),\n\tSTSC: new Uint8Array([\n\t0x00, 0x00, 0x00, 0x00, // version(0) + flags\n\t0x00, 0x00, 0x00, 0x01, // entry_count\n\t0x00, 0x00, 0x00, 0x01,\n\t0x00, 0x00, 0x00, 0x01,\n\t0x00, 0x00, 0x00, 0x01]),\n\n\tFSTTS: new Uint8Array([\n\t0x00, 0x00, 0x00, 0x00, // version(0) + flags\n\t0x00, 0x00, 0x00, 0x00 // entry_count\n\t]),\n\tFSTSC: new Uint8Array([\n\t0x00, 0x00, 0x00, 0x00, // version(0) + flags\n\t0x00, 0x00, 0x00, 0x00 // entry_count\n\t]),\n\tFSTSZ: new Uint8Array([\n\t0x00, 0x00, 0x00, 0x00, // version(0) + flags\n\t0x00, 0x00, 0x00, 0x00, // sample_size\n\t0x00, 0x00, 0x00, 0x00 // sample_count\n\t]),\n\tFSTCO: new Uint8Array([\n\t0x00, 0x00, 0x00, 0x00, // version(0) + flags\n\t0x00, 0x00, 0x00, 0x00 // entry_count\n\t]),\n\tSTTS: new Uint8Array([\n\t0x00, 0x00, 0x00, 0x00 // version(0) + flags\n\t]),\n\tCTTS: new Uint8Array([\n\t0x00, 0x00, 0x00, 0x00 // version(0) + flags\n\t]),\n\tSTCO: new Uint8Array([\n\t0x00, 0x00, 0x00, 0x00 // version(0) + flags\n\t]),\n\tSTSZ: new Uint8Array([\n\t0x00, 0x00, 0x00, 0x00 // version(0) + flags\n\t]),\n\tSTSD: new Uint8Array([\n\t0x00, 0x00, 0x00, 0x00, // version(0) + flags\n\t0x00, 0x00, 0x00, 0x01 // entry_count\n\t]),\n\tDREF: new Uint8Array([\n\t0x00, 0x00, 0x00, 0x00, // version(0) + flags\n\t0x00, 0x00, 0x00, 0x01, // entry_count\n\t0x00, 0x00, 0x00, 0x0C, // entry_size\n\t0x75, 0x72, 0x6C, 0x20, // type 'url '\n\t0x00, 0x00, 0x00, 0x01 // version(0) + flags\n\t]),\n\tVMHD: new Uint8Array([\n\t0x00, 0x00, 0x00, 0x01, // version(0) + flags\n\t0x00, 0x00, // graphicsmode: 2 bytes\n\t0x00, 0x00, 0x00, 0x00, // opcolor: 3 * 2 bytes\n\t0x00, 0x00]),\n\n\tSMHD: new Uint8Array([\n\t0x00, 0x00, 0x00, 0x00, // version(0) + flags\n\t0x00, 0x00, 0x00, 0x00 // balance(2) + reserved(2)\n\t]),\n\tSTSS: new Uint8Array([\n\t0x00, 0x00, 0x00, 0x00 // version(0) + flags\n\t])\n\n\n\t/**\n     * @param type {MP4.types} one of MP4.types\n     * @param buffers {Array} the body buffer of box.\n     * @return buffer {TypeArray} the complete box buffer.\n     */ };\nMP4.box = function (type) {\n\tvar boxLength = 8; // include the total 8 byte length of size and type\n\n\tvar buffers = Array.prototype.slice.call(arguments, 1);\n\n\tbuffers.forEach(function (val) {\n\t\tboxLength += val.byteLength;\n\t});\n\n\tvar boxBuffer = new Uint8Array(boxLength);\n\t// the first four byte stands for boxLength\n\tboxBuffer[0] = boxLength >> 24 & 0xff;\n\tboxBuffer[1] = boxLength >> 16 & 0xff;\n\tboxBuffer[2] = boxLength >> 8 & 0xff;\n\tboxBuffer[3] = boxLength & 0xff;\n\n\t// the second four byte is box's type\n\tboxBuffer.set(type, 4);\n\n\tvar offset = 8; // the byteLength of type and size\n\n\tbuffers.forEach(function (val) {\n\t\tboxBuffer.set(val, offset);\n\t\toffset += val.byteLength;\n\t});\n\n\treturn boxBuffer;\n\n};\n\nMP4.free = function () {\n\treturn MP4.box(MP4.types.free);\n};\n\nMP4.moof = function (track, baseDTS, seq) {\n\treturn MP4.box(MP4.types.moof, // whole box\n\tMP4.mfhd(seq), // mfhd box\n\tMP4.traf(track, baseDTS) // the subset box\n\t);\n};\n\n// it is a fullBox not box!\nMP4.mfhd = function (seq) {\n\treturn MP4.fragmentBox(MP4.types.mfhd, seq);\n};\n\nMP4.mdat = function (length) {\n\tlength += 8;\n\tvar mdat = new Uint8Array(length);\n\n\tvar view = new DataView(mdat.buffer);\n\n\tview.setUint32(0, length);\n\tmdat.set(MP4.types.mdat, 4);\n\n\treturn mdat;\n};\n\nMP4.traf = function (track, baseDTS) {\n\n\t// track fragment header\n\tvar tfhd = MP4.tfhd(track.id);\n\n\t// track fragment Decode Time\n\tvar tfdt = MP4.tfdt(baseDTS);\n\n\t// SampleDependencyTypeBox\n\tvar sdtp = MP4.sdtp(track);\n\n\t// TrackRunBox\n\t// the second param is data_offset. it is the value from moof to mdat ,which\n\t// doesn't include trun as it is calculated in MP4.trun func\n\t// more information from https://github.com/video-dev/hls.js/commit/a4d91f1563799787472f4edd1ffc8233a7deda4c#diff-5370391fc0f63f30e8498af38d9c443fR552\n\tvar trun = MP4.trun(track,\n\t8 + // moof\n\t16 + // mfhd\n\t8 + // traf\n\t16 + // tfhd\n\t16 + // tfdt\n\t//trun  in the function to add trun.length\n\tsdtp.byteLength + // sdtp length\n\t8 //mdat\n\t);\n\n\n\treturn MP4.box(MP4.types.traf, tfhd, tfdt, trun, sdtp);\n\n};\n\n// TrackRunBox\nMP4.trun = function (track, offset) {\n\tvar samples = track.samples || [],\n\tsampleCount = samples.length,\n\tbufferLength = 12 + 16 * sampleCount, // 12: 3 * 32bit. 16: 4 * 32bit\n\tbuffer = new Uint8Array(bufferLength);\n\n\toffset += 8 + bufferLength; // 8: type + size\n\n\t// not include first_sample_flags\n\tbuffer.set([\n\t0x00, // version\n\t0x00,\n\t0x0F,\n\t0x01, // flags:the total sum of listed flags in mp4\n\tsampleCount >>> 24 & 0xFF, // sample_count\n\tsampleCount >>> 16 & 0xFF,\n\tsampleCount >>> 8 & 0xFF,\n\tsampleCount & 0xFF,\n\toffset >>> 24 & 0xFF, // data_offset\n\toffset >>> 16 & 0xFF,\n\toffset >>> 8 & 0xFF,\n\toffset & 0xFF],\n\t0);\n\n\tsamples.forEach(function (sample, index) {var\n\n\t\tduration =\n\n\n\n\t\tsample.duration,sampleSize = sample.sampleSize,flags = sample.flags,cts = sample.cts;\n\n\t\tbuffer.set([\n\t\tduration >>> 24 & 0xFF, // sample_duration\n\t\tduration >>> 16 & 0xFF,\n\t\tduration >>> 8 & 0xFF,\n\t\tduration & 0xFF,\n\t\tsampleSize >>> 24 & 0xFF, // sample_size\n\t\tsampleSize >>> 16 & 0xFF,\n\t\tsampleSize >>> 8 & 0xFF,\n\t\tsampleSize & 0xFF,\n\t\tflags.isLeading << 2 | flags.dependsOn, // sample_flags\n\t\tflags.isDepended << 6 | flags.hasRedundancy << 4 | flags.isNonSync,\n\t\t0x00,\n\t\t0x00, // sample_degradation_priority\n\t\tcts >>> 24 & 0xFF, // sample_composition_time_offset\n\t\tcts >>> 16 & 0xFF,\n\t\tcts >>> 8 & 0xFF,\n\t\tcts & 0xFF],\n\t\t12 + 16 * index);\n\t});\n\treturn MP4.box(MP4.types.trun, buffer);\n};\n\n/**\n    * @name SampleDependencyTypeBox\n    * @desc extends fullbox and save some values about dependency flags\n    *      like reserved{always 0} sample_depends_on sample_is_depended_on\n    * @return fullbox + 8 * sample_count\n    */\nMP4.sdtp = function (track) {\n\tvar samples = track.samples || [],\n\tlength = samples.length,\n\tbuffer = new Uint8Array(length + 4);\n\n\tfor (var i = 0, flags; i < length; i++) {\n\t\tflags = samples[i].flags;\n\t\t// skip 4B version && type which are always 0x00\n\t\tbuffer[i + 4] = flags.dependsOn << 4 | flags.isDepended << 2 | flags.hasRedundancy;\n\t\t// skip 2bit reserved flag which default value is 0b00;\n\t}\n\treturn MP4.box(MP4.types.sdtp, buffer);\n\n};\n\nMP4.tfhd = function (trackId) {\n\treturn MP4.fragmentBox(MP4.types.tfhd, trackId);\n};\n\nMP4.tfdt = function (baseDTS) {\n\treturn MP4.fragmentBox(MP4.types.tfdt, baseDTS);\n};\n\nMP4.fragmentBox = function (type, param) {\n\tvar buffer = new Uint8Array([\n\t0x00, 0x00, 0x00, // flgs\n\t0x00, // version\n\tparam >>> 24 & 0xFF, // track_ID\n\tparam >>> 16 & 0xFF,\n\tparam >>> 8 & 0xFF,\n\tparam & 0xFF]);\n\n\treturn MP4.box(type, buffer);\n};\n\nMP4.ftyp = function () {\n\treturn MP4.box(MP4.types.ftyp, MP4.symbolValue.FTYP);\n};\n\nMP4.initBox = function (meta1, meta2) {\n\tvar ftyp = MP4.box(MP4.types.ftyp, MP4.symbolValue.FTYP),\n\tmoov = MP4.fmoov(meta1, meta2);\n\n\tvar buffer = new Uint8Array(ftyp.byteLength + moov.byteLength);\n\n\tbuffer.set(ftyp, 0);\n\tbuffer.set(moov, ftyp.byteLength);\n\treturn buffer;\n};\n\n\n\nMP4.fmoov = function (meta1, meta2) {\n\tvar mvhd = MP4.mvhd(meta1.timescale, meta1.duration);\n\tif (meta2) {\n\t\treturn MP4.box(MP4.types.moov, mvhd, MP4.trak(meta1), MP4.trak(meta2), MP4.mvex(1, 2));\n\t}\n\n\treturn MP4.box(MP4.types.moov, mvhd, MP4.trak(meta1), MP4.mvex(meta1.id));\n\n\n\t// return MP4.box(MP4.types.moov, mvhd, trak, mvex);\n};\n\n\n// TODO\nMP4.moov = function (mvhd, trak, mvex) {\n\treturn MP4.box(MP4.types.moov, mvhd, trak);\n\t// return MP4.box(MP4.types.moov, mvhd, videoTrak, audioTrak);\n};\n\nMP4.mvex = function (id1, id2) {\n\tif (id2) {\n\t\treturn MP4.box(MP4.types.mvex, MP4.trex(id1), MP4.trex(id2));\n\t}\n\treturn MP4.box(MP4.types.mvex, MP4.trex(id1));\n};\n\nMP4.trex = function (trackId) {\n\tvar buffer = new Uint8Array([\n\t0x00, 0x00, 0x00, 0x00, // version(0) + flags\n\ttrackId >>> 24 & 0xFF, // track_ID\n\ttrackId >>> 16 & 0xFF,\n\ttrackId >>> 8 & 0xFF,\n\ttrackId & 0xFF,\n\t0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n\t0x00, 0x00, 0x00, 0x00, // default_sample_duration\n\t0x00, 0x00, 0x00, 0x00, // default_sample_size\n\t0x00, 0x01, 0x00, 0x01 // default_sample_flags\n\t]);\n\treturn MP4.box(MP4.types.trex, buffer);\n};\n\n\n\nMP4.trak = function (meta) {\n\treturn MP4.box(MP4.types.trak, MP4.tkhd(meta), MP4.mdia(meta));\n};\n\nMP4.mdia = function (meta) {\n\treturn MP4.box(MP4.types.mdia, MP4.mdhd(meta), MP4.hdlr(meta), MP4.minf(meta));\n};\n\n// declares media type\nMP4.hdlr = function (meta) {\n\treturn meta.type === 'video' ?\n\tMP4.box(MP4.types.hdlr, MP4.symbolValue.HDLR_VIDEO) :\n\tMP4.box(MP4.types.hdlr, MP4.symbolValue.HDLR_AUDIO);\n};\n\nMP4.minf = function (meta) {\n\tvar type_mdh = meta.type === 'video' ?\n\tMP4.box(MP4.types.vmhd, MP4.symbolValue.VMHD) :\n\tMP4.box(MP4.types.smhd, MP4.symbolValue.SMHD);\n\n\t// TODO you can replace fstbl as stbl when you want to produce standard mp4 not fragmented mp4\n\treturn MP4.box(MP4.types.minf, type_mdh, MP4.dinf(), MP4.fstbl(meta));\n\n};\n\nMP4.dinf = function () {\n\tvar dref = MP4.box(MP4.types.dref, MP4.symbolValue.DREF);\n\n\treturn MP4.box(MP4.types.dinf, dref);\n};\n\nMP4.stss = function (meta) {var\n\n\ttrack =\n\tmeta.track;\n\n\tvar samples = track.samples;\n\n\tvar keyframes = [];\n\n\n\tsamples.forEach(function (_ref,\n\n\tindex) {var keyframe = _ref.keyframe;\n\t\tif (keyframe) keyframes.push(index);\n\t});\n\n\tvar stssBuffer = new DataView(new ArrayBuffer(4 + keyframes.length * 4));\n\n\tstssBuffer.setUint32(0, keyframes.length);\n\n\tvar offset = 4;\n\tkeyframes.forEach(function (val) {\n\t\tstssBuffer.setUint32(offset, val + 1);\n\t\toffset += 4;\n\t});\n\n\treturn MP4.box(MP4.types.stss, MP4.symbolValue.STSS, new Uint8Array(stssBuffer.buffer));\n};\n\n// so important\n// sample table box\n// TODO: separate the audio trak and the video trak\nMP4.stbl = function (meta) {\n\tif (meta.type === 'audio') {\n\t\treturn MP4.box(MP4.types.stbl, MP4.stsd(meta), MP4.stts(meta), MP4.stsc(meta), MP4.stsz(meta), MP4.stco(meta));\n\t} else {\n\t\treturn MP4.box(MP4.types.stbl, MP4.stsd(meta), MP4.stts(meta), MP4.ctts(meta), MP4.stsc(meta), MP4.stss(meta), MP4.stsz(meta), MP4.stco(meta));\n\t}\n};\n\n/**\n    * used for fmp4 stbl box\n    */\nMP4.fstbl = function (meta) {\n\treturn MP4.box(MP4.types.stbl, // type: stbl\n\tMP4.stsd(meta), // Sample Description Table\n\tMP4.box(MP4.types.stts, MP4.symbolValue.FSTTS), // Time-To-Sample\n\tMP4.box(MP4.types.stsc, MP4.symbolValue.FSTSC), // Sample-To-Chunk\n\tMP4.box(MP4.types.stsz, MP4.symbolValue.FSTSZ), // Sample size\n\tMP4.box(MP4.types.stco, MP4.symbolValue.FSTCO) // Chunk offset\n\t);\n};\n\nMP4.stts = function (meta) {\n\tvar\n\ttrack =\n\tmeta.track,\n\tcontentData = [],\n\tsampleDeltas = [];\n\n\tvar\n\tsamples =\n\ttrack.samples,delta = samples[0].duration,\n\tcount = 0,\n\tsamplesLength = samples.length;\n\n\tsamples.forEach(function (_ref2,\n\n\tindex) {var duration = _ref2.duration;\n\t\tif (duration === delta) {\n\t\t\tcount++;\n\t\t} else {\n\t\t\tcontentData.push([count, delta]);\n\t\t\tdelta = duration;\n\t\t\tcount = 1;\n\t\t}\n\t\t// when meet the last sample,\n\t\t// save its delta and count\n\t\tif (index === samplesLength - 1) {\n\t\t\tcontentData.push([count, delta]);\n\t\t}\n\t});\n\n\t// initial countBuffer\n\tvar sampleBuffer = new DataView(new ArrayBuffer(8 * contentData.length + 4));\n\n\t// set the entry_count\n\tsampleBuffer.setUint32(0, contentData.length);\n\n\tvar offset = 4;\n\tcontentData.forEach(function (data) {\n\t\tsampleBuffer.setUint32(offset, data[0]);\n\t\tsampleBuffer.setUint32(offset + 4, data[1]);\n\t\toffset += 8;\n\t});\n\n\t// version + flag + sample_counts + sample_deltas\n\t// TODO: set the entry_count\n\treturn MP4.box(MP4.types.stts, MP4.symbolValue.STTS, new Uint8Array(sampleBuffer.buffer));\n\n};\n\nMP4.ctts = function (meta) {\n\tvar\n\ttrack =\n\tmeta.track,\n\tcontentData = [],\n\tsampleDeltas = [];\n\n\tvar\n\tsamples =\n\ttrack.samples,delta = samples[0].cts,\n\tcount = 0,\n\tsamplesLength = samples.length;\n\n\tsamples.forEach(function (_ref3,\n\n\tindex) {var cts = _ref3.cts;\n\t\tif (cts === delta) {\n\t\t\tcount++;\n\t\t} else {\n\t\t\tcontentData.push([count, delta]);\n\t\t\tdelta = cts;\n\t\t\tcount = 1;\n\t\t}\n\t\t// when meet the last sample,\n\t\t// save its delta and count\n\t\tif (index === samplesLength - 1) {\n\t\t\tcontentData.push([count, delta]);\n\t\t}\n\t});\n\n\t// initial countBuffer\n\tvar sampleBuffer = new DataView(new ArrayBuffer(8 * contentData.length + 4));\n\n\t// set the entry_count\n\tsampleBuffer.setUint32(0, contentData.length);\n\n\tvar offset = 4;\n\tcontentData.forEach(function (data) {\n\t\tsampleBuffer.setUint32(offset, data[0]);\n\t\tsampleBuffer.setUint32(offset + 4, data[1]);\n\t\toffset += 8;\n\t});\n\n\t// version + flag + sample_counts + sample_deltas\n\t// TODO: set the entry_count\n\treturn MP4.box(MP4.types.ctts, MP4.symbolValue.CTTS, new Uint8Array(sampleBuffer.buffer));\n\n};\n\nMP4.stco = function (meta) {var\n\n\tsamples =\n\tmeta.track.samples;\n\n\tvar stcoBuffer = new DataView(new ArrayBuffer(4 * samples.length + 4));\n\n\tstcoBuffer.setUint32(0, samples.length);\n\n\tvar offset = 4; // skip the entry_count\n\n\tsamples.forEach(function (sample) {\n\t\tstcoBuffer.setUint32(offset, sample.chunkOffset);\n\t\toffset += 4;\n\t});\n\n\n\treturn MP4.box(MP4.types.stco, MP4.symbolValue.STCO, new Uint8Array(stcoBuffer.buffer));\n\n};\n\nMP4.stsc = function (meta) {\n\t// only set 1,1,1 to keep every sample into one chunk\n\treturn MP4.box(MP4.types.stsc, MP4.symbolValue.STSC);\n};\n\nMP4.stsz = function (meta) {var\n\n\tsamples =\n\tmeta.track.samples;\n\n\tvar stszBuffer = new DataView(new ArrayBuffer(4 * samples.length + 8));\n\n\tstszBuffer.setUint32(0, 0); // set the sample_size to zero\n\n\tstszBuffer.setUint32(4, samples.length); // set the sample_counts\n\n\tvar offset = 8;\n\tsamples.forEach(function (_ref4)\n\n\t{var sampleSize = _ref4.sampleSize;\n\t\tstszBuffer.setUint32(offset, sampleSize);\n\t\toffset += 4;\n\t});\n\n\treturn MP4.box(MP4.types.stsz, MP4.symbolValue.STSZ, new Uint8Array(stszBuffer.buffer));\n};\n\nMP4.stsd = function (meta) {\n\n\treturn meta.type === 'video' ?\n\tMP4.box(MP4.types.stsd, MP4.symbolValue.STSD, MP4.avc1(meta)) // for AudioSampleEntry\n\t:\n\tmeta.codec === 'mp3' ? // audio\n\tMP4.box(MP4.types.stsd, MP4.symbolValue.STSD, MP4.mp3(meta)) // for mp3 format\n\t:\n\tMP4.box(MP4.types.stsd, MP4.symbolValue.STSD, MP4.mp4a(meta)); // for ACC , like mp4a\n\n\n};\n\nMP4.mp3 = function (meta) {var\n\n\tchannelCount =\n\n\tmeta.channelCount,audioSampleRate = meta.audioSampleRate;\n\n\tvar buffer = new Uint8Array([\n\t0x00, 0x00, 0x00, 0x00, // reserved(4)\n\t0x00, 0x00, 0x00, 0x01, // reserved(2) + data_reference_index(2)\n\t0x00, 0x00, 0x00, 0x00, // reserved: 2 * 4 bytes\n\t0x00, 0x00, 0x00, 0x00,\n\t0x00, channelCount, // channelCount(2)\n\t0x00, 0x10, // sampleSize(2)\n\t0x00, 0x00, 0x00, 0x00, // reserved(4)\n\tsampleRate >>> 8 & 0xFF, // Audio sample rate\n\tsampleRate & 0xFF,\n\t0x00, 0x00]);\n\n\n\treturn MP4.box(MP4.types['.mp3'], buffer);\n};\n\nMP4.mp4a = function (meta) {var\n\n\tchannelCount =\n\n\tmeta.channelCount,audioSampleRate = meta.audioSampleRate;\n\n\n\tvar buffer = new Uint8Array([\n\t0x00, 0x00, 0x00, 0x00, // reserved(4)\n\t0x00, 0x00, 0x00, 0x01, // reserved(2) + data_reference_index(2)\n\t0x00, 0x00, 0x00, 0x00, // reserved: 2 * 4 bytes\n\t0x00, 0x00, 0x00, 0x00,\n\t0x00, channelCount, // channelCount(2)\n\t0x00, 0x10, // sampleSize(2)\n\t0x00, 0x00, 0x00, 0x00, // reserved(4)\n\taudioSampleRate >>> 8 & 0xFF, // Audio sample rate\n\taudioSampleRate & 0xFF,\n\t0x00, 0x00]);\n\n\n\treturn MP4.box(MP4.types.mp4a, buffer, MP4.esds(meta));\n};\n\n// refer to mp4-generator.js \nMP4.esds = function (meta) {\n\tvar config = meta.config || [],\n\tconfigLen = config.length;\n\n\tvar buffer = new Uint8Array([\n\t0x00, 0x00, 0x00, 0x00, // version 0 + flags\n\n\t0x03, // descriptor_type\n\t0x17 + configLen, // length3\n\t0x00, 0x01, // es_id\n\t0x00, // stream_priority\n\n\t0x04, // descriptor_type\n\t0x0F + configLen, // length\n\t0x40, // codec: mpeg4_audio\n\t0x15, // stream_type: Audio\n\t0x00, 0x00, 0x00, // buffer_size\n\t0x00, 0x00, 0x00, 0x00, // maxBitrate\n\t0x00, 0x00, 0x00, 0x00, // avgBitrate\n\n\t0x05 // descriptor_type\n\t].concat([// length AudioSpecificConfig\n\tconfigLen]).\n\n\tconcat(config) // audio \n\t.concat([0x06, 0x01, 0x02]) // GASpecificConfig\n\t);\n\n\treturn MP4.box(MP4.types.esds, buffer);\n\n};\n\n\n\nMP4.avc1 = function (meta) {\n\tvar avcc = meta.avcc,\n\twidth = meta.codecWidth,\n\theight = meta.codecHeight;\n\n\n\tvar buffer = new Uint8Array([\n\t0x00, 0x00, 0x00, 0x00, // reserved(4)\n\t0x00, 0x00, 0x00, 0x01, // reserved(2) + data_reference_index(2)\n\t0x00, 0x00, 0x00, 0x00, // pre_defined(2) + reserved(2)\n\t0x00, 0x00, 0x00, 0x00, // pre_defined: 3 * 4 bytes\n\t0x00, 0x00, 0x00, 0x00,\n\t0x00, 0x00, 0x00, 0x00,\n\twidth >>> 8 & 0xFF, // width: 2 bytes\n\twidth & 0xFF,\n\theight >>> 8 & 0xFF, // height: 2 bytes\n\theight & 0xFF,\n\t0x00, 0x48, 0x00, 0x00, // horizresolution: 4 bytes\n\t0x00, 0x48, 0x00, 0x00, // vertresolution: 4 bytes\n\t0x00, 0x00, 0x00, 0x00, // reserved: 4 bytes\n\t0x00, 0x01, // frame_count\n\t0x0F, // compressorname length\n\t0x76, 0x69, 0x6c, 0x6c, // villainhr/av.js\n\t0x61, 0x69, 0x6e, 0x68,\n\t0x72, 0x2f, 0x61, 0x76,\n\t0x2e, 0x6a, 0x73, 0x00,\n\t0x00, 0x00, 0x00, 0x00,\n\t0x00, 0x00, 0x00, 0x00,\n\t0x00, 0x00, 0x00, 0x00,\n\t0x00, 0x00, 0x00,\n\t0x00, 0x18, // depth\n\t0xFF, 0xFF // pre_defined = -1\n\t]);\n\n\treturn MP4.box(MP4.types.avc1, buffer,\n\tMP4.box(MP4.types.avcC, avcc) // get AVC Decoder Configuration\n\t);\n};\n\nMP4.mdhd = function (meta) {var\n\n\ttimescale =\n\n\tmeta.timescale,duration = meta.duration;\n\n\n\treturn MP4.box(MP4.types.mdhd, new Uint8Array([\n\t0x00, 0x00, 0x00, 0x00, // version(0) + flags\n\t0x00, 0x00, 0x00, 0x00, // creation_time\n\t0x00, 0x00, 0x00, 0x00, // modification_time\n\ttimescale >>> 24 & 0xFF, // timescale: 4 bytes\n\ttimescale >>> 16 & 0xFF,\n\ttimescale >>> 8 & 0xFF,\n\ttimescale & 0xFF,\n\tduration >>> 24 & 0xFF, // duration: 4 bytes\n\tduration >>> 16 & 0xFF,\n\tduration >>> 8 & 0xFF,\n\tduration & 0xFF,\n\t0x55, 0xC4, // language: und (undetermined)\n\t0x00, 0x00 // pre_defined = 0\n\t]));\n};\n\nMP4.tkhd = function (meta) {var\n\n\tid =\n\n\n\n\n\tmeta.id,presentWidth = meta.presentWidth,track = meta.track,duration = meta.duration,presentHeight = meta.presentHeight;\n\n\n\tvar buf = new Uint8Array([\n\t0x00, 0x00, 0x00, 0x07, // version(0) + flags\n\t0x00, 0x00, 0x00, 0x00, // creation_time\n\t0x00, 0x00, 0x00, 0x00, // modification_time\n\tid >>> 24 & 0xFF, // track_ID: 4 bytes\n\tid >>> 16 & 0xFF,\n\tid >>> 8 & 0xFF,\n\tid & 0xFF,\n\t0x00, 0x00, 0x00, 0x00, // reserved: 4 bytes\n\tduration >>> 24 & 0xFF, // duration: 4 bytes\n\tduration >>> 16 & 0xFF,\n\tduration >>> 8 & 0xFF,\n\tduration & 0xFF,\n\t0x00, 0x00, 0x00, 0x00, // reserved: 2 * 4 bytes\n\t0x00, 0x00, 0x00, 0x00,\n\t0x00, 0x00, 0x00, 0x01, // layer(2bytes) + alternate_group(2bytes)\n\t0x01, 0x00, 0x00, 0x00, // volume(2bytes) + reserved(2bytes)\n\t0x00, 0x01, 0x00, 0x00, // ----begin composition matrix----\n\t0x00, 0x00, 0x00, 0x00,\n\t0x00, 0x00, 0x00, 0x00,\n\t0x00, 0x00, 0x00, 0x00,\n\t0x00, 0x01, 0x00, 0x00,\n\t0x00, 0x00, 0x00, 0x00,\n\t0x00, 0x00, 0x00, 0x00,\n\t0x00, 0x00, 0x00, 0x00,\n\t0x40, 0x00, 0x00, 0x00, // ----end composition matrix----\n\tpresentWidth >>> 8 & 0xFF, // presentWidth and presentHeight\n\tpresentWidth & 0xFF,\n\t0x00, 0x00,\n\tpresentHeight >>> 8 & 0xFF,\n\tpresentHeight & 0xFF,\n\t0x00, 0x00]);\n\n\n\tvar view = new DataView(buf.buffer);\n\n\n\tif (meta.type === 'video') {\n\t\tview.setUint16(34, 0);\n\t\tview.setUint16(36, 0);\n\t}\n\n\treturn MP4.box(MP4.types.tkhd, buf);\n};\n\n// MovieHeaderBox  defines overall information\nMP4.mvhd = function (timescale, duration) {\n\treturn MP4.box(MP4.types.mvhd, new Uint8Array([\n\t0x00, 0x00, 0x00, 0x00, // version(0) + flags\n\t0x00, 0x00, 0x00, 0x00, // creation_time\n\t0x00, 0x00, 0x00, 0x00, // modification_time\n\ttimescale >>> 24 & 0xFF, // timescale: 4 bytes\n\ttimescale >>> 16 & 0xFF,\n\ttimescale >>> 8 & 0xFF,\n\ttimescale & 0xFF,\n\tduration >>> 24 & 0xFF, // duration: 4 bytes\n\tduration >>> 16 & 0xFF,\n\tduration >>> 8 & 0xFF,\n\tduration & 0xFF,\n\t0x00, 0x01, 0x00, 0x00, // Preferred rate: 1.0\n\t0x01, 0x00, 0x00, 0x00, // PreferredVolume(1.0, 2bytes) + reserved(2bytes)\n\t0x00, 0x00, 0x00, 0x00, // reserved: 4 + 4 bytes\n\t0x00, 0x00, 0x00, 0x00,\n\t0x00, 0x01, 0x00, 0x00, // ----begin composition matrix----\n\t0x00, 0x00, 0x00, 0x00,\n\t0x00, 0x00, 0x00, 0x00,\n\t0x00, 0x00, 0x00, 0x00,\n\t0x00, 0x01, 0x00, 0x00,\n\t0x00, 0x00, 0x00, 0x00,\n\t0x00, 0x00, 0x00, 0x00,\n\t0x00, 0x00, 0x00, 0x00,\n\t0x40, 0x00, 0x00, 0x00, // ----end composition matrix----\n\t0x00, 0x00, 0x00, 0x00, // ----begin pre_defined 6 * 4 bytes----\n\t0x00, 0x00, 0x00, 0x00,\n\t0x00, 0x00, 0x00, 0x00,\n\t0x00, 0x00, 0x00, 0x00,\n\t0x00, 0x00, 0x00, 0x00,\n\t0x00, 0x00, 0x00, 0x00, // ----end pre_defined 6 * 4 bytes----\n\t0xFF, 0xFF, 0xFF, 0xFF // next_track_ID\n\t]));\n};\n\n\nMP4.init = function () {\n\t// set type name;\n\tObject.\n\tkeys(MP4.types).\n\tforEach(function (val) {\n\t\t// get the UTF-16 code format of name\n\t\tMP4.types[val] = [\n\t\tval.charCodeAt(0),\n\t\tval.charCodeAt(1),\n\t\tval.charCodeAt(2),\n\t\tval.charCodeAt(3)];\n\n\t});\n};\n\nMP4.init();exports.default =\n\n\n\nMP4;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///28\n")},function(module,exports,__webpack_require__){"use strict";eval("Object.defineProperty(exports, \"__esModule\", { value: true });var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var _sourceBufferControl = __webpack_require__(30);var _sourceBufferControl2 = _interopRequireDefault(_sourceBufferControl);\nvar _log = __webpack_require__(0);var _log2 = _interopRequireDefault(_log);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}\n\nvar log = new _log2.default('MSEControl');var\n\nMSEControl = function () {\n    function MSEControl(video) {_classCallCheck(this, MSEControl);\n        this._ms = new MediaSource();\n        this._video = video;\n        this._SUPPORT = this._detect();\n        this._sbList = [];\n\n        this._video.src = URL.createObjectURL(this._ms);\n\n        this._ms.addEventListener('sourceopen', this._msOpenEvent.bind(this), false);\n        this._ms.addEventListener('sourceended', this._msEndEvent.bind(this), false);\n        this._ms.addEventListener('sourceclose', this._msCloseEvent.bind(this), false);\n    }_createClass(MSEControl, [{ key: '_detect', value: function _detect()\n        {\n            var support = MediaSource.isTypeSupported;\n\n            return {\n                mp4: support('video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"') ||\n                support('video/mp4; codecs=\"avc1.58A01E, mp4a.40.2\"') ||\n                support('video/mp4; codecs=\"avc1.4D401E, mp4a.40.2\"') ||\n                support('video/mp4; codecs=\"avc1.64001E, mp4a.40.2\"'),\n                webm: support('video/webm; codecs=vp8'),\n                vp9: support('video/webm; codecs=vp9') };\n\n        }\n        /**\n           * @return {Promise} resolve: the new sourcebuffer\n           * @param {String} mime \n           */ }, { key: 'addSourceBuffer', value: function addSourceBuffer(\n        mime) {var _this = this;\n            if (typeof mime !== 'string')\n            throw new Error('addSourceBuffer(): invalid type, only receive string type, ' + mime);\n\n            if (!MediaSource.isTypeSupported(mime))\n            log.e(\"MSE don't support this mimeType, \", mime);\n\n            return this._msOpen().\n            then(function () {\n\n                var sb = new _sourceBufferControl2.default(_this._ms, _this._ms.addSourceBuffer(mime));\n\n                _this._sbList.push(sb);\n\n                return sb;\n\n            }).\n            catch(function (err) {\n                throw new Error(err);\n            });\n\n        } }, { key: '_addSourceBuffer', value: function _addSourceBuffer(\n        mime) {\n            if (!MediaSource.isTypeSupported(mime))\n            log.e(\"MSE don't support this mimeType, \", mime);\n\n            var sb = new _sourceBufferControl2.default(this._ms, this._ms.addSourceBuffer(mime));\n\n            this._sbList.push(sb);\n\n            return sb;\n        }\n        /**\n           * @return {Promise} when the ms become open then trigger\n           */ }, { key: '_msOpen', value: function _msOpen()\n        {var _this2 = this;\n            return new Promise(function (res, rej) {\n                if (_this2._ms.readyState === 'open') return res();\n\n                _this2._ms.addEventListener('sourceopen', function () {\n                    res();\n                }, false);\n            });\n        } }, { key: '_msOpenEvent', value: function _msOpenEvent()\n        {\n\n        } }, { key: '_msEndEvent', value: function _msEndEvent()\n        {\n\n        } }, { key: '_msCloseEvent', value: function _msCloseEvent()\n        {\n\n        } }]);return MSEControl;}();exports.default = MSEControl;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL01TRS9tc2VDb250cm9sLmpzPzBhOGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNvdXJjZUJ1ZmZlciBmcm9tICcuL2xpYi9zb3VyY2VCdWZmZXJDb250cm9sJztcbmltcG9ydCBMb2cgZnJvbSAnbGliL2xvZyc7XG5cbmxldCBsb2cgPSBuZXcgTG9nKCdNU0VDb250cm9sJyk7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1TRUNvbnRyb2wge1xuICAgIGNvbnN0cnVjdG9yKHZpZGVvKSB7XG4gICAgICAgIHRoaXMuX21zID0gbmV3IE1lZGlhU291cmNlKCk7XG4gICAgICAgIHRoaXMuX3ZpZGVvID0gdmlkZW87XG4gICAgICAgIHRoaXMuX1NVUFBPUlQgPSB0aGlzLl9kZXRlY3QoKTtcbiAgICAgICAgdGhpcy5fc2JMaXN0ID0gW107XG5cbiAgICAgICAgdGhpcy5fdmlkZW8uc3JjID0gVVJMLmNyZWF0ZU9iamVjdFVSTCh0aGlzLl9tcyk7XG5cbiAgICAgICAgdGhpcy5fbXMuYWRkRXZlbnRMaXN0ZW5lcignc291cmNlb3BlbicsIHRoaXMuX21zT3BlbkV2ZW50LmJpbmQodGhpcyksIGZhbHNlKTtcbiAgICAgICAgdGhpcy5fbXMuYWRkRXZlbnRMaXN0ZW5lcignc291cmNlZW5kZWQnLCB0aGlzLl9tc0VuZEV2ZW50LmJpbmQodGhpcyksIGZhbHNlKTtcbiAgICAgICAgdGhpcy5fbXMuYWRkRXZlbnRMaXN0ZW5lcignc291cmNlY2xvc2UnLCB0aGlzLl9tc0Nsb3NlRXZlbnQuYmluZCh0aGlzKSwgZmFsc2UpO1xuICAgIH1cbiAgICBfZGV0ZWN0KCkge1xuICAgICAgICBsZXQgc3VwcG9ydCA9IE1lZGlhU291cmNlLmlzVHlwZVN1cHBvcnRlZDtcblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbXA0OiBzdXBwb3J0KCd2aWRlby9tcDQ7IGNvZGVjcz1cImF2YzEuNDJFMDFFLCBtcDRhLjQwLjJcIicpIHx8XG4gICAgICAgICAgICAgICAgc3VwcG9ydCgndmlkZW8vbXA0OyBjb2RlY3M9XCJhdmMxLjU4QTAxRSwgbXA0YS40MC4yXCInKSB8fFxuICAgICAgICAgICAgICAgIHN1cHBvcnQoJ3ZpZGVvL21wNDsgY29kZWNzPVwiYXZjMS40RDQwMUUsIG1wNGEuNDAuMlwiJykgfHxcbiAgICAgICAgICAgICAgICBzdXBwb3J0KCd2aWRlby9tcDQ7IGNvZGVjcz1cImF2YzEuNjQwMDFFLCBtcDRhLjQwLjJcIicpLFxuICAgICAgICAgICAgd2VibTogc3VwcG9ydCgndmlkZW8vd2VibTsgY29kZWNzPXZwOCcpLFxuICAgICAgICAgICAgdnA5OiBzdXBwb3J0KCd2aWRlby93ZWJtOyBjb2RlY3M9dnA5JylcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBAcmV0dXJuIHtQcm9taXNlfSByZXNvbHZlOiB0aGUgbmV3IHNvdXJjZWJ1ZmZlclxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSBtaW1lIFxuICAgICAqL1xuICAgIGFkZFNvdXJjZUJ1ZmZlcihtaW1lKSB7XG4gICAgICAgIGlmICh0eXBlb2YgbWltZSAhPT0gJ3N0cmluZycpXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2FkZFNvdXJjZUJ1ZmZlcigpOiBpbnZhbGlkIHR5cGUsIG9ubHkgcmVjZWl2ZSBzdHJpbmcgdHlwZSwgJyArIG1pbWUpO1xuXG4gICAgICAgIGlmICghTWVkaWFTb3VyY2UuaXNUeXBlU3VwcG9ydGVkKG1pbWUpKVxuICAgICAgICAgICAgbG9nLmUoXCJNU0UgZG9uJ3Qgc3VwcG9ydCB0aGlzIG1pbWVUeXBlLCBcIiwgbWltZSk7XG5cbiAgICAgICAgcmV0dXJuIHRoaXMuX21zT3BlbigpXG4gICAgICAgICAgICAudGhlbigoKSA9PiB7XG5cbiAgICAgICAgICAgICAgICBsZXQgc2IgPSBuZXcgU291cmNlQnVmZmVyKHRoaXMuX21zLCB0aGlzLl9tcy5hZGRTb3VyY2VCdWZmZXIobWltZSkpXG5cbiAgICAgICAgICAgICAgICB0aGlzLl9zYkxpc3QucHVzaChzYik7XG5cbiAgICAgICAgICAgICAgICByZXR1cm4gc2I7XG5cbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAuY2F0Y2goZXJyID0+IHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoZXJyKTtcbiAgICAgICAgICAgIH0pXG5cbiAgICB9XG4gICAgX2FkZFNvdXJjZUJ1ZmZlcihtaW1lKXtcbiAgICAgICAgaWYgKCFNZWRpYVNvdXJjZS5pc1R5cGVTdXBwb3J0ZWQobWltZSkpXG4gICAgICAgIGxvZy5lKFwiTVNFIGRvbid0IHN1cHBvcnQgdGhpcyBtaW1lVHlwZSwgXCIsIG1pbWUpO1xuXG4gICAgICAgIGxldCBzYiA9IG5ldyBTb3VyY2VCdWZmZXIodGhpcy5fbXMsIHRoaXMuX21zLmFkZFNvdXJjZUJ1ZmZlcihtaW1lKSlcblxuICAgICAgICB0aGlzLl9zYkxpc3QucHVzaChzYik7XG5cbiAgICAgICAgcmV0dXJuIHNiO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAcmV0dXJuIHtQcm9taXNlfSB3aGVuIHRoZSBtcyBiZWNvbWUgb3BlbiB0aGVuIHRyaWdnZXJcbiAgICAgKi9cbiAgICBfbXNPcGVuKCkge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlcywgcmVqKSA9PiB7XG4gICAgICAgICAgICBpZiAodGhpcy5fbXMucmVhZHlTdGF0ZSA9PT0gJ29wZW4nKSByZXR1cm4gcmVzKCk7XG5cbiAgICAgICAgICAgIHRoaXMuX21zLmFkZEV2ZW50TGlzdGVuZXIoJ3NvdXJjZW9wZW4nLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgcmVzKCk7XG4gICAgICAgICAgICB9LCBmYWxzZSk7XG4gICAgICAgIH0pXG4gICAgfVxuICAgIF9tc09wZW5FdmVudCgpIHtcblxuICAgIH1cbiAgICBfbXNFbmRFdmVudCgpIHtcblxuICAgIH1cbiAgICBfbXNDbG9zZUV2ZW50KCkge1xuXG4gICAgfVxuXG5cbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL01TRS9tc2VDb250cm9sLmpzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///29\n")},function(module,exports,__webpack_require__){"use strict";eval("Object.defineProperty(exports, \"__esModule\", { value: true });var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var _log = __webpack_require__(0);var _log2 = _interopRequireDefault(_log);\nvar _utils = __webpack_require__(2);\n\n\nvar _helper = __webpack_require__(3);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}\n\n\n\n\nvar log = new _log2.default('SourceBufferControl');var\n\nSourceBufferControl = function () {\n    function SourceBufferControl(parentMediaSource, sourceBuffer, options) {_classCallCheck(this, SourceBufferControl);\n        this._ms = parentMediaSource;\n\n        this._sb = sourceBuffer;\n\n        this._memory = Object.assign({}, {\n            release: true,\n            time: 5000 },\n        options);\n\n        this._isReleasing = false;\n        this._recursive;\n        this._releasing;\n\n        this._tmpBuffer = [];\n\n        sourceBuffer.addEventListener('update', function () {}, false);\n        sourceBuffer.addEventListener('updateend', this._updateEndHandler.bind(this), false);\n\n        // now, don't to release\n        // this.release();\n\n    }_createClass(SourceBufferControl, [{ key: '_updateEndHandler', value: function _updateEndHandler()\n        {\n            // append rest buffer\n            if (this._tmpBuffer.length && !this._sb.updating) {\n\n                this._sb.appendBuffer((0, _utils.mergeUnit8Array)(this._tmpBuffer));\n                this._tmpBuffer = [];\n            }\n        } }, { key: '_couldRelease', value: function _couldRelease()\n\n        {\n            var timeRanges = this._sb.buffered;\n\n            // when the duration is NaN, throw an error. it couldn't contiue to release\n            // memory\n            if (this._ms.duration === NaN) {\n                log.e('the mediaSource duration is NaN, ' + this._ms);\n\n                return false;\n            }\n\n            // check sb is clearing the buffer check the sb has enough sourceBuffer\n            if (timeRanges.length <= 2) {\n\n                log.w('the buffer length is not enough, ', timeRanges.length);\n                return false;\n            }\n\n\n            // when is releasing && updaing, then quit release memory\n            return !(this._isReleasing || this._sb.updating);\n\n        } }, { key: 'clearBuffer', value: function clearBuffer()\n        {\n            clearTimeout(this._releasing);\n\n            if (this._sb.updating) {\n                this._releasing = setTimeout(this.clearBuffer.bind(this), 0);\n            } else {\n                var timeRanges = this._sb.buffered,\n                rangesLen = timeRanges.length;\n\n                var startTime = timeRanges.start(0),\n                endTime = timeRanges.end(rangesLen - 2);\n\n                console.log('clearBuffer is : ');\n                console.log('                  ', startTime, \": \", endTime);\n\n                this.\n                _sb.\n                remove(startTime, endTime);\n\n                this.release();\n            }\n\n        } }, { key: 'release', value: function release()\n        {\n\n            // when the duration is NaN, throw an error. it couldn't contiue to release\n            // memory\n            if (this._ms.duration === NaN) {\n                console.error('the mediaSource duration is NaN, ' + this._ms);\n            }\n\n            if (!this._couldRelease()) {\n                clearTimeout(this._recursive); // prevent dev calling release() fn repeatedly\n                this._recursive = setTimeout(this.release.bind(this), this._memory.time);\n            } else {\n                this.clearBuffer();\n            }\n\n\n        } }, { key: '_updateEnding', value: function _updateEnding()\n        {var _this = this;\n            return new Promise(function (res, rej) {\n                if (_this._sb.updating === false) return res();\n\n                var fn = function fn(e) {\n                    res();\n                    _this._sb.removeEventListener('updateend', fn);\n                };\n                _this._sb.addEventListener('updateend', fn.bind(_this), false);\n            });\n        } }, { key: 'appendBuffer', value: function appendBuffer(\n        buffer) {\n\n            this._tmpBuffer.push(buffer);\n\n            if (!this._sb.updating) {\n\n                this._sb.appendBuffer((0, _utils.mergeUnit8Array)(this._tmpBuffer));\n\n                this._tmpBuffer = [];\n\n\n                // need to remove, \n                console.log(this._ms.duration);\n            }\n        } }]);return SourceBufferControl;}();exports.default =\n\n\n\n\n\n\n\n\n\n\nSourceBufferControl;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL01TRS9saWIvc291cmNlQnVmZmVyQ29udHJvbC5qcz8zNzlmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBMb2cgZnJvbSAnbGliL2xvZyc7XG5pbXBvcnQge1xuICAgIG1lcmdlVW5pdDhBcnJheVxufSBmcm9tICdsaWIvdXRpbHMnO1xuaW1wb3J0IHtcbiAgICBkb3duZmlsZSxcbiAgICBjb25jYXRCdWZmZXJcbn0gZnJvbSAnZGVidWcvaGVscGVyJztcblxubGV0IGxvZyA9IG5ldyBMb2coJ1NvdXJjZUJ1ZmZlckNvbnRyb2wnKTtcblxuY2xhc3MgU291cmNlQnVmZmVyQ29udHJvbCB7XG4gICAgY29uc3RydWN0b3IocGFyZW50TWVkaWFTb3VyY2UsIHNvdXJjZUJ1ZmZlciwgb3B0aW9ucykge1xuICAgICAgICB0aGlzLl9tcyA9IHBhcmVudE1lZGlhU291cmNlO1xuXG4gICAgICAgIHRoaXMuX3NiID0gc291cmNlQnVmZmVyO1xuXG4gICAgICAgIHRoaXMuX21lbW9yeSA9IE9iamVjdC5hc3NpZ24oe30sIHtcbiAgICAgICAgICAgIHJlbGVhc2U6IHRydWUsXG4gICAgICAgICAgICB0aW1lOiA1MDAwXG4gICAgICAgIH0sIG9wdGlvbnMpO1xuXG4gICAgICAgIHRoaXMuX2lzUmVsZWFzaW5nID0gZmFsc2U7XG4gICAgICAgIHRoaXMuX3JlY3Vyc2l2ZTtcbiAgICAgICAgdGhpcy5fcmVsZWFzaW5nO1xuXG4gICAgICAgIHRoaXMuX3RtcEJ1ZmZlciA9IFtdO1xuXG4gICAgICAgIHNvdXJjZUJ1ZmZlci5hZGRFdmVudExpc3RlbmVyKCd1cGRhdGUnLCAoKSA9PiB7fSwgZmFsc2UpO1xuICAgICAgICBzb3VyY2VCdWZmZXIuYWRkRXZlbnRMaXN0ZW5lcigndXBkYXRlZW5kJywgdGhpcy5fdXBkYXRlRW5kSGFuZGxlci5iaW5kKHRoaXMpLCBmYWxzZSk7XG5cbiAgICAgICAgLy8gbm93LCBkb24ndCB0byByZWxlYXNlXG4gICAgICAgIC8vIHRoaXMucmVsZWFzZSgpO1xuXG4gICAgfVxuICAgIF91cGRhdGVFbmRIYW5kbGVyKCkge1xuICAgICAgICAvLyBhcHBlbmQgcmVzdCBidWZmZXJcbiAgICAgICAgaWYgKHRoaXMuX3RtcEJ1ZmZlci5sZW5ndGggJiYgIXRoaXMuX3NiLnVwZGF0aW5nKSB7XG5cbiAgICAgICAgICAgIHRoaXMuX3NiLmFwcGVuZEJ1ZmZlcihtZXJnZVVuaXQ4QXJyYXkodGhpcy5fdG1wQnVmZmVyKSk7XG4gICAgICAgICAgICB0aGlzLl90bXBCdWZmZXIgPSBbXTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICBfY291bGRSZWxlYXNlKCkge1xuICAgICAgICBsZXQgdGltZVJhbmdlcyA9IHRoaXMuX3NiLmJ1ZmZlcmVkO1xuXG4gICAgICAgICAgIC8vIHdoZW4gdGhlIGR1cmF0aW9uIGlzIE5hTiwgdGhyb3cgYW4gZXJyb3IuIGl0IGNvdWxkbid0IGNvbnRpdWUgdG8gcmVsZWFzZVxuICAgICAgICAvLyBtZW1vcnlcbiAgICAgICAgaWYgKHRoaXMuX21zLmR1cmF0aW9uID09PSBOYU4pIHtcbiAgICAgICAgICAgIGxvZy5lKCd0aGUgbWVkaWFTb3VyY2UgZHVyYXRpb24gaXMgTmFOLCAnICsgdGhpcy5fbXMpO1xuXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBjaGVjayBzYiBpcyBjbGVhcmluZyB0aGUgYnVmZmVyIGNoZWNrIHRoZSBzYiBoYXMgZW5vdWdoIHNvdXJjZUJ1ZmZlclxuICAgICAgICBpZiAodGltZVJhbmdlcy5sZW5ndGggPD0gMikge1xuXG4gICAgICAgICAgICBsb2cudygndGhlIGJ1ZmZlciBsZW5ndGggaXMgbm90IGVub3VnaCwgJywgdGltZVJhbmdlcy5sZW5ndGgpO1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG5cbiAgICAgXG4gICAgICAgIC8vIHdoZW4gaXMgcmVsZWFzaW5nICYmIHVwZGFpbmcsIHRoZW4gcXVpdCByZWxlYXNlIG1lbW9yeVxuICAgICAgICByZXR1cm4gISh0aGlzLl9pc1JlbGVhc2luZyB8fCB0aGlzLl9zYi51cGRhdGluZyk7XG5cbiAgICB9XG4gICAgY2xlYXJCdWZmZXIoKSB7XG4gICAgICAgIGNsZWFyVGltZW91dCh0aGlzLl9yZWxlYXNpbmcpO1xuXG4gICAgICAgIGlmICh0aGlzLl9zYi51cGRhdGluZykge1xuICAgICAgICAgICAgdGhpcy5fcmVsZWFzaW5nID0gc2V0VGltZW91dCh0aGlzLmNsZWFyQnVmZmVyLmJpbmQodGhpcyksIDApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbGV0IHRpbWVSYW5nZXMgPSB0aGlzLl9zYi5idWZmZXJlZCxcbiAgICAgICAgICAgICAgICByYW5nZXNMZW4gPSB0aW1lUmFuZ2VzLmxlbmd0aDtcblxuICAgICAgICAgICAgbGV0IHN0YXJ0VGltZSA9IHRpbWVSYW5nZXMuc3RhcnQoMCksXG4gICAgICAgICAgICAgICAgZW5kVGltZSA9IHRpbWVSYW5nZXMuZW5kKHJhbmdlc0xlbiAtIDIpO1xuXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnY2xlYXJCdWZmZXIgaXMgOiAnKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCcgICAgICAgICAgICAgICAgICAnLCBzdGFydFRpbWUsXCI6IFwiLGVuZFRpbWUpO1xuXG4gICAgICAgICAgICB0aGlzXG4gICAgICAgICAgICAgICAgLl9zYlxuICAgICAgICAgICAgICAgIC5yZW1vdmUoc3RhcnRUaW1lLCBlbmRUaW1lKTtcblxuICAgICAgICAgICAgdGhpcy5yZWxlYXNlKCk7XG4gICAgICAgIH1cblxuICAgIH1cbiAgICByZWxlYXNlKCkge1xuXG4gICAgICAgIC8vIHdoZW4gdGhlIGR1cmF0aW9uIGlzIE5hTiwgdGhyb3cgYW4gZXJyb3IuIGl0IGNvdWxkbid0IGNvbnRpdWUgdG8gcmVsZWFzZVxuICAgICAgICAvLyBtZW1vcnlcbiAgICAgICAgaWYgKHRoaXMuX21zLmR1cmF0aW9uID09PSBOYU4pIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ3RoZSBtZWRpYVNvdXJjZSBkdXJhdGlvbiBpcyBOYU4sICcgKyB0aGlzLl9tcyk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIXRoaXMuX2NvdWxkUmVsZWFzZSgpKSB7XG4gICAgICAgICAgICBjbGVhclRpbWVvdXQodGhpcy5fcmVjdXJzaXZlKTsgLy8gcHJldmVudCBkZXYgY2FsbGluZyByZWxlYXNlKCkgZm4gcmVwZWF0ZWRseVxuICAgICAgICAgICAgdGhpcy5fcmVjdXJzaXZlID0gc2V0VGltZW91dCh0aGlzLnJlbGVhc2UuYmluZCh0aGlzKSwgdGhpcy5fbWVtb3J5LnRpbWUpO1xuICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgIHRoaXMuY2xlYXJCdWZmZXIoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIFxuICAgIH1cbiAgICBfdXBkYXRlRW5kaW5nKCkge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlcywgcmVqKSA9PiB7XG4gICAgICAgICAgICBpZiAodGhpcy5fc2IudXBkYXRpbmcgPT09IGZhbHNlKSByZXR1cm4gcmVzKCk7XG5cbiAgICAgICAgICAgIHZhciBmbiA9IChlKSA9PiB7XG4gICAgICAgICAgICAgICAgcmVzKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5fc2IucmVtb3ZlRXZlbnRMaXN0ZW5lcigndXBkYXRlZW5kJywgZm4pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5fc2IuYWRkRXZlbnRMaXN0ZW5lcigndXBkYXRlZW5kJywgZm4uYmluZCh0aGlzKSwgZmFsc2UpO1xuICAgICAgICB9KVxuICAgIH1cbiAgICBhcHBlbmRCdWZmZXIoYnVmZmVyKSB7XG5cbiAgICAgICAgdGhpcy5fdG1wQnVmZmVyLnB1c2goYnVmZmVyKVxuXG4gICAgICAgIGlmICghdGhpcy5fc2IudXBkYXRpbmcpIHtcblxuICAgICAgICAgICAgdGhpcy5fc2IuYXBwZW5kQnVmZmVyKG1lcmdlVW5pdDhBcnJheSh0aGlzLl90bXBCdWZmZXIpKTtcblxuICAgICAgICAgICAgdGhpcy5fdG1wQnVmZmVyID0gW107XG5cblxuICAgICAgICAgICAgLy8gbmVlZCB0byByZW1vdmUsIFxuICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5fbXMuZHVyYXRpb24pO1xuICAgICAgICB9XG4gICAgfVxuXG59XG5cblxuXG5cblxuXG5cblxuZXhwb3J0IGRlZmF1bHQgU291cmNlQnVmZmVyQ29udHJvbDtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL01TRS9saWIvc291cmNlQnVmZmVyQ29udHJvbC5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///30\n")}]);